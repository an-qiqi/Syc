<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>模板</title>
    <url>/2021/10/19/test/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>测试</category>
      </categories>
      <tags>
        <tag>U3D</tag>
      </tags>
  </entry>
  <entry>
    <title>遗忘的知识</title>
    <url>/2022/03/03/%E9%81%97%E5%BF%98%E7%9A%84%E7%9F%A5%E8%AF%86/</url>
    <content><![CDATA[<p>(1) 点乘和叉乘</p>
<p>【点乘】:<br> 定义：a·b=|a|·|b|cos&lt;a,b&gt; 【注：粗体小写字母表示向量，&lt;a,b&gt;表示向量a,b的夹角，取值范围为[0，180]】<br> 几何意义：是一条边向另一条边的投影乘以另一条边的长度.<br> v1和v2向量的点乘运算：相应元素的乘积的和：v1( x1, y1，z1) * v2(x2, y2,z2) = (x1<em>x2) + (y1</em>y2) + (z1*z2);</p>
<p> 给定一个向量u和v，求u在v上的投影向量，如下图。<br> <img src="/images/interview/%E7%82%B9%E4%B9%98%E5%9B%BE.jpg"><br> 假设u在v上的投影向量是u’，且向量u和v的夹角为theta。一个向量有两个属性，大小和方向，我们先确定u’的大小（即长度，或者模），从u的末端做v的垂线，<br> 那么d就是u’的长度。而u’和v的方向是相同的，v的方向v/|v|也就是u’的方向。<br> <img src="/images/interview/%E7%82%B9%E4%B9%982.jpg"><br> 再求d的长度。<br> <img src="/images/interview/%E7%82%B9%E4%B9%983.jpg"></p>
<p> 注意 : 结果不是一个向量，而是一个标量。<br> 性质1： a<em>b = |a||b|Cos(θ) ，θ是向量a 和向量 b之间的夹角。<br> 性质2： a</em>b = b*a  满足乘法交换律</p>
<p> 关于这里的计算需要插播一个点，当两个单位向量的长度都是1的时候，向量的点乘就是他们夹角的余弦值。在游戏开发中会有归一化的操作，然后直接求夹角的情况，如果对这个知识点没有了解，可能看不懂夹角计算的原理。<br> 我们通过点积公式可以看出来a，b都是标量，都是正数，余弦值会根据角度有正负变化。<br> 当(0-90)°的时候，余弦值是正数，整个点乘公式都是正的。<br> 当90°的时候，余弦值为0，整个公式为0。<br> 当(90-180)°的时候，余弦值是负数，整个公式为负的。<br> 利用这个性质，我们可以根据点乘的正负，做一些判断了。</p>
<p> Unity项目应用：<br> 1.根据点乘计算两个向量的夹角。&lt;a,b&gt;= arccos(a·b / (|a|·|b|))<br> 2.根据点乘的正负值，得到夹角大小范围，&gt;0，则夹角（0,90）&lt;0,则夹角（90,180），可以利用这点判断一个多边形是面向摄像机还是背向摄像机。<br> 3.根据点乘的大小，得到向量的投影长度，反应了向量的长度关系。</p>
<p>【叉乘】:<br> 定义：c = a x b，其中a b c均为向量<br> 几何意义是：得到一个与这两个向量都垂直的向量，这个向量的模是以两个向量为边的平行四边形的面积<br> 推导<br> <img src="/images/interview/%E5%8F%89%E4%B9%98.jpg"><br> v1和v2向量的叉乘运算：相应元素的乘积的和：v1( x1, y1，z1) x v2(x2, y2, z2) = {(y1<em>z2 - y2</em>z1),(x2<em>z1 - x1</em>z2),(x1<em>y2-x2</em>y1)};</p>
<p> 性质1：c⊥a，c⊥b，即向量c与向量a，b所在平面垂直<br> 性质2：模长|c| = |a||b| sin&lt;a,b&gt;<br> 性质3：(数学上)满足右手法则, a x b = -b x a，所以我们可以使用叉乘的正负值来判断a，b的相对位置，即b是处于a的顺时针还是逆时针方向。<br> 叉乘的右手定则是用来确定叉乘积的方向的。</p>
<p> Unity项目应用：<br> 1.根据叉乘得到a，b向量的相对位置，和顺时针或逆时针方位。<br> 2.得到a，b夹角的正弦值，计算向量的夹角（0,90），可以配合点乘和Angle方法计算出含正负的方向。<br> 3.根据叉乘大小，得到a，b向量所形成的平行四边形的面积大小，根据面积大小得到向量的相对大小。</p>
<p> 简单的说: 点乘判断角度，叉乘判断方向。<br> 形象的说: 当一个敌人在你身后的时候，叉乘可以判断你是往左转还是往右转更好的转向敌人，点乘得到你当前的面朝向的方向和你到敌人的方向的所成的角度大小。</p>
<p> 简单来说，在两个物体的位置关系判断中。<br> 点乘可以判断出目标物体在我的前方还是后方。大于零在前方，小于零在后方。<br> 叉乘可以判断出目标物体在我的左边还是右边。大于零在右方，小于零在左方。</p>
<p> 在计算机图形学中。<br> 点乘可以用来计算夹角余弦值。<br> 叉乘可以用来计算平面法向量。</p>
<p>=========================================================分割线=========================================================<br>=========================================================分割线=========================================================<br>(2)Lua 原表<br> 在 Lua table 中我们可以访问对应的 key 来得到 value 值，但是却无法对两个 table 进行操作(比如相加)。<br> 因此 Lua 提供了元表(Metatable)，允许我们改变 table 的行为，每个行为关联了对应的元方法。<br> 例如，使用元表我们可以定义 Lua 如何计算两个 table 的相加操作 a+b。<br> 当 Lua 试图对两个表进行相加时，先检查两者之一是否有元表，之后检查是否有一个叫 __add 的字段，若找到，则调用对应的值。 __add 等即时字段，其对应的值（往往是一个函数或是 table）就是”元方法”。<br> 有两个很重要的函数来处理元表：<br>   setmetatable(table,metatable): 对指定 table 设置元表(metatable)，如果元表(metatable)中存在 __metatable 键值，setmetatable 会失败。<br>   getmetatable(table): 返回对象的元表(metatable)。</p>
<p> Lua table有一套hashmap的查找机制，如果访问一个表中并不存在的字段，不会立即返回nil，而是先触发一套查找机制，也是我们用以实现面向对象的方法。<br> 简单的描述：元表就是用于查找的备用表。</p>
<p>【构成类】:</p>
<p> 元方法  __index<br> 简单的描述：是当table中一个元素不存在的时候，会触发寻找元表的__index元方法，如果不存在，则返回nil，如果存在，则返回结果。    </p>
<p>【只读不写表】:<br> 1，利用元方法__newindex的特性（对字段进行赋值的时候如果表中没有则执行__newindex中的方法），新建一个空表代替原来的表，并对空表进行元方法重写实现table的相应功能。<br> 这样对任何字段的修改，在空表中肯定都找不到，只能只能统一的入口方法__newindex，我们不处理就能实现只读。<br> 2，再利用__index元方法保存原来的表， 因为取值的时候如果找不到就会去__index中取。</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">const</span><span class="params">(t)</span></span></span><br><span class="line">    <span class="keyword">local</span> temp = t <span class="comment">--temp以upvalue的形式存储t</span></span><br><span class="line">    <span class="keyword">local</span> ret = &#123;&#125;</span><br><span class="line">    <span class="keyword">local</span> mt = &#123;</span><br><span class="line">       <span class="comment">--__index = t, 或者这样</span></span><br><span class="line">　　　　<span class="built_in">__index</span> = <span class="function"><span class="keyword">function</span><span class="params">(t,k)</span></span></span><br><span class="line">　　　　　　<span class="keyword">return</span> temp[k]</span><br><span class="line">　　　　<span class="keyword">end</span>,</span><br><span class="line">　　　　<span class="built_in">__newindex</span> = <span class="function"><span class="keyword">function</span><span class="params">()</span></span><span class="comment">--空函数覆盖newindex</span></span><br><span class="line"></span><br><span class="line">　　　　<span class="keyword">end</span>,</span><br><span class="line"></span><br><span class="line">　　　　<span class="built_in">__metatable</span> = <span class="literal">false</span>,</span><br><span class="line">　　&#125;</span><br><span class="line">　　<span class="built_in">setmetatable</span>(ret,mt)</span><br><span class="line">　　<span class="keyword">return</span> ret</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p>【table的 弱引用和强引用】:</p>
<p> 一.强引用table<br> lua中的table是引用类型，更准确地说，是强引用类型。如下第二段代码，在内存中有一个{name = “123”}的table，并用a和b[1]指向它，然后置空a，此时就只剩下b[1]指向它了。<br> 这种引用方式和我们所认知的引用是一样的。值得一提的是，这里的a = nil为什么不等同于{name = “123”} = nil呢，意思是将指向的这个表删掉呢？<br> 因为lua是具备自动内存管理的，我们只管创建，删除操作是lua自动进行的，因此这里的a = nil并不是删除表，而是指将a对这张表的引用去掉，当没有地方引用这张表时，这张表就会被lua自动清掉。</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">a = &#123;name = <span class="string">&quot;123&quot;</span>&#125;</span><br><span class="line">b = a</span><br><span class="line">a.name = <span class="string">&quot;456&quot;</span></span><br><span class="line"><span class="built_in">print</span>(b.name)<span class="comment">--456</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a = &#123;name = <span class="string">&quot;123&quot;</span>&#125;</span><br><span class="line">b = &#123;&#125;</span><br><span class="line">b[<span class="number">1</span>] = a</span><br><span class="line">a = <span class="literal">nil</span></span><br><span class="line"><span class="built_in">print</span>(b[<span class="number">1</span>].name)<span class="comment">--123</span></span><br></pre></td></tr></table></figure>
<p> 二.弱引用table<br> 如上所说，一般我们创建的table都是强引用table，即key和value都是强引用，强引用可以防止他们指向的对象被回收。如果一个对象存在强引用，那么它就不会被回收。而相对地，就有弱引用，弱引用不能防止对象被回收。<br> 如果一个对象只存在弱引用，那么它就会 被回收。lua中通过弱引用table来实现弱引用。弱引用table有三种形式：<br> 1.key值弱引用。设置方法为setmetatable(b, {__mode = “k”})<br> 2.value值弱引用。设置方法为setmetatable(b, {__mode = “v”})<br> 3.key和value值弱引用。设置方法为setmetatable(b, {__mode = “kv”})<br> 当一个key或者value被收集时，整个key以及对应的value都会从table中移除。</p>
<p> 下面新增一句代码，表示b的value对其指向的对象的引用是弱引用，而b的key对其指向的对象的引用仍然是强引用(对于table来说，其key和value可以指向任何类型的对象，除了key不能指向nil)。<br> {name = “123”}这个table只存在弱应用b[1]，所以被回收。</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">a = &#123;name = <span class="string">&quot;123&quot;</span>&#125;</span><br><span class="line">b = &#123;&#125;</span><br><span class="line"><span class="built_in">setmetatable</span>(b, &#123;<span class="built_in">__mode</span> = <span class="string">&quot;v&quot;</span>&#125;) <span class="comment">--add</span></span><br><span class="line">b[<span class="number">1</span>] = a</span><br><span class="line">a = <span class="literal">nil</span></span><br><span class="line"><span class="built_in">collectgarbage</span>()</span><br><span class="line"><span class="keyword">for</span> k,v <span class="keyword">in</span> <span class="built_in">pairs</span>(b) <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">print</span>(k) <span class="comment">--无</span></span><br><span class="line">    <span class="built_in">print</span>(v) <span class="comment">--无</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p>=========================================================分割线=========================================================<br>=========================================================分割线=========================================================<br>(3)Unity协程原理</p>
<p> 使用过Unity的同学一定知道，Unity提供了一套协程机制，简直不要太好用。但是这个协程依赖于Unity引擎，离开Unity就无法使用。<br> 那有没有办法实现不依赖Unity的协程呢？答案是当然阔以。 所谓实现一个协程，就是实现一个迭代器的容器！</p>
<p> 什么是IEnumerator</p>
<p> 在.NET中，迭代器模式被IEnumerator和IEnumerable及其对应的泛型接口所封装。如果一个类实现了IEnumerable接口，”(那么就能够被迭代)”；<br> 调用GetEnumerator方法将返回IEnumerator接口的实现，它就是迭代器本身。迭代器类似数据库中的游标，他是数据序列中的一个位置记录。迭代器只能向前移动，同一数据序列中可以有多个迭代器同时对数据进行操作。<br> 这个只能向前移动的特性就是我们协程需要用到的特性。所谓实现一个协程，就是实现一个迭代器的容器！<br> 具体函数:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">using System.Runtime.InteropServices;</span><br><span class="line">namespace System.Collections</span><br><span class="line">&#123;</span><br><span class="line">    [ComVisible(true)]</span><br><span class="line">    public interface IEnumerator</span><br><span class="line">    &#123;</span><br><span class="line">        object Current &#123; get; &#125; // 当前正在访问的对象，只读</span><br><span class="line"></span><br><span class="line">        bool MoveNext(); // 移动到下一个元素，我们的协程通过此函数来控制迭代器的到底要不要移动下一个代码段.如果迭代器返回false，则证明迭代器已经执行完毕，此时协程也应该执行完毕</span><br><span class="line">        void Reset(); // 重置函数</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p> 总结：<br> 就是线程通过调度器检测条件  使用 IEnumerator 中的MoveNext方法移动 和 yield让出权限</p>
<p>=========================================================分割线=========================================================<br>=========================================================分割线=========================================================<br>(4)C# GC原理</p>
<p>Ngui 裁剪原理<br>怎么把模型放到UI前<br>摄像机层级管理<br>怎么拆分模型实现边走边打<br>渲染管线流程<br>帧同步状态同步<br>弱联网<br>资源管理框架<br>数据结构<br>数组和列表</p>
]]></content>
      <tags>
        <tag>U3D</tag>
      </tags>
  </entry>
  <entry>
    <title>UnityAB资源加密</title>
    <url>/2022/02/21/Unity/UnityAB%E8%B5%84%E6%BA%90%E5%8A%A0%E5%AF%86/</url>
    <content><![CDATA[<p>1 最近学习了下 AB资源加密下面出来记录下<br>    随着Unity的普及，现在已经越来越多的项目使用AB包，但是大部分都是没有加密的。比如某IP侵权的app，可以通过或者Unity内置的AssetBundleBrower直接看到ab包的所有资源<br>    更甚者可以通过AssetStudio直接看到ab包的所有资源，图片，音频，动画，文本，CG视频等等（蒙皮动画目前不行），并且导出。<br>    如果会写点代码，还可以在unity中，直接实例化出来，然后另存为Prefab，这样虽然无法获得fbx（其实fbx开源，自己反推写入数据也可以导出fbx），但是我们可以获得完整的Prefab，<br>    设置内含了蒙皮信息。这样可以轻松获得所有的数据，贴图，音频，视频，模型，材质，蒙皮，动画等等</p>
<p>2 看了下AB资源的加密方式大概有几种<br>    2.1 unity中国区提供的一种加密方式<br>    2.2 对AB包的二进制文件进行加密操作<br>    2.3 使用offest加密<br>    还要其他的吧  暂时没了解</p>
<p>3 我看来看下对AB包的二进制文件进行加密操作</p>
<pre><code>3.1 加密就是用秘钥跟ab文件异或处理，解密的时候也是再做一次异或处理即可，只要不被别人拿到秘钥就问题不大。
</code></pre>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public static void Encypt(ref byte[] targetData, byte m_key)</span><br><span class="line">&#123;</span><br><span class="line">    //加密，与key异或，解密的时候同样如此</span><br><span class="line">    int dataLength = targetData.Length;</span><br><span class="line">    for (int i = 0; i &lt; dataLength; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        targetData[i] = (byte)(targetData[i] ^ m_key);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<pre><code>3.2 用算法加密
</code></pre>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">    [MenuItem(&quot;AssetBundle/AssetBundle_Window&quot;)]</span><br><span class="line">    public static void BuildAssetToWindow()</span><br><span class="line">    &#123;</span><br><span class="line">        string outPath = Application.dataPath + &quot;/../BuildAssetBundle/Window/&quot;;</span><br><span class="line">        CreateDir(outPath);</span><br><span class="line">        BuildPipeline.BuildAssetBundles(outPath,BuildAssetBundleOptions.ForceRebuildAssetBundle, BuildTarget.StandaloneWindows);</span><br><span class="line">        AssetDatabase.Refresh();</span><br><span class="line">    &#125;</span><br><span class="line">    public static void CreateDir(string path)</span><br><span class="line">    &#123;</span><br><span class="line">        DirectoryInfo info = new DirectoryInfo(path);</span><br><span class="line">        if (!info.Exists)</span><br><span class="line">        &#123;</span><br><span class="line">            info.Create();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private IEnumerator EncryptionAB()</span><br><span class="line">    &#123;</span><br><span class="line">        WWW www = new WWW(&quot;file:///D:\\fcj\\unity209\\VuforiaStudy\\BuildAssetBundle\\Window\\testab&quot;);</span><br><span class="line">        yield return www;</span><br><span class="line">        if (www.isDone)</span><br><span class="line">        &#123;</span><br><span class="line">            if (www.error == null)</span><br><span class="line">            &#123;</span><br><span class="line">                byte[] bytes = www.bytes;</span><br><span class="line">                for (int i = 0; i &lt; bytes.Length; i++)//恺撒加密</span><br><span class="line">                &#123;</span><br><span class="line">                    bytes[i] += 1;</span><br><span class="line">                &#125;</span><br><span class="line">                File.WriteAllBytes(&quot;D:\\fcj\\unity2018\\VuforiaStudy\\BuildAssetBundle\\Window\\myab_Encryption.assetbundle&quot;, bytes);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private IEnumerator DecryptAB()</span><br><span class="line">    &#123;</span><br><span class="line">        WWW www = new WWW(&quot;file:///D:\\fcj\\unity2018\\VuforiaStudy\\BuildAssetBundle\\Window\\myab_Encryption.assetbundle&quot;);</span><br><span class="line">        yield return www;</span><br><span class="line">        if (www.isDone)</span><br><span class="line">        &#123;</span><br><span class="line">            if (www.error == null)</span><br><span class="line">            &#123;</span><br><span class="line">                byte[] bytes = www.bytes;</span><br><span class="line">                for (int i = 0; i &lt; bytes.Length; i++)//恺撒解密</span><br><span class="line">                &#123;</span><br><span class="line">                    bytes[i] -= 1;</span><br><span class="line">                &#125;</span><br><span class="line">                AssetBundle ab = AssetBundle.LoadFromMemory(bytes);</span><br><span class="line">                GameObject go = ab.LoadAsset(&quot;Sphere&quot;) as GameObject;//注意这里是预制体名字</span><br><span class="line">                Instantiate(go, Vector3.zero, Quaternion.identity);</span><br><span class="line">                ab.Unload(false);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">```   </span><br><span class="line">    3.3 自定义加密</span><br><span class="line">    比如他自己随机改数据里面的值  或者加上数据标头等等</span><br><span class="line"></span><br><span class="line">```c# </span><br><span class="line">    using System.Collections;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using UnityEngine;</span><br><span class="line">using System.IO;</span><br><span class="line"></span><br><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// ab资源字节加密</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">public class AssetBundleEncrypt &#123;</span><br><span class="line"></span><br><span class="line">    private readonly static byte[] AssetHead = new byte[]</span><br><span class="line">    &#123;</span><br><span class="line">        0x55, 0x6E, 0x69, 0x74, </span><br><span class="line">        0x78, 0x00, 0x32, 0x30, </span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    private readonly static byte[] RiverHead = new byte[]</span><br><span class="line">    &#123;</span><br><span class="line">        0x74, 0x69, 0x61,</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    private static Dictionary&lt;byte, bool&gt; helpDic = new Dictionary&lt;byte, bool&gt;();</span><br><span class="line"></span><br><span class="line">    // 加密</span><br><span class="line">    public static byte[] EncryptAsset(byte[] bytes, bool needNewByts = false)</span><br><span class="line">    &#123;</span><br><span class="line">        var result = bytes;</span><br><span class="line">        if (needNewByts)</span><br><span class="line">        &#123;</span><br><span class="line">            result = new MemoryStream(bytes).ToArray();</span><br><span class="line">        &#125;</span><br><span class="line">        if (result.Length &lt; 2048) </span><br><span class="line">        &#123;   // 小于2048直接不加密</span><br><span class="line">            return result;</span><br><span class="line">        &#125;</span><br><span class="line">        helpDic.Clear();</span><br><span class="line">        int mid = (AssetHead.Length - RiverHead.Length) / 2;</span><br><span class="line">        byte[] encryptBytes = new byte[mid * 2];</span><br><span class="line">        </span><br><span class="line">        for (int i = 0, length = AssetHead.Length - RiverHead.Length; i &lt; length; i+=2)</span><br><span class="line">        &#123;</span><br><span class="line">            byte pos = 0;</span><br><span class="line">            byte value = 0;</span><br><span class="line">            pos = (byte)(Random.value * 255);</span><br><span class="line">            while (helpDic.ContainsKey(pos))</span><br><span class="line">            &#123;</span><br><span class="line">                pos = (byte)(Random.value * 255);</span><br><span class="line">            &#125;</span><br><span class="line">            helpDic.Add(pos, true);</span><br><span class="line">            if (i &lt; mid)</span><br><span class="line">            &#123;</span><br><span class="line">                value = result[pos + AssetHead.Length];</span><br><span class="line">                result[pos + AssetHead.Length] = (byte)(Random.value * 255);</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                value = result[result.Length - pos - 1];</span><br><span class="line">                result[result.Length - pos - 1] = (byte)(Random.value * 255);</span><br><span class="line">            &#125;</span><br><span class="line">            encryptBytes[i] = pos;</span><br><span class="line">            encryptBytes[i + 1] = value;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        for (int i = 0, length = RiverHead.Length; i &lt; length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            result[i] = RiverHead[i];</span><br><span class="line">        &#125;</span><br><span class="line">        for (int i = RiverHead.Length, length = RiverHead.Length + encryptBytes.Length; i &lt; length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            result[i] = encryptBytes[i - RiverHead.Length];</span><br><span class="line">        &#125;</span><br><span class="line">        return result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    // 解密</span><br><span class="line">    public static byte[] UnEncryptAsset(byte[] bytes, bool needNewByts = false)</span><br><span class="line">    &#123;</span><br><span class="line">        var result = bytes;</span><br><span class="line">        if (needNewByts)</span><br><span class="line">        &#123;   </span><br><span class="line">            result = new MemoryStream(bytes).ToArray();</span><br><span class="line">        &#125;</span><br><span class="line">        if(result.Length &lt; 2048)</span><br><span class="line">        &#123;   // 小于2048直接不加密</span><br><span class="line">            return result;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        int mid = (AssetHead.Length - RiverHead.Length) / 2;</span><br><span class="line">        for (int i = 0, length = AssetHead.Length - RiverHead.Length; i &lt; length; i+= 2)</span><br><span class="line">        &#123;</span><br><span class="line">            byte pos = result[RiverHead.Length + i];</span><br><span class="line">            byte value = result[RiverHead.Length + i + 1];</span><br><span class="line">            if (i &lt; mid)</span><br><span class="line">            &#123;</span><br><span class="line">                result[pos + AssetHead.Length] = value;</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                result[result.Length - pos - 1] = value;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        for (int i = 0, length = AssetHead.Length; i &lt; length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            result[i] = AssetHead[i];</span><br><span class="line">        &#125;</span><br><span class="line">        return result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//加密调用</span><br><span class="line">string publishTempPath = GetFullUrlPublish(Path.GetFileName(resPath));</span><br><span class="line">var bytes = File.ReadAllBytes(resPath);</span><br><span class="line">if (type.ToLower() == &quot;.unity3d&quot;)</span><br><span class="line">    bytes = AssetBundleEncrypt.EncryptAsset(bytes);</span><br><span class="line">File.WriteAllBytes(publishTempPath, bytes);</span><br><span class="line"></span><br><span class="line">//解密调用</span><br><span class="line">var bytes = www.downloadHandler.data;</span><br><span class="line">if (GameVersion.isHotUpdate || GameVersion.isSplitAsset)</span><br><span class="line">    bytes = AssetBundleEncrypt.UnEncryptAsset(bytes);</span><br><span class="line">AssetBundle bundle = AssetBundle.LoadFromMemory(bytes);</span><br></pre></td></tr></table></figure>




]]></content>
      <tags>
        <tag>U3D</tag>
        <tag>加密</tag>
        <tag>记录</tag>
      </tags>
  </entry>
  <entry>
    <title>UnityIOS打包</title>
    <url>/2021/12/02/Unity/UnityIOS%E6%89%93%E5%8C%85/</url>
    <content><![CDATA[<p>UnityIOS打包流程图   下载查看全图<br><img src="/images/UnityIOS%E6%89%93%E5%8C%85.png"></p>
]]></content>
  </entry>
  <entry>
    <title>Unity基础：DrawCall从入门到精通</title>
    <url>/2023/10/17/Unity/Unity%E5%9F%BA%E7%A1%80%EF%BC%9ADrawCall%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/</url>
    <content><![CDATA[<h1 id="Unity基础：DrawCall从入门到精通"><a href="#Unity基础：DrawCall从入门到精通" class="headerlink" title="Unity基础：DrawCall从入门到精通"></a>Unity基础：DrawCall从入门到精通</h1><p>正文：</p>
<p>Draw Call从来都不是问题。换句话说，一开始没有问题，直到你添加了一个又一个的渲染元素，最后渲染线程突然变成了新的瓶颈。你能猜出为什么现在阻止<strong>Unity Draw Call</strong>比以往任何时候都更加重要吗？</p>
<p><img src="https://pic4.zhimg.com/80/v2-cedbcfd1fbbe274f2f5aa74a63acc4ff_720w.webp" alt="img"></p>
<p><em>警告：这是一篇深入探讨的文章，让自己感到舒适并喝杯茶。如果你着急，可以根据目录来查找想看的内容。</em></p>
<ul>
<li><p>初遇Draw Call</p>
</li>
<li><p>可能有太多Draw Call的信号</p>
</li>
<li><ul>
<li>弱信号：电池消耗过快</li>
<li>弱信号：设备升温</li>
<li>弱信号：游戏不能顺滑的运行</li>
<li>弱信号：VR用户比以往任何时候都头晕</li>
<li>强信号：Unity Profiler显示了渲染线程瓶颈</li>
</ul>
</li>
<li><p>等一下…什么是Draw Call</p>
</li>
<li><ul>
<li>Batches vs SetPasses</li>
<li>计算Unity DrawCall</li>
</ul>
</li>
<li><p>需要减少Draw Call的3个原因</p>
</li>
<li><p>战斗：Unity Draw Call批处理</p>
</li>
<li><ul>
<li>前提：合并Unity 材质（Materials）</li>
<li>技术1：Unity静态批处理（Unity Static Batching）</li>
<li>技术2：Unity GPU Instancing</li>
<li>技术3：Unity动态批处理（Dynamic Batching）</li>
<li>技术4：Unity运行时批处理API</li>
</ul>
</li>
<li><p>实践才是检验真理的唯一标准</p>
</li>
</ul>
<p><img src="https://pic1.zhimg.com/80/v2-5a96e0ee3c24bc9c4044b28d1344a0c4_720w.webp" alt="img"></p>
<h2 id="初遇Draw-Call"><a href="#初遇Draw-Call" class="headerlink" title="初遇Draw Call"></a>初遇Draw Call</h2><p>就在几年前，我还是一个没有经验的年轻小伙子……尤其是在游戏编程方面。</p>
<p>我当时正在做我的第一个专业任务，任务很明确。</p>
<p>我只需要改进和实现现有游戏的几个游戏系统。</p>
<p>很公平。</p>
<p>这就是我几个月来一直专注的内容。为我的玩家创造乐趣。</p>
<p><img src="https://pic2.zhimg.com/80/v2-8b9efc06d8feedb57e319f46c0fef63d_720w.webp" alt="img"></p>
<p>问题是，游戏开发中的每个领域对我来说仍然还是个未知数。</p>
<p>并且我不停的问自己……</p>
<p><em>如果我不得不解决在我未涉及领域的问题时该怎么办？</em></p>
<p>这个简单的想法使我非常不安。毕竟，我不想让我的老板失望。他雇用我是有原因的，所以他当然希望我能完成我的任务。</p>
<p>当然我知道这种情况只有在我必须面对从未解决过的问题的时候才会发生。</p>
<p>而且我还没有准备好。</p>
<p>不管怎样，我很高兴不断为游戏添加内容，不再对此担心。一切进展顺利，我收到了很好的工作反馈。</p>
<p>更好的是，性能一直很出色……</p>
<p>但不幸的事发生了。</p>
<p><img src="https://pic4.zhimg.com/80/v2-ab0f1e68d1f3562d5d8fd1a6d504163b_720w.webp" alt="img"></p>
<p>几个月后，我注意到有些事不对劲了。</p>
<p>我去了商店，开始注意到游戏有越来越多的<strong>负面评论</strong>。</p>
<p>虽然我已经习惯了一定比例的负面评论。这始终是将你的作品展示给全世界的一部分。</p>
<p>但是趋势使我担心。它比以往任何时候都更糟。</p>
<p>越来越多的用户开始抱怨<strong>电池</strong>耗电更快，设备<strong>发热</strong>比以往任何时候都高，并且游戏感觉<strong>太慢</strong>。</p>
<p>我花了一些时间将这些点连接起来。</p>
<p>我认为<em>那一定是性能出现了问题</em>。</p>
<p>我开始担心会损害到了用户体验。</p>
<p>更糟糕的是，我的客户会怎么看我？这肯定和我在游戏开发方面所做的工作有关。</p>
<p>忧虑迅速转变为<strong>压力</strong>。</p>
<p>虽然我习早已惯了压力。毕竟在几年前，我经常每天在大学里呆12个小时以上。</p>
<p>但是这次却有所不同。不再只是和我有关，我正在让某些用户感到失望。</p>
<p>怀着勇气，我开始深入挖掘未知的性能世界。</p>
<p>而且我特意在业余时间做这件事。</p>
<p>我很快了解了Unity Profiler。那个有价值的工具向我展示了<strong>渲染线程</strong>似乎花费了太长时间。但是我不知道为什么。</p>
<p>所以我一直在调查。</p>
<p>但是，无论我投入多少时间，问题的出现速度都比我解决问题的速度快。</p>
<p>我正在思考是否要<strong>放弃</strong>。</p>
<p>毕竟，也许游戏开发并不适合我。</p>
<p><img src="https://pic3.zhimg.com/80/v2-ee5fadd35fe82445ed54712dfbe441a6_720w.webp" alt="img"></p>
<p>但是后来，我成为了世界上最幸运的开发者之一。</p>
<p>我很幸运能看到一篇有关<strong>技术债务</strong>的出色在线文章。我意识到给我自己挖了坑。</p>
<p>但与此同时，我也受到启发。</p>
<p>在开发过程中，随着时间的推移，我引进了一些内容，这些内容使我在游戏中的Unity <strong>Draw Call</strong>数量激增。Draw Call是Cpu向GPU发起的一种在屏幕上绘制内容的请求。</p>
<p><em>130个Draw Call太多了吗？是的，一定是这样，我想。我添加了未优化的内容，这会导致电池消耗加速和游戏运行速度变慢，所以现在我需要着手对其进行优化</em>。</p>
<p>因此，我开始了优化材质的漫长旅程。毕竟在Unity中，Draw Call与材质的设置高度相关。我为此花费了大量的时间。我造成了这个问题，所以应该由我来<strong>解决</strong>它。</p>
<p>不过，我并没有停止思考长期问题。</p>
<p>如果我遇到了这个问题，其他人也有可能遇到。</p>
<p>在我看来，解决这个问题的唯一方法就是创建流程来持续监控性能指标。</p>
<p>那是我接下去的工作。</p>
<p><img src="https://pic1.zhimg.com/80/v2-1067a19d33efeb860535161a4ddb719c_720w.webp" alt="img"></p>
<p>在几天之内，我实现了一个<strong>原型</strong>系统来连续监视游戏中的Unity Draw Call数。我想确保将来人们（尤其是我自己）仅提交优化过的内容。</p>
<p>尽管如此，我依然仍努力遵守最后期限。</p>
<p>我知道我必须完成它。我确实完成了。</p>
<p>经过不懈的努力，我统一了绝大多数<strong>游戏中使用的材质</strong>，并大大<strong>减少了着色器的数量</strong>。</p>
<p>漫长的努力，我的抽Draw Call数量终于降低到60以下了。</p>
<p>新的工作流保证了每个人都遵从了性能指南，性能再次变得很棒。</p>
<p>我为此感到自豪。</p>
<p><img src="https://pic1.zhimg.com/80/v2-58b54e1c847d978792d9e8cd9de1afdc_720w.webp" alt="img"></p>
<p>但是，我仍然有内心的声音提醒我，我让这些玩家失望了。</p>
<p>他们曾经玩游戏很开心。在游戏中他们成为了朋友。他们希望通过游戏加强与家人的关系。</p>
<p>这就是为什么我努力减轻他们在评论中表现出来的痛苦的原因。</p>
<p>但是这些玩家再也没有回来。<strong>我</strong>永远<strong>失去了他们</strong>。</p>
<p>真是令人心碎。</p>
<p><img src="https://pic4.zhimg.com/80/v2-796917d77b5d9626bab0d5d7d3486baf_720w.webp" alt="img"></p>
<p>通过失去这些玩家，使我了解了在整个项目过程中监控性能的重要性。</p>
<p><strong>加载时间</strong>，<strong>帧速率</strong>，性能<strong>峰值</strong>，<strong>电池</strong>和电源效率……所有这些事情比我想象的要重要得多。</p>
<p>这是使我如此专注于游戏性能优化的决定性时刻之一。我学到了教训。</p>
<p>该游戏今天仍然表现良好。而且由于进行了优化，因此可以轻松的移植到性能较弱的平台。</p>
<p>从那时起，我几乎每天都在监控我的游戏性能。</p>
<p>但是我不是一个人做。</p>
<p>我有系统可以自动报告这些数字。当系统报告有问题的时候，我就会去调查。</p>
<p>随着<strong>虚拟现实</strong>获得了巨大的吸引力，<strong>监视Unity Draw Call</strong>的任务以往任何时候都更加重要。我们必须以72、90甚至144 Hz的帧速率进行渲染。这些时间不会给你可观的CPU预算。</p>
<p><img src="https://pic2.zhimg.com/80/v2-59463c3e7c849f4e641a430afb837861_720w.webp" alt="img"></p>
<h2 id="可能有太多Draw-Call的信号"><a href="#可能有太多Draw-Call的信号" class="headerlink" title="可能有太多Draw Call的信号"></a>可能有太多Draw Call的信号</h2><p>在游戏开发过程中的任何特定时刻都需要注意一些重要的标志信息。</p>
<p>随着时间的流逝，您会发展出第六种感觉，每当你遇到这些情况时，都会在脊柱上流下一些寒气。</p>
<p>但是，症状只是症状。由于瓶颈可能来自多个角落，因此它们并不都是Draw Call的问题。为了使区别更加清楚，我将它们分为两类。</p>
<p><strong>弱信号</strong>表示有比较微弱的可能是由高Draw Call产生。它们可以完全来自其他性能因素，例如<a href="https://zhuanlan.zhihu.com/p/350778355">OverDraw</a>。</p>
<p>最后，<strong>强信号</strong>表示你的游戏很有可能已经使用了太多的Draw Call。</p>
<p><img src="https://pic3.zhimg.com/80/v2-8b1997f16d4c717820217a456eb586da_720w.webp" alt="img"></p>
<h3 id="弱信号：电池消耗过快"><a href="#弱信号：电池消耗过快" class="headerlink" title="弱信号：电池消耗过快"></a>弱信号：电池消耗过快</h3><p>手机电池通常在正常使用情况下可持续使用一到两天。</p>
<p>但是游戏擅长于从用户的锂离子电池中窃取能量。</p>
<p>但是，请注意，不同游戏的功耗会有所不同。经过优化的游戏将使您的CPU和GPU压力减少，从而减少功耗。</p>
<p>而且优化游戏非常重要，因为您的用户非常擅长注意到早餐玩游戏时消耗了多少电量。</p>
<p>即使你不关心用户（谁会不关心用户？），这仍然是与你相关的因素。</p>
<p>这就是为什么…</p>
<p>高效运行的游戏让你的玩家可以玩更长的时间。而且他们玩的越多，就可以出售了更多应用内购买，更多广告展示，获得更多的口碑，就会有更多的钱落在你的口袋（或你的老板的口袋）中，你说对不对？</p>
<p>优化电池消耗是一个很好的投资回报。</p>
<p><img src="https://pic3.zhimg.com/80/v2-daa54c4c3f96d1ebb2b10b1406110ae2_720w.webp" alt="img"></p>
<h3 id="弱信号：设备升温"><a href="#弱信号：设备升温" class="headerlink" title="弱信号：设备升温"></a>弱信号：设备升温</h3><p>你从用户设备中获取的大部分能量都转换为热量（和光），惊不惊喜？</p>
<p>在冬天，这可能会很方便以使你的手变热。但是，仍然剩下3个季节，你的用户并不希望到带着充电宝到处跑。</p>
<p>我仍然记得我在柏林的时候在冬天命令Glühwein温暖我的手。我不喜欢以葡萄酒为基础的饮料，但我学会了欣赏自己手中的温暖感觉。</p>
<p>所以我一直买。</p>
<p>如果你的目标是一个虚拟现实设备，你应该特别优化能源效率。除非你正在开发一个应用程序来取代传统的面部晒黑。</p>
<p><img src="https://pic3.zhimg.com/80/v2-fd42e98f982ff24fff9bf2eb0329bc52_720w.webp" alt="img"></p>
<h3 id="弱信号：游戏不能顺滑的运行"><a href="#弱信号：游戏不能顺滑的运行" class="headerlink" title="弱信号：游戏不能顺滑的运行"></a>弱信号：游戏不能顺滑的运行</h3><p>想象一下……</p>
<p>你正在玩节奏慢的多人射击游戏。</p>
<p>但是，由于你是新手，所以每个人都比你玩的更好。</p>
<p>经过数小时的挫折之后，你终于发现了机会：<strong>一个分心的狙击手</strong>。</p>
<p>你在从后面偷偷接近他。他们还没注意到你，但你知道你的机会仅仅存在于他们背对你的一小段时间内。所以你瞄准了头部准备来一次完美的爆头。</p>
<p>你慢慢的把鼠标向上移动了几像素。</p>
<p>但是，经过半秒钟的延迟，你的十字准线现在突然指向天空。</p>
<p>狙击手注意到了你，等到你意识到的时候，你已经死了。</p>
<p><em>到底发生了什么事？</em></p>
<p>低帧率。</p>
<p>现在，由于多种原因可能会导致性能下降，但是，大量的Unity Draw Call无疑是其中之一。</p>
<p>我记得“反恐精英”的早期，人们使用最强大的GPU扔烟雾弹以获得不公平的优势。玩家如果使用低端计算机，计算机将无法真正很好地处理烟雾，因此他们最终死于低帧率。这可能更多是由于<a href="https://zhuanlan.zhihu.com/p/350778355">OverDraw</a>而不是Draw Call，但我仍然值得一说。</p>
<h3 id="弱信号：VR用户比以往任何时候都头晕"><a href="#弱信号：VR用户比以往任何时候都头晕" class="headerlink" title="弱信号：VR用户比以往任何时候都头晕"></a>弱信号：VR用户比以往任何时候都头晕</h3><p>VR游戏的性能越低，用户的感受就会越差。</p>
<p>等等，我可以用不同的方式讲。</p>
<p>你潜在的Draw Call越多，你给用户糟糕的情况就越严重。</p>
<p>是的，这种说法更好。</p>
<p><img src="https://pic3.zhimg.com/80/v2-ebcedebadaaeff3ebfd0aa109650fcca_720w.webp" alt="img"></p>
<h3 id="强信号：Unity-Profiler显示了渲染线程瓶颈"><a href="#强信号：Unity-Profiler显示了渲染线程瓶颈" class="headerlink" title="强信号：Unity Profiler显示了渲染线程瓶颈"></a>强信号：Unity Profiler显示了渲染线程瓶颈</h3><p>如果渲染线程执行所需的时间太长，则可能有太多的绘制调用。或更糟糕的是，您可能有太多的Set Passes Call（我们将在下一部分中看到不同之处）。</p>
<p>当渲染线程完成处理所有绘制调用之前，你的主线程可能闲着。</p>
<p>您可以通过Unity Profiler识别这种情况，如下所示。</p>
<p><img src="https://pic3.zhimg.com/80/v2-ed3b7cd9764d6d22bde81562174d50ee_720w.webp" alt="img"></p>
<p>Unity Draw Call：昂贵的渲染线程</p>
<p>你拥有的这些迹象越多，你的游戏中出现太多Draw Call的可能性就越高</p>
<p>我们已经谈论Draw Call很长时间了。</p>
<p>但是究竟是什么Draw Call？</p>
<h2 id="等一下…什么是Draw-Call？"><a href="#等一下…什么是Draw-Call？" class="headerlink" title="等一下…什么是Draw Call？"></a>等一下…什么是Draw Call？</h2><p>简而言之，<strong>Draw Call 就是你的CPU要求你的GPU绘制一些东西</strong>。</p>
<p>就是你的CPU在说：<em>嘿，用这些纹理和照明信息在那角落画这张椅子</em>。</p>
<p>如果你有很多“东西”，那么你可能需要准备许多Draw Call：</p>
<ul>
<li><em>我想要那个角落画椅子</em></li>
<li><em>还有另一个角落画椅子</em></li>
<li><em>哦，再画上书柜就更好了。</em></li>
</ul>
<p>问题是，<strong>准备Unity Draw Call会占用CPU大量的时间和精力</strong>。Unity必须将场景内容转换为GPU可以理解的格式。这个过程开销最昂贵的部分是设置正确的渲染参数，例如纹理，着色器，网格等。</p>
<p>手动设置渲染参数很繁琐。这就是游戏开发人员引入<strong>材质</strong>概念的原因。</p>
<p>材质是一种包含有关如何绘制对象的信息的数据结构。它包含一个着色器及其所有参数，以及有关如何设置GPU渲染状态的信息。</p>
<p>而且，添加到场景中的每种材质都会增加渲染管线的复杂性。每种材质至少使用一个SetPass（用于设置渲染参数）。如果你希望自己的游戏表现出色，那么你真的需要将这些最小化。</p>
<p>这是否意味着我们不能一次绘制太多对象？</p>
<p>不是的。</p>
<p>游戏开发人员使用<strong>批处理将相似对象的渲染分组到同一个Draw Call中。</strong>这样，CPU只需支付一次绘制调用即可渲染多个对象。</p>
<p>在使用批处理时，我们要求GPU一次在<em>这里，那里和后面画三把椅子，</em>而不是在三个不同的时间。</p>
<p>现在，关键要理解什么是“相似”（对象）。</p>
<p>在批处理中，相似定义为<strong>在不同的对象上使用相同的材料</strong>。如果完成此步骤，则可以完成最复杂的步骤。</p>
<p>在Unity Frame Debugger的帮助下，你可以在下面看到4个Draw Call的顺序：3个用于家具，1个用于地板。</p>
<p><img src="https://pic2.zhimg.com/v2-bc2d72d350b4dbd751c7255b9ae64f01_b.jpg" alt="动图封面"></p>
<p>Unity Draw Call：无批处理</p>
<p>这样子开销真的很昂贵，但是分批处理将帮助我们减少这些Draw Call。这将减少播放器的CPU负载。拥有更多性能资源可以让你添加更多游戏功能，或者只是用这种方式减少设备的能耗。</p>
<h3 id="Batches-vs-SetPasses"><a href="#Batches-vs-SetPasses" class="headerlink" title="Batches vs SetPasses"></a>Batches vs SetPasses</h3><p>有一点细节，很少有开发人员知道。</p>
<p>在分析器和统计信息窗口中看到的“Batches”和“SetPasses”指标之间存在着差异。</p>
<p>这种差异具有巨大的影响。</p>
<p><strong>Batches</strong>通常被我们称为绘图调用（Draw Call）。这些是简单的绘制命令，例如，在此处绘制此对象，然后在此处绘制另一个对象。这主要是关于使用当前全局渲染状态绘制相同着色器、相似参数的对象。</p>
<p>但是，<strong>SetPasses</strong>描述了一种更昂贵的操作：材质更改。更改材质很昂贵，因为我们必须设置一个新的渲染状态。其中包括着色器参数和管线设置，例如Alpha Blending，Z-Test，Z-Writing。</p>
<p>让我通过示例向你说明。</p>
<p>让我们考虑一下，有3个椅子使用相同的网格。</p>
<p><img src="https://pic2.zhimg.com/80/v2-e3a5275b26760b99d146ce91627f64ad_720w.webp" alt="img"></p>
<p><img src="https://pic2.zhimg.com/80/v2-e3a5275b26760b99d146ce91627f64ad_720w.webp" alt="img"></p>
<p><img src="https://pic2.zhimg.com/80/v2-e3a5275b26760b99d146ce91627f64ad_720w.webp" alt="img"></p>
<p>三把椅子</p>
<p>现在，我们将探讨三种具有不同批处理和材质设置的方案。每个方案将导致不同的Batches和SetPasses。请看下表。</p>
<table>
<thead>
<tr>
<th></th>
<th>方案：最坏情况</th>
<th>方案：还是不行</th>
<th>方案：好起来了</th>
<th>方案：最佳</th>
</tr>
</thead>
<tbody><tr>
<td>批处理设置</td>
<td>禁用</td>
<td>启用</td>
<td>禁用</td>
<td>启用</td>
</tr>
<tr>
<td>材质设置</td>
<td>不同的（x3）</td>
<td>不同的（x3）</td>
<td>相同的（x1）</td>
<td>相同的（x1）</td>
</tr>
<tr>
<td>绘制事件</td>
<td>1. SetPass（椅子1） 2 . Draw Call（椅子1） 3 . SetPass（椅子2） 4 . Draw Call（椅子2） 5 . SetPass（椅子3） 6 . Draw Call（椅子3）</td>
<td>1. SetPass（椅子1） 2 . Draw Call（椅子1） 3 . SetPass（椅子2） 4 . Draw Call（椅子2） 5 . SetPass（椅子3） 6 . Draw Call（椅子3）</td>
<td>1. SetPass（椅子材质） 2. Draw Call（椅子1） 3 . Draw Call（椅子2） 4. Draw Call（椅子3）</td>
<td>1. SetPass（椅子材质） 2 。Draw Call（椅子1 + 2 + 3）</td>
</tr>
<tr>
<td>SetPasses</td>
<td>3个</td>
<td>3</td>
<td>1个</td>
<td>1个</td>
</tr>
<tr>
<td>Batches (D.C.)</td>
<td>3个</td>
<td>3个</td>
<td>3个</td>
<td>1个</td>
</tr>
<tr>
<td>性能</td>
<td>最差</td>
<td>最差</td>
<td>好</td>
<td>最好</td>
</tr>
</tbody></table>
<p>第一种情况和第二种情况相似：<strong>不同的材质</strong>使我们的SetPass数量猛增。在渲染线程中性能最差，无法进行批处理，因为批处理需要使用相同的材质。</p>
<p>但是，在第三种情况下，我们看到了一丝曙光。<strong>共享材质</strong>使一切变得不同。具有独特的材料可以将SetPass计数减少到1，这可以极大地提高性能。当然，我们仍然有3个Draw Call，但这些操作非常廉价。</p>
<p>最后，如果你真的想达到最优，那么第四种情况最适合你。在这里，我们启用批处理。批处理喜欢相同的材料。启用批处理可将Draw Call计数减少到1。在这里，我们得到了最理想的输出：<strong>❤️1 SetPass，1 Batch❤️️</strong></p>
<h3 id="计算Unity-DrawCall"><a href="#计算Unity-DrawCall" class="headerlink" title="计算Unity DrawCall"></a>计算Unity DrawCall</h3><p>在深入研究Draw Call之前，我们首先需要适当的工具来对其进行衡量。有很多可用的工具，例如<em>RenderDoc</em>，但我们将坚持使用最简单的方法：统计窗口和Unity Frame Debugger。</p>
<p>你可以随时通过单击游戏视图右上角的“<em>统计”</em>按钮来访问<strong>“统计”窗口</strong>。此面板向你显示当前游戏视图的指标。如果你的屏幕内容发生变化，则这些数字会不断变化（如果你认真对待游戏开发，肯定会有所变化）。</p>
<p>在那里，注意Batches（Draw Call）和SetPasses（材质变更）。如我们所见，它们是相互联系的，但是对性能的影响却并不相同。</p>
<p><img src="https://pic2.zhimg.com/80/v2-918f56f805d88a064e9643b9db480ddd_720w.webp" alt="img"></p>
<p>Unity Performance Stats Window</p>
<p>最后，你可以并且应该使用<strong>Unity Frame Debugger</strong>。该工具将为你显示当前视图正在发出的特Draw Call（Batches）。你可以点击<em>Window → Analysis → Frame Debugger</em>菜单打开它。</p>
<h2 id="需要减少Draw-Call的3个原因"><a href="#需要减少Draw-Call的3个原因" class="headerlink" title="需要减少Draw Call的3个原因"></a>需要减少Draw Call的3个原因</h2><p>我的经验告诉我，即使SetPasses和Draw Call不是你的游戏瓶颈，但也至关重要的。这是我从项目开始就减少Draw Call的主要原因：</p>
<ul>
<li><strong>它使移植到未来平台变得更加容易。</strong>你肯定花了数千小时来开发游戏。这是每个开发者交付游戏都必须支付的基准成本。一旦你支付了该成本，为什么不从移植到其他平台中获利呢？你将花费一小部分成本使销量成倍增长。问题是，游戏的优化程度越高，移植过程中的工作量就越少。</li>
<li><strong>避免亡羊补牢。</strong>一开始就对其进行优化！你可能知道优化你的同事一年前创建的十几种资源的感觉，尤其是当你的同事离开项目时。这在Asset Store购物时尤其要注意的是：商店中的大多数资源并不完善，很可能使用多种材质设置。这将导致不可能以移动端作为兼容目标。</li>
<li><strong>它可以使你的游戏提高游戏效率。</strong>将使用更少的CPU资源，并获得更好的性能，这在VR中至关重要。你将从玩家的电池中窃取更少的能量。玩家和社区将通过更好的评论和买更多的应用内购来奖励你。用户玩游戏的时间越长，他们看到的广告越多，他们内容付费的速度就越快。</li>
</ul>
<p>在使用Unity时，默认情况下你会不由自主的添加Draw Call。除非你有意识注意资产的性能，否则资产多数会更倾向于使用不同的材质。随着时间的流逝，<strong>不同的材质不断被添加，各种不能合批的Draw Call也会增加</strong>。这将会导致性能爆炸。</p>
<p><img src="https://pic2.zhimg.com/80/v2-e984b1b94e805d9efceeaf2fa11e9cb1_720w.webp" alt="img"></p>
<h2 id="战斗：Unity-Draw-Call批处理"><a href="#战斗：Unity-Draw-Call批处理" class="headerlink" title="战斗：Unity Draw Call批处理"></a>战斗：Unity Draw Call批处理</h2><p>我们不希望绘制一个对象10次，而是一次绘制了10个对象。</p>
<p>这就是批处理（batching）的力量。</p>
<p>批处理Draw Call的主要要求是对象使用相同的绘制属性（材质）。在这种情况下，Unity可以将不同的网格合并为使用统一材质的单个网格。</p>
<p>就想前面说的，默认情况下，大多数资源将使用不同的材质。但是不用担心，我们将看到将几种材质合并为单个方法。</p>
<p>下面是一张流程图，总结了在Unity中进行合批的方法和限制（<strong>个人补充：静态批处理复杂场景不要用，可能会导致渲染队列混乱，产生严重的</strong><a href="https://zhuanlan.zhihu.com/p/350778355">OverDraw</a><strong>；</strong>）</p>
<p><img src="https://pic2.zhimg.com/80/v2-a70a22ceabe212f59f1b3bfc5bfdb585_720w.webp" alt="img"></p>
<p>Unity Draw Call Reduction: The Guru’s Batching Diagram</p>
<p>你的切入点是要查找要那些对象需要使用<strong>相同的材质</strong>。</p>
<p>使用相同的材质是批处理工作的前提。不同的材质具有不同的绘图设置，这些设置会更改全局GPU渲染状态。</p>
<p>如果这些对象不使用完全相同的材料，但它们足够相似，则必须<strong>将它们合并</strong>为一个。这通常涉及创建共享的纹理图集，并更新单个对象的UV坐标以指向新的正确位置。<strong>下面会提到一些可以帮助你的工具</strong>。</p>
<p>一旦你的对象使用相同的材质，便可以选择许多方法来批处理这些Draw Call。</p>
<p>我建议您使用的<strong>批处理技术</strong>取决于要批处理的对象的性质。</p>
<p>但是在进行批处理之前，让我们看看如何合并材质。</p>
<p><a href="https://link.zhihu.com/?target=https://thegamedev.guru/unity-performance/draw-call-optimization/%23see-draw-call-batching-in-action">填写邮箱下载图表PDF高清版本</a></p>
<ul>
<li>全分辨率工作流程图</li>
<li>图表的可打印版本</li>
<li>还有Unity示例工程</li>
</ul>
<p><a href="https://link.zhihu.com/?target=https://thegamedev.guru/unity-performance/draw-call-optimization/%23see-draw-call-batching-in-action">现在下载</a></p>
<p>下一个…</p>
<h3 id="前提：合并Unity-材质（Materials）"><a href="#前提：合并Unity-材质（Materials）" class="headerlink" title="前提：合并Unity 材质（Materials）"></a>前提：合并Unity 材质（Materials）</h3><p>合并材质的第一个要求是：</p>
<p><img src="https://pic3.zhimg.com/80/v2-1c6fc2da55e0ec4ddab78d88a58afeba_720w.webp" alt="img"></p>
<p>要批处理的对象的必须使用<strong>相同的着色器材质</strong></p>
<p><strong>更换当前着色器（Shader）是你可以执行的最昂贵的操作之一</strong>。这会大大降低渲染速度。</p>
<p>几乎每个游戏都必须在某种程度上更换着色器，这很正常，现在你知道它的切换成本，就应该尝试减少项目中的着色器数量（包括着色器变体）。</p>
<p>如果你可以将两个相似的着色器合并到同一着色器中，那么你将获得巨大的性能优势。</p>
<p>因此，第一步是尽可能从项目中<strong>减少着色器</strong>。处理完成之后，你会得到许多原始材质，即使它们使用相同的Shader，看起来的效果和之前也没什么区别。</p>
<p>一旦目标对象使用相同的着色器，下一步就是<strong>合并其材质</strong>。这可能很复杂，因为他们可能具有不同的材质参数，例如：</p>
<ul>
<li><strong>纹理</strong>：每种材质通常具有一个或多个与其他材质不共享的纹理。在不同材质上使用相同纹理的一种方法是创建包含所有单独纹理的较大纹理。这些纹理称为图集。</li>
<li><strong>材质参数</strong>：例如金属，镜面反射和其他参数。要合并这些值，你可以找到适合所有条件的共同平均值，也可以在特定通道中创建包含该值的纹理图集。你可以<a href="https://link.zhihu.com/?target=https://docs.unity3d.com/Manual/StandardShaderMaterialParameterMetallic.html">将3个或4个纹理通道</a>用于不同的参数，例如将金属值存储在红色通道中。</li>
</ul>
<p>现在，你有了多个具有相同材质的对象，但它们必须具有不同的参数，则可以把他们收集成为<a href="https://link.zhihu.com/?target=https://docs.unity3d.com/ScriptReference/MaterialPropertyBlock.html">MaterialPropertyBlock</a>。你可以为每个需要自定义参数的渲染器创建<em>MaterialPropertyBlock</em>，而不是创建单个材质实例。然后，你可以在每个Block中设置自己的参数。虽然这不会减少Draw Call的次数，但是会降低渲染的成本，因为你明确地告诉了Unity每个对象的不同之处。</p>
<p>为共享着色器的材质创建<strong>纹理图集</strong>通常遵循以下几个步骤：</p>
<ol>
<li>创建一个大纹理，我们将其称为<strong>纹理图集</strong>。</li>
<li>获取所有材质的<strong>纹理通道</strong>，并将其纹理<strong>复制</strong>到新创建的纹理图集中。</li>
<li>遍历使用这些材料的网格以<strong>重新计算其UV</strong>。新的UV将指向包含原始纹理的纹理图集的新的子区域。</li>
<li><strong>禁用旧的网格，</strong>然后<strong>使用</strong>具有更新的UV<strong>的新网格</strong>。</li>
<li>使用<strong>合并过的材质</strong>替换原本材质。</li>
<li>对着色器使用的每个纹理属性<strong>重复</strong>所有这些步骤。</li>
</ol>
<p>我建议你在3d软件中执行此操作。如果有时间的话，这是最好的方法，因为它可以使你更好地控制过程。这可以提高输出质量，因为你可以调整关键变量，例如纹理像素分辨率。你还可以应用更高级的技术，例如调色板。</p>
<p>如果你没有时间、资源或经验去做这些事，那么我将带你走另一条路……</p>
<p>使用工具为你执行此操作。</p>
<p>作为程序员，我使用3D建模工具的效率不高，因此我经常使用这些方法。</p>
<p>以下是一些可用的Unity软件包，你可以使用它们在Unity中合并材质：</p>
<ul>
<li>Mesh Baker：<a href="https://link.zhihu.com/?target=https://assetstore.unity.com/packages/tools/modeling/mesh-baker-5017">高级</a>或<a href="https://link.zhihu.com/?target=https://assetstore.unity.com/packages/tools/modeling/mesh-baker-free-31895">免费</a></li>
<li><a href="https://link.zhihu.com/?target=https://assetstore.unity.com/packages/tools/modeling/super-combiner-92129">Super Combiner</a></li>
<li><a href="https://link.zhihu.com/?target=https://assetstore.unity.com/packages/tools/utilities/advanced-batcher-19877">Advanced Batcher</a></li>
<li><a href="https://link.zhihu.com/?target=https://assetstore.unity.com/packages/tools/utilities/one-batch-128259">One Batch</a></li>
<li><a href="https://link.zhihu.com/?target=https://assetstore.unity.com/packages/tools/modeling/mesh-combine-studio-2-101956">Mesh Combine Studio 2</a>（个人推荐）</li>
</ul>
<p>一旦我们将多种材质合并为一种材质，便可以开对Draw Call进行合批了。</p>
<p>你需要一些标准来帮助你在不同的批处理方法之间进行选择。</p>
<p>所有的批处理技术都是要付出代价的。他们都有一些限制，如何使用需要根据你的游戏情况来选择。</p>
<p>让我们按照顺序对其进行学习。</p>
<p><img src="https://pic2.zhimg.com/80/v2-6c2ccd07b6e85c862ce781d39058f3c9_720w.webp" alt="img"></p>
<h3 id="技术1：Unity静态批处理（Unity-Static-Batching）"><a href="#技术1：Unity静态批处理（Unity-Static-Batching）" class="headerlink" title="技术1：Unity静态批处理（Unity Static Batching）"></a>技术1：Unity静态批处理（Unity Static Batching）</h3><p>静态批处理默认状态下处于启用状态（我建议保持这种方式）。</p>
<p>Unity自动将此技术应用于场景中共享材质的所有静态对象。我们来看以下示例：</p>
<ul>
<li><em>绘制静态的椅子1</em></li>
<li><em>绘制静态的椅子2</em></li>
<li><em>绘制静态的桌子</em></li>
</ul>
<p>如果使用静态批处理，就会把他们合并成一个Draw Call：</p>
<ul>
<li><em>绘制静态餐椅（包含2把椅子和一张桌子）。</em></li>
</ul>
<p><img src="https://pic1.zhimg.com/80/v2-7d4c8499afb020ab411a9bccd518c5e4_720w.webp" alt="img"></p>
<p>Unity Draw Call Batching 设置</p>
<p>你可以在Player Setting下找到这个设置，如图所示。选择您要启用的目标平台。</p>
<p>请注意，稍后在player settings中也会启用/禁用动态批处理（Dynamic Batching）。</p>
<p>更准确地说，Unity将查找启用了<strong>batching static</strong>标志的对象。然后，Unity将尝试合并公用材质的对象。</p>
<p>Unity静态批处理通过创建包含各个网格的巨大网格来工作。但是Unity也会保持原始网格的完整，因此我们仍然能够单独渲染它们。这样我们可以仅绘制可见视野内的对象，而丢弃不可见的对象，使得<strong>视锥裁切</strong>正常工作。</p>
<p>通过将所有网格都放在一个网格中，我们就可以在不更改渲染状态的情况下全部绘制它们。</p>
<p>静态批处理仅在你按下编辑器上的“Play”按钮之前发生，并且在构建时也会发生。Unity尝试遍历每个场景，并尝试批处理尽可能多的静态对象。</p>
<p><img src="https://pic4.zhimg.com/v2-43c9c2eb052dd0d172431c7c25a225ff_b.jpg" alt="动图封面"></p>
<p>Unity Draw Calls: Static Batching</p>
<p>静态批处理的主要<strong>限制</strong>是每批可以具有<strong>的顶点和索引的数量</strong>，通常为每个64k，可以在<a href="https://link.zhihu.com/?target=https://docs.unity3d.com/Manual/DrawCallBatching.html">此处</a>检查限制更新（如果有）。</p>
<p>静态批处理的缺点是<strong>增加了内存使用量</strong>。如果您有100个石头，每个石头模型占用1MB，则可以预期内存使用量将超过100MB。发生这种情况的原因是，巨大的批处理网格将所有石头一起包含在一个网格中。</p>
<p>但是，内存使用对你来说不是问题。毕竟，你可以查看我的<a href="https://link.zhihu.com/?target=https://thegamedev.guru/unity-addressables/tutorial-learn-the-basics/">Unity可寻址对象教程</a>，该<a href="https://link.zhihu.com/?target=https://thegamedev.guru/unity-addressables/tutorial-learn-the-basics/">教程</a>将帮助你节省大量内存。</p>
<p><img src="https://pic4.zhimg.com/80/v2-74c941bb4db9742369b3f98434ff6b2f_720w.webp" alt="img"></p>
<h3 id="技术2：Unity-GPU-Instancing"><a href="#技术2：Unity-GPU-Instancing" class="headerlink" title="技术2：Unity GPU Instancing"></a>技术2：Unity GPU Instancing</h3><p>GPU Instancing是我最喜欢的批处理技术之一，因为它可用于非静态对象。</p>
<p>如果我们有这些Draw Call：</p>
<ul>
<li><em>绘制动态石头1</em></li>
<li>…</li>
<li><em>绘制动态石头100</em></li>
</ul>
<p>然后使用GPU Instancing将它们转换为一个Draw Call：</p>
<ul>
<li><em>在这里到那里画100个动态的石头…</em></li>
</ul>
<p>这是针对每种材质激活GPU Instancing设置，如下所示。</p>
<p><img src="https://pic4.zhimg.com/80/v2-9db47f7f807a3684b8ca1a5252a9858f_720w.webp" alt="img"></p>
<p>Unity GPU Instancing：材质设置</p>
<p>GPU实例化让你可以非常高效地绘制<strong>相同</strong>的网格几次。Unity通过向GPU传递转一个Transform列表来做到这一点。毕竟，每块石头都有自己的位置，旋转和缩放。</p>
<p>与静态批处理相比，这是一项强大的技术，因为它不会激增<strong>内存使用量</strong>，并且不需要对象是静态的。</p>
<p><img src="https://pic2.zhimg.com/v2-562397b048dad9eeca3e3aab2d881415_b.jpg" alt="动图封面"></p>
<p>Unity Draw Calls: GPU Instancing</p>
<p>要使用GPU Instancing，你只需要在材质检视面板中启用它即可。如果你有多个具有相同网格和材质的对象，那么Unity对它们将自动进行批处理。</p>
<p>但是，创建Transform列表会<strong>降低性能</strong>。如果在游戏过程中没有物体移动/旋转/缩放，则只需支付一次此开销。但是，如果对象每帧都更改一次，则需要每帧支付一次开销。</p>
<p><strong>推荐一个插件：</strong><a href="https://link.zhihu.com/?target=https://assetstore.unity.com/packages/tools/utilities/gpu-instancer-117566">GPUInstance</a>比Unity默认的要好用的多。</p>
<p><img src="https://pic1.zhimg.com/80/v2-ea4c48619396e2274ba9939d70e9a010_720w.webp" alt="img"></p>
<h3 id="技术3：Unity动态批处理（Dynamic-Batching）"><a href="#技术3：Unity动态批处理（Dynamic-Batching）" class="headerlink" title="技术3：Unity动态批处理（Dynamic Batching）"></a>技术3：Unity动态批处理（Dynamic Batching）</h3><p>如果你不能满足静态批处理和GPU Instancing的使用条件，你仍然有希望。</p>
<p>你可以对使用<strong>不同网格物体的</strong>动态对象进行动态批处理。</p>
<p><img src="https://pic2.zhimg.com/v2-34da0cc25273e48e937f7048a2069b99_b.jpg" alt="动图封面"></p>
<p>Unity Draw Calls: Dynamic Batching</p>
<p>但是，请记住，Unity动态批处理<strong>受到更加严格的限制</strong>。你只能将其应用于具有少于300个顶点和900个顶点属性（<em>颜色，UV</em>等）的网格。材质也应使用single-pass着色器。<a href="https://link.zhihu.com/?target=https://docs.unity3d.com/Manual/DrawCallBatching.html">此处</a>有完整的限制列表。</p>
<p>出现此限制的原因是在运行时创建这些批处理的CPU性能成本。与单独发出绘图调用相比，超过300个顶点很难证明批量CPU的成本合理。</p>
<p>不仅如此，动态批处理<strong>非常不可预测</strong>。你无法真正确定对象将如何被批处理。结果通常会随着帧的变化而变化。打开Unity Frame Debugger并查看结果，在每帧之间动态批处理的结果发生巨大变化是令人困惑的。</p>
<p>我认为，这应该是你的不得已的方法。但是，嘿，它仍然是一种有用的工具，请不要忽略它。</p>
<p><img src="https://pic1.zhimg.com/80/v2-a216ca741b112111badd17af24d3b61c_720w.webp" alt="img"></p>
<h3 id="技术4：Unity运行时批处理API"><a href="#技术4：Unity运行时批处理API" class="headerlink" title="技术4：Unity运行时批处理API"></a>技术4：Unity运行时批处理API</h3><p>如果在特殊情况下，希望对批处理进行更好控制，可以用手动进行。</p>
<p>不用担心，你不必自己处理网格顶点。</p>
<p>Unity使你可以访问<strong>2个强大的API</strong>，以在运行时合并网格。</p>
<p>假设你正在开车。在车的内部，你会看到一些元素，例如座椅，把手，挡风玻璃和你收藏的咖啡杯。你可以在比赛开始之前设定这些元素。</p>
<p>一旦你做出选择并开始比赛，这些元素就会在你的赛车中变成静态的（无法再次更改）。让我解释一：</p>
<p>汽车本身是动态的。毕竟，你正在开车。</p>
<p>但是它所有不动的内部零件？可以认为它们相对于汽车对象是静态的。挡风玻璃将始终留在车内的同一位置。</p>
<p>但是，Unity认为所有这些都是动态的。这就是为什么在这种情况下无法进行静态批处理的原因。</p>
<p>尽管如此，我们仍然可以通过使用静态批处理API，手动创建合批。</p>
<p>最简单的方法是使用<a href="https://link.zhihu.com/?target=https://docs.unity3d.com/ScriptReference/StaticBatchingUtility.Combine.html">StaticBatchingUtility.Combine</a>。该函数传入一个根游戏对象，并将遍历其所有子对象并将其几何形状合并为一个大块。一个容易遗漏的限制是，要批处理的所有子网格的导入设置必须允许开启<em>CPU read/write</em>。</p>
<p>第二种方法是使用<a href="https://link.zhihu.com/?target=https://docs.unity3d.com/ScriptReference/Mesh.CombineMeshes.html">Mesh.CombineMeshes</a>。此函数间接获取网格列表并创建组合的网格。然后，你可以将该网格分配给mesh filter渲染。</p>
<p>我简化了这两种功能的解释。查看文档以获取有关如何使用它们的详细信息。</p>
<p>在下图中，您将看到我如何应用<strong>StaticBatchingUtility</strong> API的功能在运行时将一些动态坦克批合并为一个网格。</p>
<p><img src="https://pic1.zhimg.com/80/v2-0222071d93d18cabd27407bde56685d4_720w.webp" alt="img"></p>
<p>Unity Draw Call：使用StaticBatchingUtility.Combine进行手动批处理</p>
<h2 id="实践才是检验真理的唯一标准"><a href="#实践才是检验真理的唯一标准" class="headerlink" title="实践才是检验真理的唯一标准"></a>实践才是检验真理的唯一标准</h2><p>我知道…</p>
<p>有这么多的可能性，好处和局限性，Unity中的Draw Call批处理最初可能会令人不知所措。</p>
<p>很难在一个小时内理解我花了多少年才掌握的东西。</p>
<p>但是你可以采取捷径。</p>
<p>这就是为什么我准备了一个资源包来指导你优化游戏的原因。</p>
<p>这是您将得到的：</p>
<ul>
<li>批处理解析图的<strong>全分辨率</strong>图像，包括可打印的版本</li>
<li>带有四个场景的<strong>Unity项目</strong>向你展示了我如何应用四种批处理技术</li>
</ul>
]]></content>
      <tags>
        <tag>U3D</tag>
      </tags>
  </entry>
  <entry>
    <title>Unity常见插件汇总</title>
    <url>/2023/10/17/Unity/Unity%E5%B8%B8%E8%A7%81%E6%8F%92%E4%BB%B6%E6%B1%87%E6%80%BB/</url>
    <content><![CDATA[<h4 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h4><p>收集了相关的Unity插件，供大家学习使用，如果用于商业活动，请购买相关版权</p>
<h4 id="插件列表"><a href="#插件列表" class="headerlink" title="插件列表"></a>插件列表</h4><h5 id="1-A-Pathfinding-Project"><a href="#1-A-Pathfinding-Project" class="headerlink" title="1. A* Pathfinding Project"></a>1. <a href="https://wwi.lanzoup.com/iujm30a9cjlc">A* Pathfinding Project</a></h5><p>一个功能强大并且易于使用的 Unity 寻路系统。通过快速的路径寻找，将在点对点之间找到最合适的路径解决方案</p>
<h5 id="2-Behavior-Designer"><a href="#2-Behavior-Designer" class="headerlink" title="2. Behavior Designer"></a>2. <a href="https://wwi.lanzoup.com/i06930a8l5xi">Behavior Designer</a></h5><p>适合于不仅仅是程序员使用也适合于产品+设计师，Behavior Designer 提供具有强大的 API 的直观可视化编辑器，帮您轻松创建新任务</p>
<h5 id="3-DOTween-Pro"><a href="#3-DOTween-Pro" class="headerlink" title="3. DOTween Pro"></a>3. <a href="https://wwi.lanzoup.com/igBSr0a9ckfc">DOTween Pro</a></h5><p>可以用极少的代码处理复杂的动画效果，替代了我们在协程或者在Update里面撰写大量的逻辑控制代码</p>
<h5 id="4-Easy-Save"><a href="#4-Easy-Save" class="headerlink" title="4. Easy Save"></a>4. <a href="https://wwi.lanzoup.com/i9oGJ0a9clmf">Easy Save</a></h5><p>在实际开发中我们需要储存各种类型的数据，并想要数据得到保护，那么EasySave绝对是为这些需求量身定做的</p>
<h5 id="5-Lean-Touch"><a href="#5-Lean-Touch" class="headerlink" title="5. Lean Touch"></a>5. <a href="https://wwi.lanzoup.com/iLxkH0a9cn6b">Lean Touch</a></h5><p>为手指触摸控制你的游戏提供极其简单的解决方案，这让你可以快速添加触摸控制到你的游戏-无需代码</p>
<h5 id="6-Playmaker"><a href="#6-Playmaker" class="headerlink" title="6. Playmaker"></a>6. <a href="https://wwi.lanzoup.com/i6Sq60a9coqh">Playmaker</a></h5><p>这是unity3d最好的一款可视化编辑器，突破了非程序员止步于开发任务的障碍</p>
<h5 id="7-Cross-Platform-Replay-Kit"><a href="#7-Cross-Platform-Replay-Kit" class="headerlink" title="7. Cross Platform Replay Kit"></a>7. <a href="https://wwi.lanzoup.com/i5wMp0a8lqyf">Cross Platform Replay Kit</a></h5><p>能在移动设备iOS和Android上轻松进行屏幕录制，可以在 Unity 上对你的游戏和其他你想要录制记录的画面轻松进行屏幕录制</p>
<h5 id="8-BestHttp"><a href="#8-BestHttp" class="headerlink" title="8. BestHttp"></a>8. <a href="https://wwi.lanzoup.com/iXFWE0a8lvvc">BestHttp</a></h5><p>提供包括Websock,Socket.IO,SignalIR,download/upload等特性。适合于大型网络游戏/项目，网络联机游戏项目</p>
<h5 id="9-UFPS"><a href="#9-UFPS" class="headerlink" title="9. UFPS"></a>9. <a href="https://pan.baidu.com/s/1dVs7snDAWsMGZu7YZHWkiQ">UFPS</a></h5><p>快速构建FPS的模板项目<br><em>提取码：nyj6</em></p>
<h5 id="10-Photon-PUN"><a href="#10-Photon-PUN" class="headerlink" title="10. Photon PUN+"></a>10. <a href="https://wwi.lanzoup.com/ieIWu0a8oj7e">Photon PUN+</a></h5><p>是一款制作多人联机游戏的插件，同时支持PC端、手机端和网页端的Unity项目</p>
<h5 id="11-Ultimate-Inventory-System"><a href="#11-Ultimate-Inventory-System" class="headerlink" title="11. Ultimate Inventory System"></a>11. <a href="https://pan.baidu.com/s/1ZXLoPXgBIva87w_2-DjKFA">Ultimate Inventory System</a></h5><p>制作背包仓储系统的最佳插件<br><em>提取码：7eu5</em></p>
<h5 id="12-Obfuscator"><a href="#12-Obfuscator" class="headerlink" title="12. Obfuscator"></a>12. <a href="https://wwi.lanzoup.com/ik3860a8qdeh">Obfuscator</a></h5><p>可以保护游戏代码和游戏资源，防止被逆向工程破解</p>
<h5 id="13-Anti-Cheat-Toolkit"><a href="#13-Anti-Cheat-Toolkit" class="headerlink" title="13. Anti-Cheat Toolkit"></a>13. <a href="https://wwi.lanzoup.com/ivwjw0a8qgub">Anti-Cheat Toolkit</a></h5><p>保护游戏数据，免于被某些玩家作弊</p>
<h5 id="14-SALSA-LipSync-Suite"><a href="#14-SALSA-LipSync-Suite" class="headerlink" title="14. SALSA LipSync Suite"></a>14. <a href="https://wwi.lanzoup.com/iZznl0a8qm7e">SALSA LipSync Suite</a></h5><p>一款制作唇语同步&amp;面部动画的插件</p>
<h5 id="15-Edy’s-Vehicle-Physics"><a href="#15-Edy’s-Vehicle-Physics" class="headerlink" title="15. Edy’s Vehicle Physics"></a>15. <a href="https://wwi.lanzoup.com/i1A9l0a8qs8b">Edy’s Vehicle Physics</a></h5><p>可以为赛车类游戏提供各种逼真的真实物理效果</p>
<h5 id="16-Editor-Console-Pro"><a href="#16-Editor-Console-Pro" class="headerlink" title="16. Editor Console Pro"></a>16. <a href="https://wwi.lanzoup.com/iKPDC0a8qvhi">Editor Console Pro</a></h5><p>取代Unity原生控制台编辑器的插件，生产力提升必备插件</p>
<h5 id="17-Odin-Inspector-and-Serialize"><a href="#17-Odin-Inspector-and-Serialize" class="headerlink" title="17. Odin - Inspector and Serialize"></a>17. <a href="https://wwi.lanzoup.com/iiFO40a8qyze">Odin - Inspector and Serialize</a></h5><p>一款可视化编程插件,可以让开发者序列化任何内容</p>
<h5 id="18-I2-Localization"><a href="#18-I2-Localization" class="headerlink" title="18. I2 Localization"></a>18. <a href="https://wwi.lanzoup.com/iXBnO0a8r0wd">I2 Localization</a></h5><p>unity功能最全的本地化插件，可以本地化图片、文字、声音、图集、预设等资源</p>
<h5 id="19-Rewired"><a href="#19-Rewired" class="headerlink" title="19. Rewired"></a>19. <a href="https://wwi.lanzoup.com/iyPRo0a8r3kj">Rewired</a></h5><p>可以帮助开发者轻松处理各种外设的输入，以控制游戏世界</p>
<h5 id="20-Loxodon-Framework-Bundle"><a href="#20-Loxodon-Framework-Bundle" class="headerlink" title="20. Loxodon Framework Bundle"></a>20. <a href="https://wwi.lanzoup.com/ie0F90a8r7be">Loxodon Framework Bundle</a></h5><p>一个非常好用的AssetBundle加载器，也是一个AssetBundle冗余分析工具</p>
<h5 id="21-QHierarchy"><a href="#21-QHierarchy" class="headerlink" title="21. QHierarchy"></a>21. <a href="https://wwi.lanzoup.com/i9rCo0a8rafg">QHierarchy</a></h5><p>增强Hierarchy窗口的功能，极大提升开发效率</p>
<h5 id="22-Koreographer-Professional-Edition"><a href="#22-Koreographer-Professional-Edition" class="headerlink" title="22. Koreographer Professional Edition"></a>22. <a href="https://wwi.lanzoup.com/iQkIi0a9d9uh">Koreographer Professional Edition</a></h5><p>制作音乐节拍类游戏的必备神器</p>
<h5 id="23-Master-Audio"><a href="#23-Master-Audio" class="headerlink" title="23. Master Audio"></a>23. <a href="https://wwi.lanzoup.com/iohK80a8rjmh">Master Audio</a></h5><p>是Unity游戏开发的终极音频解决方案</p>
<h5 id="24-Final-IK"><a href="#24-Final-IK" class="headerlink" title="24. Final IK"></a>24. <a href="https://wwi.lanzoup.com/i5cxc0a8rp9a">Final IK</a></h5><p>反向动力控制插件</p>
<h5 id="25-PuppetMaster"><a href="#25-PuppetMaster" class="headerlink" title="25. PuppetMaster"></a>25. <a href="https://wwi.lanzoup.com/icf5P0a8rshg">PuppetMaster</a></h5><p>高级的活跃布娃娃物理系统，带有布娃娃创建和编辑工具</p>
<h5 id="26-Curved-UI"><a href="#26-Curved-UI" class="headerlink" title="26. Curved UI"></a>26. <a href="https://wwi.lanzoup.com/iDW550a8rvif">Curved UI</a></h5><p>资源商店中唯一真正的曲线界面系统</p>
<h5 id="27-VR-Interaction-Framework"><a href="#27-VR-Interaction-Framework" class="headerlink" title="27. VR Interaction Framework"></a>27. <a href="https://pan.baidu.com/s/1zGm-bWAZatNOOrECr8d6jg">VR Interaction Framework</a></h5><p>借助 VR 交互框架，轻松创建属于自己的可交互对象并迅速上手<br><em>提取码：kvse</em></p>
<h5 id="28-Amplify-Shader-Editor"><a href="#28-Amplify-Shader-Editor" class="headerlink" title="28. Amplify Shader Editor"></a>28. <a href="https://wwi.lanzoup.com/iOBMx0a8s3id">Amplify Shader Editor</a></h5><p>一款基于节点的可视化shader制作插件</p>
<h5 id="29-Octave3D-Level-Design"><a href="#29-Octave3D-Level-Design" class="headerlink" title="29. Octave3D-Level Design"></a>29. <a href="https://wwi.lanzoup.com/i3Gm20a8s61e">Octave3D-Level Design</a></h5><p>帮助Unity开发者制作关卡</p>
<h5 id="30-Mesh-Baker"><a href="#30-Mesh-Baker" class="headerlink" title="30. Mesh Baker"></a>30. <a href="https://wwi.lanzoup.com/ik7i30a8scaj">Mesh Baker</a></h5><p>用来合并Mesh和Materials，这样可以降低游戏对内存和显卡的消耗</p>
<h5 id="31-Corgi-Engine"><a href="#31-Corgi-Engine" class="headerlink" title="31. Corgi Engine"></a>31. <a href="https://pan.baidu.com/s/1FYU57YkiyTU6_yo9pKo9PA">Corgi Engine</a></h5><p>一款制作2D/2.5D的平台游戏引擎，内部集成了若干有趣的游戏<br><em>提取码：jydg</em></p>
<h5 id="32-Doozy-UI-Manager"><a href="#32-Doozy-UI-Manager" class="headerlink" title="32. Doozy UI Manager"></a>32. <a href="https://pan.baidu.com/s/1F4TjhxUAjLi3BRCI3HnA1g">Doozy UI Manager</a></h5><p>Unity内部的一个UI管理插件<br><em>提取码：bbik</em></p>
<h5 id="33-Fantasy-Environment"><a href="#33-Fantasy-Environment" class="headerlink" title="33. Fantasy Environment"></a>33. <a href="https://pan.baidu.com/s/1KmbLMyUuli0MMqhm1LIpOg">Fantasy Environment</a></h5><p>包含了大量的幻想风格的游戏素材<br><em>提取码：xyqs</em></p>
<h5 id="34-MapMagic-World-Generator"><a href="#34-MapMagic-World-Generator" class="headerlink" title="34. MapMagic World Generator"></a>34. <a href="https://pan.baidu.com/s/1mjWHFzCcUhawurQ-sR2Bkw">MapMagic World Generator</a></h5><p>一款基于节点制作地形的插件<br><em>提取码:ssvw</em></p>
<h5 id="35-TopDown-Engine"><a href="#35-TopDown-Engine" class="headerlink" title="35. TopDown Engine"></a>35. <a href="https://pan.baidu.com/s/1_rCEgcybfTFOD8Fdp2uCUA">TopDown Engine</a></h5><p>Unity 最完善的自上而下解决方案<br><em>提取码：e5x7</em></p>
<h5 id="36-Dynamic-Bone"><a href="#36-Dynamic-Bone" class="headerlink" title="36. Dynamic Bone"></a>36. <a href="https://wwi.lanzoup.com/igPvk0a8t7bg">Dynamic Bone</a></h5><p>可给角色骨骼和关节增添物理效果</p>
<h5 id="37-Feel"><a href="#37-Feel" class="headerlink" title="37. Feel"></a>37. <a href="https://pan.baidu.com/s/1UIpgzZqp-lz-4QKPxVvNOA">Feel</a></h5><p>可以增加游戏感觉的插件<br><em>提取码:d341</em></p>
<h5 id="38-Text-Animator-for-Unity"><a href="#38-Text-Animator-for-Unity" class="headerlink" title="38. Text Animator for Unity"></a>38. <a href="https://wwi.lanzoup.com/iI7ed0a8thoj">Text Animator for Unity</a></h5><p>让对话变得活泼，借助这一简单易用的自定义插件将游戏文本动画化</p>
<h5 id="39-Dialogue-System-for-Unity"><a href="#39-Dialogue-System-for-Unity" class="headerlink" title="39. Dialogue System for Unity"></a>39. <a href="https://wwi.lanzoup.com/io3Ra0a8tlkj">Dialogue System for Unity</a></h5><p>可在游戏中轻松添加互动式对话和任务</p>
<h5 id="40-Adventure-Creator"><a href="#40-Adventure-Creator" class="headerlink" title="40. Adventure Creator"></a>40. <a href="https://wwi.lanzoup.com/iv1a40a8tpdg">Adventure Creator</a></h5><p>帮助你制作传统的 2D、2.5D 和 3D 冒险游戏</p>
<h5 id="41-All-In-1-Vfx-Toolkit"><a href="#41-All-In-1-Vfx-Toolkit" class="headerlink" title="41. All In 1 Vfx Toolkit"></a>41. <a href="https://pan.baidu.com/s/1PktoZ2RUMfA7lWq18jocWg">All In 1 Vfx Toolkit</a></h5><p>快速简单的创建出VFX<br><em>提取码:khgj</em></p>
<h5 id="42-RPG-Character-Mecanim-Animation-Pack"><a href="#42-RPG-Character-Mecanim-Animation-Pack" class="headerlink" title="42. RPG Character Mecanim Animation Pack"></a>42. <a href="https://wwi.lanzoup.com/iduTW0a8tyli">RPG Character Mecanim Animation Pack</a></h5><p>1320个漂亮又专业的动画, 可兼容Xbox360游戏手柄, 以及基于物理学的人物控制器脚本</p>
<h5 id="43-The-Vegetation-Engine"><a href="#43-The-Vegetation-Engine" class="headerlink" title="43. The Vegetation Engine"></a>43. <a href="https://pan.baidu.com/s/1HhS7ZbXWyKPnzYKHY0DJ3Q">The Vegetation Engine</a></h5><p>植物渲染资源包<br><em>提取码:m37x</em></p>
<h5 id="44-Emerald-AI"><a href="#44-Emerald-AI" class="headerlink" title="44. Emerald AI"></a>44. <a href="https://pan.baidu.com/s/1QJwXc1BrxL95vFJM7ltU9g">Emerald AI</a></h5><p>快速创建AI<br><em>提取码:noik</em></p>
<h5 id="45-Enviro-Sky-and-Weather"><a href="#45-Enviro-Sky-and-Weather" class="headerlink" title="45. Enviro - Sky and Weather"></a>45. <a href="https://pan.baidu.com/s/1AnIx2DIXxKbRnDgdQS3bgw">Enviro - Sky and Weather</a></h5><p>非常好用的天气资源<br><em>提取码：mmat</em></p>
<h5 id="46-UMMORPG"><a href="#46-UMMORPG" class="headerlink" title="46. UMMORPG"></a>46. <a href="https://pan.baidu.com/s/1vOEJcSHEZJ45Ckx8qSdJ3g">UMMORPG</a></h5><p>Unity最好的RPG游戏模板项目<br><em>提取码：y87r</em></p>
<h5 id="47-UMOBA"><a href="#47-UMOBA" class="headerlink" title="47. UMOBA"></a>47. <a href="https://wwi.lanzoup.com/i61nm0a9d3ri">UMOBA</a></h5><p>Unity最好的MOBA游戏模板项目</p>
]]></content>
      <tags>
        <tag>U3D</tag>
      </tags>
  </entry>
  <entry>
    <title>Unity烘焙</title>
    <url>/2021/12/17/Unity/Unity%E7%83%98%E7%84%99/</url>
    <content><![CDATA[<p>1 什么是烘焙，有什么用</p>
<pre><code>析度/具体数据加工为低维/低解析度/特化数据的过程，通常是为了生成近似算法所需的数据，以提高运行时效率。
</code></pre>
<p>2 光照贴图烘焙</p>
<pre><code>你把物体模型放进了场景里之后， 引擎会计算光线，光线照到你的物体的表面形成反光和阴影。 如果不烘焙， 游戏运行的时候，这些反光和阴影都是由显卡和CPU计算出来的。
你烘焙之后，这些反光和阴影都记录到了你的模型里，变成了新的贴图了，运行的时候，显卡和CPU不需要进行对环境光效果的运算了。如前面的回答，节约CPU资源。
</code></pre>
<p>3 Lighting Mode（光照模式）</p>
<pre><code>3.1 指定 Unity 对场景中的所有混合光照使用哪种光照模式

3.2 Baked Indirect（烘焙间接）
    如果场景中的灯光模式设置为Mixed，那么这些灯光会给场景提供直接光照，间接光照信息则被烘焙到光照贴图和光照探针中。

3.3 Shadowmask（遮罩）
    如果场景中的灯光模式设置为Mixed，灯光会给场景提供直接光照，间接光照烘焙到光照贴图和光照探针中。Shadowmask和光照探针遮挡信息会被烘焙到阴影信息中。

3.4 Subtractive（减法）
    场景中的直接光照，间接光照和阴影信息都会烘焙到光照贴图中。适合对性能敏感的平台比如移动端平台。

3.5 支持的渲染管线：
    1. 内置渲染管线（Built-in Render Pipeline）：支持Baked Indirect，Subtractive和Shadowmask光照模式。

    2. 通用渲染管线（Universal Render Pipeline，简称URP）：支持Baked Indirect，Subtractive和Shadowmask光照模式。

    3. 高清渲染管线（High Definition Render Pipeline，简称HDRP）：支持Baked Indirect和Shadowmask光照模式。
</code></pre>
<p>4 Lightmapper（光照贴图系统）</p>
<pre><code>使用该选项来指定使用哪种光照计算方式来计算场景中的光照贴图。选项有：Progressive 和 Enlighten（遗弃）。默认选项是 Progressive。新增了 CUP 和GPU类型   ，影响烘焙效率
</code></pre>
<p>5 Prioritize View（优先视图）</p>
<pre><code>启用此选项，如果Scene窗口打开，系统会逐步烘焙Scene窗口看到的画面，然后再继续烘焙Scene画面之外的场景区域。
如果你在Scene窗口移动场景中物体，改变物体和灯光属性或者改变Scene窗口画面等操作，烘焙会及时调整，快速逐步烘焙改变后的画面。在使用此选项时记得打开Auto Generate（自动生成）复选框。
</code></pre>
<p>6 Multiple ImportanceSampling（多重重要抽样）</p>
<pre><code>（默认是禁用状态）这是针对环境光采样的设置。如果开启，可以缩短光照贴图的生成时间，但是在场景中某些较暗的地方会产生明显的噪点。
</code></pre>
<p>7 Direct Samples（直接光照采样）</p>
<pre><code>用于设置从每一个纹素（Texel）射出的采样路径数（针对直接光照）。数值越大效果越好，烘焙时间也越长。
</code></pre>
<p>8 Indirect Samples（间接光照采样）</p>
<pre><code>用于设置从每一个纹素（Texel）射出的采样路径数（针对间接光照）。数值越大效果越好，烘焙时间也越长。针对户外场景，指导数值为100。室内场景（包含自发光物体），可以按需增加采样路径数直到看到效果。
</code></pre>
<p>9 Environment Samples（环境光照采样）</p>
<pre><code>针对环境光的采样数。数值越大效果越好，烘焙时间也越长。默认数值为500。
</code></pre>
<p>10 Light Probe SampleMultiplier（光照探头计算）</p>
<pre><code>如要使用此功能，必须在Project Settings &gt; Editor&gt; Graphics中禁用Use legacy Light Probe sample counts
此数值会被用于分别乘以Direct Samples，Indirect Samples和Environment Samples这三个数值。这三个数值会被应用于LightProbes采样。数值越大效果越好，烘焙时间也越长。
</code></pre>
<p>11 Bounces（反射次数）    </p>
<pre><code>当追踪路径时，使用该值来指定间接光照反射的次数。对于大多数场景，反射2次应该足够了。而对于一些室内场景，可能需要更多地反射次数。
</code></pre>
<p>12 Filtering（过滤）</p>
<pre><code>12.1 
    Filtering区域的设置用于光照贴图的降噪操作。降噪操作本质上是一个针对已经烘焙好的光照贴图做后处理的过程。
    如果启用Filtering功能，系统会在把光照贴图的Direct，Indirect和AmbientOcclusion这三部分信息结合之前，分别为这三个部分应用降噪算法。 

12.2 
    自动：Progressive Lightmapper会自动选择一个当前机器支持的降噪算法应用到光照贴图上（因为规则是固定的，所以具体规则请参考Unity文档）。
    高级：可以为Direct，Indirect和Ambient Occlusion分别选择降噪算法（Denoiser）或者降噪滤镜（Filter）。如果你有支持Nvidia Optix降噪算法的GPU，可以选择Optix；如果有支持RadeonPro降噪算法的GPU，可以选择RadeonPro；在任何情况下，都可以选择基于CPU的降噪算法OpenImageDenoise。这里的Guassian（高斯）滤镜会在降噪算法之后在光照贴图上做进一步的模糊处理，以减少光照贴图中的噪点。  
</code></pre>
<p>13 Lightmap Resolution（光照贴图分辨率）</p>
<pre><code>数值单位为texelsper unit（每单位面积的纹素）。
Texel（纹素）有别于Pixel（像素）。像素是图片的基本单位，如果我们在图片编辑软件中把图片放大到足够大，可以看到这些图片由许多正方形的像素组成，所以像素是屏幕空间的概念。纹素则是纹理贴图的基本单位，纹理贴图是应用于模型上的，所以并不是屏幕空间的概念。
在模型被绘制到屏幕上时，纹素会被转换成屏幕上的像素展现出来。我们可以通过网络上找到的这张图来理解像素和纹素之间的对应关系
像素和纹素最大的区别是：像素其实就是图片数据；但是纹素可以代表很多类型的数据，它可以是纹理贴图，也可以是用于计算阴影的深度图。
光照贴图本质上是纹理贴图，因此Progressive Lightmapper在这里用纹素而不是像素来代表光照贴图的分辨率。
</code></pre>
<p>14 Lightmap Padding（光照贴图填充）</p>
<pre><code>数值单位为texel（纹素），默认值为2。烘焙好的光照贴图中包含很多Charts。这些Charts可以理解成对应模型上包含烘焙光照信息的UV色块。在游戏运行时，这些色块会与模型网格进行映射，完成最终效果的计算（在模型原先的纹理上叠加烘焙的光照信息）。但是这些“色块”之间必须保持一定的距离才能确保模型上一个部位的颜色不会“渗色”到另一个部位。
</code></pre>
<p>15 Lightmap Size（光照贴图尺寸）</p>
<pre><code>数值单位为像素，默认值为1024。根据Lightmap Resolution和Lightmap Padding的参数设定，烘焙出来的光照贴图数量会相应的变化。这里的大小其实代表的是每张光照贴图的最大尺寸。按照实际需求，即使设置了2048，某些光照贴图的尺寸也有可能是1024或者512。
</code></pre>
<p>16 Compress Lightmaps（压缩光照贴图）</p>
<pre><code>默认启用，对光照贴图进行压缩操作。虽然压缩过的光照贴图可以减少内存占用，但是也会导致光照贴图质量下降。
</code></pre>
<p>17 Ambient Occlusion（环境遮蔽）</p>
<pre><code>环境光遮蔽用于为场景中的某些区域比如裂缝，孔洞，墙面的交界处，或者任何两个物体相邻的区域添加类似于阴影的效果。它会让这些地方变得比其他地方更暗一些。此处的设置会把这些环境光遮蔽信息烘焙入光照贴图中。
</code></pre>
<p>18 Directional Mode（方向模式）</p>
<pre><code>Directional：此模式下会生成第二套光照贴图，专门用于保存入射光的主要方向信息。使用法线贴图的材质可以利用这张光照贴图上的方向信息，在计算法线贴图时加入光照贴图中保存的全局光照信息。不过此模式下生成的光照贴图通常比Non-Directional模式下生成的光照贴图大一倍。（此模式下生成的光照贴图无法在SM2.0和GLES2.0硬件上解码使用。在这些硬件上会回退到Non-Directional模式）。
Non-Directional：禁止烘焙时生成第二套用于保存入射光主要方向信息的光照贴图。
</code></pre>
<p>19 Indirect Intensity（间接光强度）和Albedo Boost（反照率增强）</p>
<pre><code>Indirect Intensity（间接光强度）：用于控制光照贴图中保存的间接光强度。数值限定在0到5之间。默认数值为1。数值大于1会增强间接光强度，小于1会减弱间接光强度。
Albedo Boost（反射率增强）：用于控制物体表面之间光子弹射的数量。默认数值为1。数值限定在1到10之间。数值越大，物体表面的反射率越趋向于白色。    
</code></pre>
]]></content>
      <tags>
        <tag>U3D</tag>
        <tag>记录</tag>
        <tag>烘焙</tag>
      </tags>
  </entry>
  <entry>
    <title>PRB名词解释</title>
    <url>/2021/12/31/shader/PRB%E5%90%8D%E8%AF%8D%E8%A7%A3%E9%87%8A/</url>
    <content><![CDATA[<p>1 什么是PRB，有什么用</p>
<pre><code>基于物理的渲染过程，是一种着色和渲染技术，用于更精确的描述光如何与物体表面互动，PBR的优势在于其通过精确的物理计算公式，可以准确的得到各种光照环境下的效果。
</code></pre>
<p>2 PBR分类</p>
<pre><code>基于金属的工作流Metal / Roughness
基于镜面反射的工作流Specular / Glossiness
</code></pre>
<p>3 PBR中 BRDF公式大概</p>
<pre><code>输出颜色 = 散射光占比 * （表面颜色/PI）+ 镜面反射比例 *（ DFG / 4 * max(dot(法线,视线),0) * saturate(dot(法线,光线)) ） * （光线 dot 法线）
</code></pre>
<p>4 PBR散射光占比</p>
<pre><code>散射光占比kD：为了保持能量守恒，散射光占比 和 镜面光占比之和不能超过1.0    kD = float3(1.f, 1.f, 1.f) - kS    金属度越高，散射越少 kD = kD * (1.f - metallic);
</code></pre>
<p>5 镜面反射比例</p>
<pre><code>镜面光占比kS 镜面光占比为菲涅尔结果  kS = F     DFG 已经包含
</code></pre>
<p>6  DFG</p>
<pre><code>6.1
    D 法线分布函数（Normal Distribution Function）:估算在受到表面粗糙度的影响下，取向方向与中间向量一致的微平面的数量。这是用来估算微平面的主要函数。
    F 菲涅尔方程（Fresnel Rquation）：菲涅尔方程描述的是在不同的表面角下表面所反射的光线所占的比率。菲涅尔效果就是当视线与法线夹角越大折射效果减弱而反射效果增强，
        拿水来说我们近处的水透明见底可理解为光线发生了全折射而零反射，远处的水波光粼粼可理解为光线发生了零折射而全反射。
    G 几何函数（Geometry Function）：描述了微平面自成阴影的属性。当一个平面相对比较粗糙的时候，平面表面上的微平面有可能挡住其他的微平面从而减少表面所反射的光线。

6.2
    法线分布函数（Normal Distribution Function )，描述了描述了微观表面上的表面法线m的统计分布，即具有正确朝向的微表面法线浓度

    基本性质：
    &gt;&gt;&gt;&gt; 1.法线分布函数作为微平面密度的度量，应始终为正值
    &gt;&gt;&gt;&gt; 2.微表面总面积不小于对应宏观表面总面积
    &gt;&gt;&gt;&gt; 3.任何方向上微观表面投影面积与宏观表面投影面积相同
    &gt;&gt;&gt;&gt; 4.观察方向若为法线方向( v =n ) ，则其积分可以归一化

    各种模型：
    &gt;&gt;&gt;&gt; Berry [1923]
    &gt;&gt;&gt;&gt; Beckmann [1963]
    &gt;&gt;&gt;&gt; Phong [1973]
    &gt;&gt;&gt;&gt; Blinn-Phong [1977]
    &gt;&gt;&gt;&gt; ABC [1989]
    &gt;&gt;&gt;&gt; GGX [2007] / Trowbridge-Reitz [1975]
    &gt;&gt;&gt;&gt; Shifted Gamma Distribution，SGD [2012]
    &gt;&gt;&gt;&gt; Trowbridge-Reitz（GTR）[2012]
    &gt;&gt;&gt;&gt; Student’s T-Distribution , STD [2017]
    &gt;&gt;&gt;&gt; Exponential Power Distribution , EPD [2017]等

    GGX模型：
    &gt;&gt;&gt;&gt; denom = (dot(N,H))的平方 * ((a的平方 - 1.0) + 1.0)
    &gt;&gt;&gt;&gt; GGX = a的平方/ (PI * denom的平方)
    &gt;&gt;&gt;&gt; 事件代码
</code></pre>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// GGX正态分布函数</span><br><span class="line">float DistributionGGX(float3 N,float3 H,float roughness)</span><br><span class="line">&#123;</span><br><span class="line">    float a2=roughness*roughness;</span><br><span class="line">    a2=a2*a2;</span><br><span class="line">    float NdotH=saturate(dot(N,H));</span><br><span class="line">    float NdotH2=NdotH*NdotH;</span><br><span class="line"></span><br><span class="line">    float denom=(NdotH2*(a2-1.0)+1.0);</span><br><span class="line">    denom = UNITY_PI*denom*denom;</span><br><span class="line">    return a2/denom;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<pre><code>6.3
    菲涅尔方程描述的是在不同的表面角下表面所反射的光线所占的比率。菲涅尔效果就是当视线与法线夹角越大折射效果减弱而反射效果增强
    cosTheta = clamp(dot(halfDir,viewDir),0,1)
    F0 = 不同采材质的反射率
</code></pre>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 菲涅尔简化方程代码</span><br><span class="line">float3 FresnelSchlick(float cosTheta,float3 F0)</span><br><span class="line">&#123;</span><br><span class="line">    return F0 + (1.0-F0) * pow(1.0-cosTheta,5.0);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<pre><code>6.4
    几何遮蔽函数：它主要是用来模拟微平面的一个点有没有被遮住
    为了有效的估算几何部分，需要将观察方向（几何遮蔽(Geometry Obstruction)）和光线方向向量（几何阴影(Geometry Shadowing)）都考虑进去。我们可以使用史密斯法(Smith’s method)来把两者都纳入其中
    Smith 几何遮蔽函数G：
    &gt;&gt;&gt;&gt; worldNormal,viewDir,worldLightDir,_Roughness
</code></pre>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">// Smith 几何遮蔽函数</span><br><span class="line">float3 GeometrySchlickGGX(float NdotV,float roughness)</span><br><span class="line">&#123;</span><br><span class="line">    float r = roughness + 1.0; //直接光照K值</span><br><span class="line">    float k = r*r/8.0;</span><br><span class="line"></span><br><span class="line">    float denom = NdotV * (1.0-k) + k;</span><br><span class="line">    return NdotV/denom;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">float GeometrySmith(float3 N,float3 V,float3 L,float roughness)</span><br><span class="line">&#123;</span><br><span class="line">    float NdotV = saturate(dot(N,V));</span><br><span class="line">    float NdotL = saturate(dot(N,L));</span><br><span class="line">    float ggx1  = GeometrySchlickGGX(NdotV,roughness);</span><br><span class="line">    float ggx2  = GeometrySchlickGGX(NdotL,roughness);</span><br><span class="line"></span><br><span class="line">    return ggx1 * ggx2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>7 总结<br>    结束: ( kD * albedo / UNITY_PI + specular) * NdotL<br>    自己老是容易忘记 年级大了？</p>
]]></content>
      <tags>
        <tag>U3D</tag>
        <tag>记录</tag>
        <tag>PRB</tag>
      </tags>
  </entry>
  <entry>
    <title>PBR Graph的简单使用</title>
    <url>/2021/11/29/shader/ShaderGraph%E5%85%A5%E9%97%A8%EF%BC%9APBR%20Graph%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p>1、创建PBR Graph<br>在Project窗口中右键-Create-Shader-PBR Graph，即可创建一个PBRGraph脚本：ShaderGraph。双击新建文件，即可打开编辑窗口<br>2、创建一个颜色变量<br>点击左上角的属性窗口中的+号可以创建变量，这里我们创建一个Color变量。完成后出现了一个Color变量，我们可以设置默认颜色，按住Ctrl加鼠标左键点击 我设置了红色<br>3、将Color变量连到Master节点中将变量拖动到右边操作区中    将Color节点连到PBR Master节点的Albedo插槽中，即可看到预览窗口中的模型的表面已变成了红色。<br>4、保存ShaderGraph文件 点击Save Asset即可保存ShaderGraph文件。<br>5、将ShaderGraph赋值给Material材质球创建一个Material材质球：PBRTestMaterial，然后直接将ShaderGraph文件拖动到材质球文件上即可。材质球上，可以看到我们在ShaderGraph中创建的Color变量，通过变量可以调整材质球的颜色。<br>6、将材质球赋值给3D模型在Hierachy窗口中右键 - 3D Object - Capsule，创建衣蛾胶囊体模型，将材质球赋值给胶囊体的材质属性中，即可看到胶囊体变成了红色 ，调整材质球的Color变量，胶囊体的颜色也相应的发生变化。</p>
]]></content>
      <categories>
        <category>PBR Graph的简单使用</category>
      </categories>
      <tags>
        <tag>shader</tag>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>ShaderGraph科普</title>
    <url>/2021/11/29/shader/ShaderGraph%E7%A7%91%E6%99%AE/</url>
    <content><![CDATA[<p>1、渲染管线（Render Pipline）<br>渲染管线也称渲染流水线，是显示芯片（GPU）内部处理图形信号相互独立的并行的处理单位。<br>渲染管线流程包括下面几个步骤：顶点处理、面处理、光栅化、像素处理等。<br>Unity内置的渲染管线，我们可以使用shader来实现渲染管线中的某些步骤的逻辑。</p>
<p>2、可编程渲染管线，SRP（Scriptable Render Pipline）<br>Unity2018中引入了可编程渲染管线（Scriptable Render Pipline），简称SRP，是一种在Unity中通过C#脚本配置和执行渲染的方式。</p>
<p>为什么需要SRP?<br>  Unity内置的渲染管道只有Forward和Deferred两种。</p>
<p>  Forward Shading<br>  原理：每个作用于物体的像素光单独计算一次，drawCall随着物体与光照数量增加而成倍增加<br>  优点：不受硬件限制<br>  缺点：光照计算开销成倍增加随着光源和物体数量增加。<br>  每个物体接受光照数量有限。</p>
<p>  Deferred Shading<br>  原理：物体颜色、法线、材质等信息先渲染到G-Buffer中，光照最后单独渲染，避免每个物体多个光照批次的问题<br>  优点：作用于每个物体光照数量不再受到限制，光照计算不随着物体增加而增加<br>  缺点：移动设备需要支持OpenGL3.0。<br>  不支持MSAA(多重采样抗锯齿)。<br>  半透明物体仍然使用前向渲染。</p>
<p>如上，这两种内置的管道各有优缺点 ，还有，我们看不到源代码，如果为了表现某种特殊的视觉效果修改起来非常不便。所以就有了SRP的诞生。另外，根据项目的需求写合适的SRP，也可以降低DrawCall，提高运行效率。SRP引入了CommandBuffer。<br>CommandBuffer，用于拓展Unity渲染管线。<br>包含一系列渲染命令，比如设置渲染目标，绘制网格等，并可以设置为在摄像机期间的各个点执行渲染<br>下面是CommandBuffer的一个简单的例子：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public override void Render(ScriptableRenderContext context, Camera[] cameras)</span><br><span class="line">&#123;</span><br><span class="line">  base.Render(context, cameras);</span><br><span class="line"></span><br><span class="line">  var cmd = new CommandBuffer();</span><br><span class="line">  cmd.ClearRenderTarget(true, true, m_ClearColor);</span><br><span class="line">  context.ExecuteCommandBuffer(cmd);</span><br><span class="line">  cmd.Release();</span><br><span class="line">  context.Submit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>自己定制渲染管线对编程要求很高，难度大。<br>所以Unity提供里2个预制的管线：高清渲染管线（HDRP，全称High DeFinition Render Pipleline）、通用渲染管线（URP，全称Universal Render Pipleline），注意，URP的前身就是轻量级渲染管线LWRP（全称Light Weight Render Pipleline）。</p>
<p>3、高清渲染管线，HDRP（High DeFinition Render Pipleline）<br>在Unity2018版本，Unity为了提高引擎的画面表现，推出了High DeFinition Render Pipeline，高清晰渲染管线，简称HDRP。<br>HDRP专注于高端图形渲染，针对高端硬件配置，像PC、X@R_228_2419@和Playstation，其面向高逼真度的游戏、图形demo和建筑渲染、超写实效果，以及所需的最佳图形效果，目前还不支持在手机移动端使用HDRP。<br>想得到HDRP的完美表现能力，需要大量的贴图，漫反射贴图、高光贴图、金属贴图、平滑贴图、AO贴图(环境遮挡贴图)、法线贴图、凹凸贴图、高度贴图等等，所以要做HDRP流程需要非常长的时间和庞大的制作团队以及充足的预算。</p>
<p>4、通用渲染管线，URP（Universal Render Pipleline）<br>在2019.3版本中，Unity将轻量渲染管线LWRP重命名为通用渲染管线URP，通用渲染管线是制作精美图形和显示效果的强力方案，并且同时支持多个平台。轻量渲染管线设计初时具有快捷、可伸缩的优点，可为所有移动端带来高质量的图形效果。URP是Unity未来的默认渲染方式。<br>Unity官方将致力于改进通用渲染管线，为用户带来VFX Graph、Shader Graph、Custom Render Passes及最新Post-Processing(后处理)的各种便利，实现等同甚至更好的品质与性能，且只需一次开发，便能在大量的平台上部署。<br>需要注意的是，通用渲染管线将不会取代或包括高清渲染管线（HDRP）。</p>
<p>5、ShaderGraph<br>Unity2018推出了一个可编程渲染管线工具ShaderGraph，让开发者们可以通过可视化界面拖拽来实现着色器的创建和编辑。<br>目前ShaderGraph支持的URP通用渲染管线，也支持HDRP高清渲染管线。<br>我们通过Unity的PackageManager安装ShaderGraph，还需要安装对应的渲染管线工具包，比如要使用URP通用渲染管线，则需要通过PackageManager安装Universal RP，如果要使用HDRP高清渲染管线，则需要通过PackageManager安装High DeFinition RP。<br>安装了渲染管线工具包之后，就可以通过菜单 Assets - Create - Rendering创建对应的渲染管线配置。接着在Editor - Project Setting - Graphics中的Scriptable Render Pipeline Settings设置渲染管线配置文件。如果是使用URP，则设置URP的渲染线 配置</p>
]]></content>
      <categories>
        <category>ShaderGraph科普</category>
      </categories>
      <tags>
        <tag>shader</tag>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>PBR 实战特效案例</title>
    <url>/2021/11/29/shader/ShaderGraph%E8%BF%9B%E9%98%B6%EF%BC%9A%E5%AE%9E%E6%88%98%E7%89%B9%E6%95%88%E6%A1%88%E4%BE%8B/</url>
    <content><![CDATA[<p>1、模型裁切，主要节点、Position、AlphaClip<br>原理：AlphaClip的值如果比Alpha的值大，则会不显示</p>
]]></content>
      <categories>
        <category>PBR 实战特效案例</category>
      </categories>
      <tags>
        <tag>shader</tag>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>unity基本光照模型实现</title>
    <url>/2021/12/29/shader/unity%E5%9F%BA%E6%9C%AC%E5%85%89%E7%85%A7%E6%A8%A1%E5%9E%8B%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<p>Lambert模型(漫反射)<br>  1 和法线，光照有关</p>
<p>下面unity实现的例子  片元着色器中的：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//UNITY_LIGHTMODEL_AMBIENT 表示系统的环境光</span><br><span class="line">fixed3 ambient = UNITY_LIGHTMODEL_AMBIENT.xyz;</span><br><span class="line">        </span><br><span class="line">// Get the normal in world space</span><br><span class="line">fixed3 worldNormal = normalize(i.worldNormal);</span><br><span class="line">//得到世界空间中的光线方向</span><br><span class="line">fixed3 worldLightDir = normalize(_WorldSpaceLightPos0.xyz);</span><br><span class="line">        </span><br><span class="line">// Compute diffuse term</span><br><span class="line">fixed3 diffuse = _LightColor0.rgb * _Diffuse.rgb * saturate(dot(worldNormal, worldLightDir));</span><br><span class="line">        </span><br><span class="line">fixed3 color = ambient + diffuse;</span><br></pre></td></tr></table></figure>

<p>Phong模型(镜面反射)<br>  1 和视线，反射光照有关</p>
<p>下面unity实现的例子  片元着色器中的：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//获取环境光</span><br><span class="line">fixed3 ambient = UNITY_LIGHTMODEL_AMBIENT.xyz;</span><br><span class="line"></span><br><span class="line">//获取世界空间法线</span><br><span class="line">fixed3 worldNormal = normalize(i.worldNormal);</span><br><span class="line">//获取世界空间光照方向</span><br><span class="line">fixed3 worldLightDir = normalize(_WorldSpaceLightPos0.xyz);</span><br><span class="line"></span><br><span class="line">//计算漫反射</span><br><span class="line">fixed3 diffuse = _LightColor0.rgb * _Diffuse.rgb * saturate(dot(worldNormal, worldLightDir));</span><br><span class="line"></span><br><span class="line">//获取世界空间反射方向</span><br><span class="line">fixed3 reflectDir = normalize (reflect(-worldLightDir, worldNormal));</span><br><span class="line">//&quot;reflect()&quot; 函数是Unity内置的函数，可以用来计算反射方向，如果不使用这个函数则上一句代码可以改成下面这样：</span><br><span class="line">//fixed3 reflectDir = normalize(-worldLightDir - 2 * dot(-worldNormal, worldLightDir) * worldNormal);</span><br><span class="line"></span><br><span class="line">//获取世界空间中的视角方向</span><br><span class="line">fixed3 viewDir = normalize(_WorldSpaceCameraPos.xyz - i.worldPos.xyz);</span><br><span class="line">//计算反射信息</span><br><span class="line">fixed3 specular = _LightColor0.rgb * _Specular.rgb * pow(saturate(dot(reflectDir,viewDir)), _Gloss);</span><br><span class="line"></span><br><span class="line">return fixed4(ambient + diffuse + specular, 1.0);</span><br></pre></td></tr></table></figure>

<p>Blinn-Phong光照模型(修正镜面光)<br>  1 和法线，半程向量有关</p>
<p>下面unity实现的例子  片元着色器中的：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//获取环境光</span><br><span class="line">fixed3 ambient = UNITY_LIGHTMODEL_AMBIENT.xyz;</span><br><span class="line"></span><br><span class="line">//获取法线信息</span><br><span class="line">fixed3 worldNormal = normalize(i.worldNormal);</span><br><span class="line"></span><br><span class="line">//获取光线方向</span><br><span class="line">fixed3 worldLightDir = normalize(_WorldSpaceLightPos0.xyz);</span><br><span class="line"></span><br><span class="line">//计算漫反射信息</span><br><span class="line">fixed3 diffuse = _LightColor0.rgb * _Diffuse.rgb * saturate(dot(worldNormal, worldLightDir));</span><br><span class="line"></span><br><span class="line">//获取世界空间视角方向</span><br><span class="line">fixed3 viewDir = normalize(_WorldSpaceCameraPos.xyz - i.worldPos.xyz);</span><br><span class="line"></span><br><span class="line">//计算Half方向</span><br><span class="line">fixed3 halfDir = normalize(worldLightDir + viewDir);</span><br><span class="line"></span><br><span class="line">//计算高光信息</span><br><span class="line">fixed3 specular = _LightColor0.rgb * _Specular.rgb * pow(max(0, dot(worldNormal, halfDir)), _Gloss);</span><br><span class="line"></span><br><span class="line">return fixed4(ambient + diffuse + specular, 1.0);</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>unity基本光照模型实现</category>
      </categories>
      <tags>
        <tag>shader</tag>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>政治经济学</title>
    <url>/2022/06/29/%E4%BA%BA%E7%94%9F%E6%88%90%E9%95%BF/%E6%94%BF%E6%B2%BB%E7%BB%8F%E6%B5%8E%E5%AD%A6/</url>
    <content><![CDATA[<p>毛主席语录:<br>一、“世界上从有历史以来,没有不搞实力地位的事情。<br>任何阶级、任何国家，都是要搞实力地位的。搞实力地位，这是历史的必然趋势。国家是阶级统治的机关，军队是阶级的实力。<br>只要有阶级，就不能不搞军队。<br>    ”——《读苏联〈政治经济学教科书〉的谈话(节选)》 1959年；<br>二、“马克思主义的道理千条万绪，归根结底，就是一句话:造反有理。几千年来总是说:压迫有理，剥削有理，造反无理。<br>自从马克思主义出来，就把这个旧案翻过来了，这是一个大功劳。这个道理是无产阶级从斗争中得来的，而马克思做了结论。<br>根据这个道理，于是就反抗，就斗争，就干社会主义。<br>    ”——《在延安各界庆祝斯大林六十寿辰大会上的讲话》1939年</p>
]]></content>
      <tags>
        <tag>人生成长</tag>
      </tags>
  </entry>
  <entry>
    <title>毛主席〈在延安文艺座谈会上的讲话〉</title>
    <url>/2022/06/29/%E4%BA%BA%E7%94%9F%E6%88%90%E9%95%BF/%E6%AF%9B%E4%B8%BB%E5%B8%AD%E3%80%88%E5%9C%A8%E5%BB%B6%E5%AE%89%E6%96%87%E8%89%BA%E5%BA%A7%E8%B0%88%E4%BC%9A%E4%B8%8A%E7%9A%84%E8%AE%B2%E8%AF%9D%E3%80%89/</url>
    <content><![CDATA[<p>要重视意识形态领域的斗争。<br>一、“从历史上看，塑造哪个阶级的英雄形象，由哪个阶级的代表人物作为文艺舞台的主人，<br>是政治斗争在文艺上的集中反映，是文艺为哪个阶级的政治路线服务的主要标志。古往今来，每个阶级都用文艺塑造本阶级的英雄形象，<br>宣传本阶级的世界观，以达到按照本阶级的面貌改造世界的目的。哪个阶级的英雄形象占领文艺舞台，标志着由哪个阶级在文艺领域实行专政。<br>    ”——《京剧革命十年》红旗杂志1974年第七期；<br>二、“你是资产阶级文艺家，你就不歌颂无产阶级而歌颂资产阶级；你是无产阶级文艺家，你就不歌颂资产阶级而歌颂无产阶级和劳动人民:两者必居其一。<br>    ”——毛泽东《在延安文艺座谈会上的讲话》1942年五月</p>
<p>「毛主席在《讲话》中指出:“为什么人的问题，是一个根本的问题，原则的问题。<br>”这就是文艺工作的方向问题。文艺是为千百万工农兵服务，还是为一小撮剥削阶级服务?是为保卫无产阶级专政服务，<br>还是为一小撮反革命修正主义分子的复辟活动服务?这是毛主席的无产阶级革命文艺路线和反革命修正主义文艺黑线斗争的焦点。<br>文化界十七年来两条路线斗争的实践告诉我们:被反革命修正主义文艺黑线长期控制和影响的文化界，要解决的最根本的问题还是个方向的问题。<br>这个根本的方向问题解决了，其他的一切争论问题就可以迎刃而解了。」<br>    ——《毛主席〈在延安文艺座谈会上的讲话〉是无产阶级文化大军的建军纲领》红旗杂志1967年第8期如果这个问题不解决。    </p>
]]></content>
      <tags>
        <tag>人生成长</tag>
      </tags>
  </entry>
  <entry>
    <title>NGUI图片变灰通用</title>
    <url>/2022/02/10/%E6%88%91%E7%9A%84%E8%BD%A6%E8%BD%AE%E5%AD%90/NGUI%E5%9B%BE%E7%89%87%E5%8F%98%E7%81%B0%E9%80%9A%E7%94%A8/</url>
    <content><![CDATA[<p>新增一个 UI_CG.cginc文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">#ifndef UI_CG</span><br><span class="line">#define UI_CG</span><br><span class="line">inline half4 GreyUI(sampler2D _MainTex,sampler2D _AlphaTex,half2 texUV,half4 vColor)</span><br><span class="line">&#123;</span><br><span class="line">	half4 alphaColor = tex2D(_AlphaTex,texUV);</span><br><span class="line">	half4 mainColor = tex2D(_MainTex, texUV);</span><br><span class="line">	mainColor.a *= alphaColor.r;</span><br><span class="line"></span><br><span class="line">    float t1 = step(0.001,vColor.r - 0.49);</span><br><span class="line">    float t2 = step(0.001,0.51 - vColor.r);</span><br><span class="line">	half tmp = t1 * t2;</span><br><span class="line">    //half tmp = step(0.001,vColor.r - 0.49) * step(0.001,0.51 - vColor.r);</span><br><span class="line">	half grey = dot(mainColor.rgb, half3(0.299, 0.587, 0.114));</span><br><span class="line">	mainColor = tmp * half4(grey,grey,grey,mainColor.a) + (1 - tmp) * mainColor * vColor;</span><br><span class="line">	return mainColor;</span><br><span class="line">&#125;</span><br><span class="line">#endif</span><br></pre></td></tr></table></figure>

<p>修改图片的shader<br>Transparent Colored<br>修改textrue的shader<br>Unlit/Transparent Colored</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">half4 frag (v2f IN) : COLOR</span><br><span class="line">&#123;</span><br><span class="line">	return GreyUI(_MainTex,_AlphaTex,IN.texcoord,IN.color);</span><br><span class="line">	// return tex2D(_MainTex, IN.texcoord) * IN.color;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>造轮子</category>
      </categories>
      <tags>
        <tag>U3D</tag>
        <tag>轮子</tag>
      </tags>
  </entry>
  <entry>
    <title>U3D 基于NGUI写的 listView特效裁剪</title>
    <url>/2021/10/25/%E6%88%91%E7%9A%84%E8%BD%A6%E8%BD%AE%E5%AD%90/listView%E7%89%B9%E6%95%88%E8%A3%81%E5%89%AA/</url>
    <content><![CDATA[<p>修改UIDrawCall文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public void UpdateSubMaterials(UIFilterDCWidget uiFilter)</span><br><span class="line">&#123;</span><br><span class="line">    UIPanel currentPanel = panel;</span><br><span class="line"></span><br><span class="line">    if (currentPanel.hasClipping)</span><br><span class="line">    &#123;</span><br><span class="line">        float angle = 0f;</span><br><span class="line">        Vector4 cr = currentPanel.drawCallClipRange;</span><br><span class="line"></span><br><span class="line">        // Clipping regions past the first one need additional math</span><br><span class="line">        if (currentPanel != panel)</span><br><span class="line">        &#123;</span><br><span class="line">            Vector3 pos = currentPanel.cachedTransform.InverseTransformPoint(panel.cachedTransform.position);</span><br><span class="line">            cr.x -= pos.x;</span><br><span class="line">            cr.y -= pos.y;</span><br><span class="line"></span><br><span class="line">            Vector3 v0 = panel.cachedTransform.rotation.eulerAngles;</span><br><span class="line">            Vector3 v1 = currentPanel.cachedTransform.rotation.eulerAngles;</span><br><span class="line">            Vector3 diff = v1 - v0;</span><br><span class="line"></span><br><span class="line">            diff.x = NGUIMath.WrapAngle(diff.x);</span><br><span class="line">            diff.y = NGUIMath.WrapAngle(diff.y);</span><br><span class="line">            diff.z = NGUIMath.WrapAngle(diff.z);</span><br><span class="line"></span><br><span class="line">            if (Mathf.Abs(diff.x) &gt; 0.001f || Mathf.Abs(diff.y) &gt; 0.001f)</span><br><span class="line">                Debug.LogWarning(&quot;Panel can only be clipped properly if X and Y rotation is left at 0&quot;, panel);</span><br><span class="line"></span><br><span class="line">            angle = diff.z;</span><br><span class="line">        &#125;</span><br><span class="line">        var renderers = uiFilter.gameObject.GetComponentsInChildren&lt;Renderer&gt;();</span><br><span class="line">        for (int k = 0; k &lt; renderers.Length; k++)</span><br><span class="line">        &#123;</span><br><span class="line">            if (renderers[k].sharedMaterial != null)</span><br><span class="line">            &#123;</span><br><span class="line">                // Pass the clipping parameters to the shader</span><br><span class="line">                SetClipping(0, cr, currentPanel.clipSoftness, angle, renderers[k].sharedMaterial);</span><br><span class="line">                renderers[k].sharedMaterial.SetMatrix(property_UIWorldtoUIRoot, currentPanel.gameObject.transform.worldToLocalMatrix);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        var renderers = uiFilter.gameObject.GetComponentsInChildren&lt;Renderer&gt;();</span><br><span class="line">        for (int k = 0; k &lt; renderers.Length; k++)</span><br><span class="line">        &#123;</span><br><span class="line">            if (renderers[k].sharedMaterial != null)</span><br><span class="line">            &#123;</span><br><span class="line">                renderers[k].sharedMaterial.SetVector(ClipRange[0], new Vector4(0, 0, 0, 0));</span><br><span class="line">                renderers[k].sharedMaterial.SetVector(ClipArgs[0], new Vector4(1000, 1000, 0, 0));</span><br><span class="line">                renderers[k].sharedMaterial.SetMatrix(property_UIWorldtoUIRoot, currentPanel.gameObject.transform.worldToLocalMatrix);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Shader代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Shader &quot;GameUI/Particles/Transparent Particle Add 1&quot;</span><br><span class="line">&#123;</span><br><span class="line">	Properties</span><br><span class="line">	&#123;</span><br><span class="line">		_InitColor(&quot;InitColor&quot;, Color) = (1,1,1,1)</span><br><span class="line">		_MainTex (&quot;Base (RGB), Alpha (A)&quot;, 2D) = &quot;black&quot; &#123;&#125;</span><br><span class="line">		_AlphaTex (&quot;Alpha Texture&quot;,2D) = &quot;red&quot; &#123;&#125;</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	SubShader</span><br><span class="line">	&#123;</span><br><span class="line">		LOD 100</span><br><span class="line"></span><br><span class="line">		Tags</span><br><span class="line">		&#123;</span><br><span class="line">			&quot;Queue&quot; = &quot;Transparent&quot;</span><br><span class="line">			&quot;IgnoreProjector&quot; = &quot;True&quot;</span><br><span class="line">			&quot;RenderType&quot; = &quot;Transparent&quot;</span><br><span class="line">			&quot;RenderPipeline&quot; = &quot;UniversalPipeline&quot;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		Pass</span><br><span class="line">		&#123;</span><br><span class="line">			Cull Off</span><br><span class="line">			Lighting Off</span><br><span class="line">			ZWrite Off</span><br><span class="line">			Offset -1, -1</span><br><span class="line">			Fog &#123; Mode Off &#125;</span><br><span class="line">			ColorMask RGB</span><br><span class="line">			Blend One One</span><br><span class="line"></span><br><span class="line">			CGPROGRAM</span><br><span class="line">			#pragma vertex vert</span><br><span class="line">			#pragma fragment frag</span><br><span class="line">			#include &quot;UnityCG.cginc&quot;</span><br><span class="line"></span><br><span class="line">			sampler2D _MainTex;</span><br><span class="line">			float4 _MainTex_ST;</span><br><span class="line">			sampler2D _AlphaTex;</span><br><span class="line">			float4 _ClipRange0 = float4(0.0, 0.0, 1.0, 1.0);</span><br><span class="line">			float2 _ClipArgs0 = float2(1000.0, 1000.0);</span><br><span class="line">			half4 _InitColor;</span><br><span class="line"></span><br><span class="line">			float4x4 _UIWorldtoUIRoot;</span><br><span class="line"></span><br><span class="line">			struct appdata_t</span><br><span class="line">			&#123;</span><br><span class="line">				float4 vertex : POSITION;</span><br><span class="line">				half4 color : COLOR;</span><br><span class="line">				float2 texcoord : TEXCOORD0;</span><br><span class="line">			&#125;;</span><br><span class="line"></span><br><span class="line">			struct v2f</span><br><span class="line">			&#123;</span><br><span class="line">				float4 vertex : POSITION;</span><br><span class="line">				half4 color : COLOR;</span><br><span class="line">				float2 texcoord : TEXCOORD0;</span><br><span class="line">				float2 worldPos : TEXCOORD1;</span><br><span class="line">			&#125;;</span><br><span class="line"></span><br><span class="line">			v2f o;</span><br><span class="line"></span><br><span class="line">			v2f vert (appdata_t v)</span><br><span class="line">			&#123;</span><br><span class="line">				o.vertex = UnityObjectToClipPos(v.vertex);</span><br><span class="line">				float4 worldPos = mul(unity_ObjectToWorld, v.vertex);</span><br><span class="line">				worldPos = mul(_UIWorldtoUIRoot, worldPos);</span><br><span class="line">				o.color = v.color;</span><br><span class="line">				o.texcoord = TRANSFORM_TEX(v.texcoord, _MainTex);</span><br><span class="line">				o.worldPos = worldPos.xy * _ClipRange0.zw + _ClipRange0.xy;</span><br><span class="line">				return o;</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			half4 frag (v2f IN) : COLOR</span><br><span class="line">			&#123;</span><br><span class="line">				// Softness factor</span><br><span class="line">				float2 factor = (float2(1.0, 1.0) - abs(IN.worldPos)) * _ClipArgs0;</span><br><span class="line">				log2(factor);</span><br><span class="line">				// Sample the texture</span><br><span class="line">				//half4 col = GreyUI(_MainTex,_AlphaTex,IN.texcoord,IN.color);</span><br><span class="line">				half4 col = tex2D(_MainTex, IN.texcoord) * IN.color;</span><br><span class="line">				col.a = tex2D(_AlphaTex, IN.texcoord).r * IN.color.a;</span><br><span class="line">				col.a *= clamp( min(factor.x, factor.y), 0.0, 1.0);</span><br><span class="line">				col *= _InitColor;</span><br><span class="line">				col.rgb *= col.a;</span><br><span class="line"></span><br><span class="line">				return col;</span><br><span class="line">			&#125;</span><br><span class="line">			ENDCG</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>造轮子</category>
      </categories>
      <tags>
        <tag>U3D</tag>
        <tag>轮子</tag>
      </tags>
  </entry>
  <entry>
    <title>unity实现雷达图和描边</title>
    <url>/2022/02/17/%E6%88%91%E7%9A%84%E8%BD%A6%E8%BD%AE%E5%AD%90/unity%E5%AE%9E%E7%8E%B0%E9%9B%B7%E8%BE%BE%E5%9B%BE%E5%92%8C%E6%8F%8F%E8%BE%B9/</url>
    <content><![CDATA[<p>最近策划需要一个雷达战力图</p>
<p>RadarChart.cs  有兴趣的自己看下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">using System.Collections;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using UnityEngine;</span><br><span class="line"></span><br><span class="line">public class RadarChart : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line">    private MeshRenderer mMeshRenderer = null;</span><br><span class="line">    private MeshFilter mMeshFilter = null;</span><br><span class="line">    private Material mMat = null;</span><br><span class="line">    private Mesh mMesh;</span><br><span class="line"></span><br><span class="line">    public Color mainColor = new Color(0.4f, 0.6f, 1f);</span><br><span class="line">    public Color outLineColor = new Color(1f, 1f, 1f, 0.3f);</span><br><span class="line">    public Color addColor = Color.white;</span><br><span class="line">    public float alpha = 0.3f;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    // 参数</span><br><span class="line">    private int VERTICES_COUNT; //网格模型顶点数量</span><br><span class="line">    public Vector3[] vertices;</span><br><span class="line">    private Vector3[] vec3OutLineList;</span><br><span class="line">    //三角形数组</span><br><span class="line">    int[] triangles;</span><br><span class="line">    public float scale;</span><br><span class="line">    public float radius = 45f;</span><br><span class="line">    public float outLineSize = 1f;</span><br><span class="line">    public GameObject obj;</span><br><span class="line"></span><br><span class="line">    public MeshRenderer meshRenderer</span><br><span class="line">	&#123;</span><br><span class="line">		get</span><br><span class="line">		&#123;</span><br><span class="line">			if (mMeshRenderer == null)</span><br><span class="line">			&#123;</span><br><span class="line">				mMeshRenderer = GetComponent&lt;MeshRenderer&gt;();</span><br><span class="line">				if (mMeshRenderer == null)</span><br><span class="line">				&#123;</span><br><span class="line">					mMeshRenderer = gameObject.AddComponent&lt;MeshRenderer&gt;();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			return mMeshRenderer;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">    public MeshFilter meshFilter</span><br><span class="line">	&#123;</span><br><span class="line">		get</span><br><span class="line">		&#123;</span><br><span class="line">			if (mMeshFilter == null)</span><br><span class="line">			&#123;</span><br><span class="line">				mMeshFilter = GetComponent&lt;MeshFilter&gt;();</span><br><span class="line">				if (mMeshFilter == null)</span><br><span class="line">				&#123;</span><br><span class="line">					mMeshFilter = gameObject.AddComponent&lt;MeshFilter&gt;();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			return mMeshFilter;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">    public Material material</span><br><span class="line">	&#123;</span><br><span class="line">		get</span><br><span class="line">		&#123;</span><br><span class="line">            if (mMat == null)</span><br><span class="line">			&#123;</span><br><span class="line">				mMat = new Material(ShaderManager.instance.LoadShader(&quot;UI/ColorAdd&quot;, &quot;ColorAdd&quot;));</span><br><span class="line">                mMat.SetColor(&quot;_MainColor&quot;, mainColor);</span><br><span class="line">                mMat.SetColor(&quot;_AddColor&quot;, addColor);</span><br><span class="line">                mMat.SetFloat(&quot;_Alpha&quot;, alpha);</span><br><span class="line">			&#125;</span><br><span class="line">			return mMat;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">    public Mesh mesh</span><br><span class="line">	&#123;</span><br><span class="line">		get</span><br><span class="line">		&#123;</span><br><span class="line">			if (mMesh == null)</span><br><span class="line">			&#123;</span><br><span class="line">				mMesh = new Mesh();</span><br><span class="line">				mMesh.name = &quot;UIRadarChart&quot;;</span><br><span class="line">			&#125;</span><br><span class="line">			return mMesh;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">    void Start()</span><br><span class="line">    &#123;  </span><br><span class="line">        meshRenderer.material = material;</span><br><span class="line">        FillMeshRadarChart();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    void Update()</span><br><span class="line">	&#123;</span><br><span class="line">		//UpdateRadarChart();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">    float GetRadians(float angle)</span><br><span class="line">    &#123;</span><br><span class="line">        return Mathf.PI / 180 * angle;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    void FillMeshRadarChart()</span><br><span class="line">    &#123;</span><br><span class="line">        if (!Application.isPlaying)</span><br><span class="line">		&#123;</span><br><span class="line">			return;</span><br><span class="line">		&#125;</span><br><span class="line">        </span><br><span class="line">        VERTICES_COUNT = vertices.Length;</span><br><span class="line">        int triangles_count = VERTICES_COUNT - 1;</span><br><span class="line"></span><br><span class="line">        triangles = new int[triangles_count * 3];</span><br><span class="line"></span><br><span class="line">        //设定原点坐标</span><br><span class="line">        vertices[0] = new Vector3(0, 0, 1);</span><br><span class="line">        //首个在x轴上的坐标点</span><br><span class="line">        vertices[1] = new Vector3(radius, 0, 1);</span><br><span class="line"></span><br><span class="line">        //每个三角形角度</span><br><span class="line">        float everyAngle = 360 / triangles_count;</span><br><span class="line">        for (int i = 2; i &lt; vertices.Length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            var angle = GetRadians(everyAngle * (i - 1));</span><br><span class="line">            vertices[i] = new Vector3(radius * Mathf.Cos(angle), radius * Mathf.Sin(angle), 1);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        int idx = 0;</span><br><span class="line">        int value = 0;</span><br><span class="line">        for (int i = 0; i &lt; triangles.Length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            if (i % 3 == 0)</span><br><span class="line">            &#123;</span><br><span class="line">                triangles[i] = 0;</span><br><span class="line">                value = idx;</span><br><span class="line">                idx++;</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                value++;</span><br><span class="line">                if (value == VERTICES_COUNT)</span><br><span class="line">                    value = 1;</span><br><span class="line">                    </span><br><span class="line">                triangles[i] = value;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        UpdateRadarChart();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    void DrawOutLine()</span><br><span class="line">    &#123;</span><br><span class="line">        //obj.transform.localPosition = new Vector3(0, 0, -1);</span><br><span class="line">        MeshFilter mf = obj.GetComponent&lt;MeshFilter&gt;();</span><br><span class="line">        if (mf == null)</span><br><span class="line">        &#123;</span><br><span class="line">            mf = obj.AddComponent&lt;MeshFilter&gt;();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        MeshRenderer mr = obj.GetComponent&lt;MeshRenderer&gt;();</span><br><span class="line">        if (mr == null)</span><br><span class="line">        &#123;</span><br><span class="line">            mr = obj.AddComponent&lt;MeshRenderer&gt;();</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        Material mat = new Material(ShaderManager.instance.LoadShader(&quot;UI/ColorAdd&quot;, &quot;ColorAdd&quot;));</span><br><span class="line">        mat.SetColor(&quot;_MainColor&quot;, outLineColor);</span><br><span class="line">        mr.material = mat;</span><br><span class="line">        Mesh meshOut = new Mesh();</span><br><span class="line">        meshOut.vertices = vec3OutLineList;</span><br><span class="line">        meshOut.triangles = triangles;</span><br><span class="line">        mf.mesh = meshOut;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Vector2 GetPreVec(int index)</span><br><span class="line">    &#123;</span><br><span class="line">        int tmpIndex = (index - 1) &lt; 1 ? vertices.Length - 1 : (index - 1);</span><br><span class="line">        return new Vector2(vertices[tmpIndex].x, vertices[tmpIndex].y);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Vector2 GetCurVec(int index)</span><br><span class="line">    &#123;</span><br><span class="line">        return new Vector2(vertices[index].x, vertices[index].y);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Vector2 GetNextVec(int index)</span><br><span class="line">    &#123;</span><br><span class="line">        int tmpIndex = (index + 1) &gt;= vertices.Length ? 1 : index + 1;</span><br><span class="line">        return new Vector2(vertices[tmpIndex].x, vertices[tmpIndex].y);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Vector2 GetNormal(Vector2 dir)</span><br><span class="line">    &#123;</span><br><span class="line">        return new Vector2(dir.y, -dir.x);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Vector3 GetIntersect(Vector2 s1, Vector2 d1, Vector2 s2, Vector2 d2)</span><br><span class="line">    &#123;</span><br><span class="line">        Vector2 e1 = s1 + d1;</span><br><span class="line">        Vector2 e2 = s2 + d2;</span><br><span class="line"></span><br><span class="line">        float a1, a2, b1, b2, c1, c2;</span><br><span class="line"></span><br><span class="line">        a1 = e1.y - s1.y;</span><br><span class="line">        b1 = s1.x - e1.x;</span><br><span class="line">        c1 = (e1.x * s1.y) - (s1.x * e1.y);</span><br><span class="line"></span><br><span class="line">        a2 = e2.y - s2.y;</span><br><span class="line">        b2 = s2.x - e2.x;</span><br><span class="line">        c2 = (e2.x * s2.y) - (s2.x * e2.y);</span><br><span class="line"></span><br><span class="line">        float c = (a1 * b2 - a2 * b1);</span><br><span class="line"></span><br><span class="line">        float x = (b1 * c2 - b2 * c1) / c;</span><br><span class="line">        float y = (a2 * c1 - a1 * c2) / c;</span><br><span class="line"></span><br><span class="line">        return new Vector3(x, y, 0);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    void UpdateRadarChart()</span><br><span class="line">    &#123;</span><br><span class="line">        Vector3[] tmps = new Vector3[vertices.Length];</span><br><span class="line">        Vector3[] tmpo = new Vector3[vertices.Length];</span><br><span class="line">        </span><br><span class="line">        float lineWidth = outLineSize;</span><br><span class="line">        Vector2 cur, next, pre, da, db, na, nb;</span><br><span class="line">        for (int i = 0; i &lt; vertices.Length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            tmps[i] = vertices[i] * vertices[i].z * scale;</span><br><span class="line"></span><br><span class="line">            // 描边顶点</span><br><span class="line">            cur = GetCurVec(i);</span><br><span class="line">            next = GetNextVec(i);</span><br><span class="line">            pre = GetPreVec(i);</span><br><span class="line">            da = (cur - pre).normalized;</span><br><span class="line">            db = (cur - next).normalized;</span><br><span class="line">            na = GetNormal(da);</span><br><span class="line">            nb = GetNormal(-db);</span><br><span class="line">            tmpo[i] = this.GetIntersect(pre + (na * lineWidth), da, next + (nb * lineWidth), db);</span><br><span class="line">        &#125;</span><br><span class="line">        // 描边顶点</span><br><span class="line">        vec3OutLineList = tmpo;</span><br><span class="line">        DrawOutLine();</span><br><span class="line">        // 正常顶点</span><br><span class="line">        mesh.vertices = tmps;</span><br><span class="line">        mesh.triangles = triangles;</span><br><span class="line">        meshFilter.mesh = mesh;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>或者可以弄个纹理贴图</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">using System.Collections;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using UnityEngine;</span><br><span class="line">using System;</span><br><span class="line">#if UNITY_EDITOR</span><br><span class="line">using UnityEditor;</span><br><span class="line">#endif</span><br><span class="line"></span><br><span class="line">[ExecuteInEditMode]</span><br><span class="line">public class WuJiaoXingRender : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line">    public static Vector3 posC = new Vector3(0, 0, 0);        //中心</span><br><span class="line">    public static Vector3 pos1 = new Vector3(0, 1, 0);        //最上</span><br><span class="line">    public static Vector3 pos2 = new Vector3(1f, 0.236f, 0);  //右上</span><br><span class="line">    public static Vector3 pos3 = new Vector3(0.627f, -1f, 0);   //右下</span><br><span class="line">    public static Vector3 pos4 = new Vector3(-0.627f, -1f, 0);  //左下</span><br><span class="line">    public static Vector3 pos5 = new Vector3(-1f, 0.236f, 0); //左上</span><br><span class="line"></span><br><span class="line">    public static Vector2 uvC = new Vector2(0.5f, 0.5f);      //中心 </span><br><span class="line">    public static Vector2 uv1 = new Vector2(0.5f, 1f);        //最上</span><br><span class="line">    public static Vector2 uv2 = new Vector2(1f, 1 - 0.38f);       //右上</span><br><span class="line">    public static Vector2 uv3 = new Vector2(0.8f, 1 - 1);         //右下</span><br><span class="line">    public static Vector2 uv4 = new Vector2(0.2f, 1 - 1);         //左下</span><br><span class="line">    public static Vector2 uv5 = new Vector2(0f, 1 - 0.38f);       //左上</span><br><span class="line"></span><br><span class="line">    private bool isInit = false;</span><br><span class="line"></span><br><span class="line">    public Texture2D texture;                   //五角星贴图</span><br><span class="line">    [Range(0.1f,1)]</span><br><span class="line">    public float rate1 = 1f;</span><br><span class="line">    [Range(0.1f, 1)]</span><br><span class="line">    public float rate2 = 1f;</span><br><span class="line">    [Range(0.1f, 1)]</span><br><span class="line">    public float rate3 = 1f;</span><br><span class="line">    [Range(0.1f, 1)]</span><br><span class="line">    public float rate4 = 1f;</span><br><span class="line">    [Range(0.1f, 1)]</span><br><span class="line">    public float rate5 = 1f;</span><br><span class="line"></span><br><span class="line">    private MeshFilter meshFilter;</span><br><span class="line">    private MeshRenderer meshRender;</span><br><span class="line">    private Mesh mesh;</span><br><span class="line"></span><br><span class="line">    private Vector2[] uvs = new Vector2[15];</span><br><span class="line">    private Vector3[] verts = new Vector3[15];</span><br><span class="line">    private int[] indexes = new int[15];</span><br><span class="line">    private Color[] colors = new Color[15];</span><br><span class="line"></span><br><span class="line">    private Vector2[] initUvs = new Vector2[15];</span><br><span class="line">    private Vector3[] initVerts = new Vector3[15];</span><br><span class="line"></span><br><span class="line">    // Use this for initialization</span><br><span class="line">    void Start()</span><br><span class="line">    &#123;</span><br><span class="line">        if (isInit)</span><br><span class="line">            return;</span><br><span class="line">        if (meshFilter == null)</span><br><span class="line">            meshFilter = this.gameObject.AddComponent&lt;MeshFilter&gt;();</span><br><span class="line">        if (mesh == null)</span><br><span class="line">        &#123;</span><br><span class="line">            CreateMesh();</span><br><span class="line">            meshFilter.sharedMesh = mesh;</span><br><span class="line">        &#125;</span><br><span class="line">        meshRender = this.gameObject.AddComponent&lt;MeshRenderer&gt;();</span><br><span class="line">        meshRender.sharedMaterial = new Material(Shader.Find(&quot;Unlit/WuJiaoXingRender&quot;));</span><br><span class="line">        meshRender.sharedMaterial.SetTexture(&quot;_MainTex&quot;, texture);</span><br><span class="line">        isInit = true;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#if UNITY_EDITOR</span><br><span class="line">    [ContextMenu(&quot;CreateEditor&quot;)]</span><br><span class="line">    private void CreateEditor()</span><br><span class="line">    &#123;</span><br><span class="line">        Start();</span><br><span class="line">    &#125;</span><br><span class="line">#endif</span><br><span class="line"></span><br><span class="line">    private void CreateMesh()</span><br><span class="line">    &#123;</span><br><span class="line">        verts[0] = pos1;</span><br><span class="line">        verts[1] = pos2;</span><br><span class="line">        verts[2] = posC;</span><br><span class="line"></span><br><span class="line">        verts[3] = pos2;</span><br><span class="line">        verts[4] = pos3;</span><br><span class="line">        verts[5] = posC;</span><br><span class="line"></span><br><span class="line">        verts[6] = pos3;</span><br><span class="line">        verts[7] = pos4;</span><br><span class="line">        verts[8] = posC;</span><br><span class="line"></span><br><span class="line">        verts[9] = pos4;</span><br><span class="line">        verts[10] = pos5;</span><br><span class="line">        verts[11] = posC;</span><br><span class="line"></span><br><span class="line">        verts[12] = pos5;</span><br><span class="line">        verts[13] = pos1;</span><br><span class="line">        verts[14] = posC;</span><br><span class="line"></span><br><span class="line">        uvs[0] = uv1;</span><br><span class="line">        uvs[1] = uv2;</span><br><span class="line">        uvs[2] = uvC;</span><br><span class="line"></span><br><span class="line">        uvs[3] = uv2;</span><br><span class="line">        uvs[4] = uv3;</span><br><span class="line">        uvs[5] = uvC;</span><br><span class="line"></span><br><span class="line">        uvs[6] = uv3;</span><br><span class="line">        uvs[7] = uv4;</span><br><span class="line">        uvs[8] = uvC;</span><br><span class="line"></span><br><span class="line">        uvs[9] = uv4;</span><br><span class="line">        uvs[10] = uv5;</span><br><span class="line">        uvs[11] = uvC;</span><br><span class="line"></span><br><span class="line">        uvs[12] = uv5;</span><br><span class="line">        uvs[13] = uv1;</span><br><span class="line">        uvs[14] = uvC;</span><br><span class="line"></span><br><span class="line">        for (int i = 0; i &lt; 15; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            initUvs[i] = uvs[i];</span><br><span class="line">            initVerts[i] = verts[i];</span><br><span class="line">            colors[i] = Color.red;</span><br><span class="line">            indexes[i] = i;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        mesh = new Mesh();</span><br><span class="line">        mesh.name = &quot;WuJiaoXingRender&quot;;</span><br><span class="line">        mesh.vertices = verts;</span><br><span class="line">        mesh.colors = colors;</span><br><span class="line">        mesh.uv = uvs;</span><br><span class="line">        mesh.SetTriangles(indexes, 0);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Update is called once per frame</span><br><span class="line">    void Update()</span><br><span class="line">    &#123;</span><br><span class="line">        if (!isInit)</span><br><span class="line">            return;</span><br><span class="line"></span><br><span class="line">        updateRate(0, rate1);</span><br><span class="line">        updateRate(1, rate2);</span><br><span class="line">        updateRate(2, rate3);</span><br><span class="line">        updateRate(3, rate4);</span><br><span class="line">        updateRate(4, rate5);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void updateRate(int index, float rate)</span><br><span class="line">    &#123;</span><br><span class="line">        int outIndex1 = index * 3;</span><br><span class="line">        int outIndex2 = index * 3 - 2;</span><br><span class="line">        if (outIndex2 &lt; 0)</span><br><span class="line">        &#123;</span><br><span class="line">            outIndex2 += 15;</span><br><span class="line">        &#125;</span><br><span class="line">        Vector3 pos = initVerts[outIndex1];</span><br><span class="line">        pos *= rate;</span><br><span class="line">        verts[outIndex1] = pos;</span><br><span class="line">        pos = initVerts[outIndex2];</span><br><span class="line">        pos *= rate;</span><br><span class="line">        verts[outIndex2] = pos;</span><br><span class="line">        mesh.vertices = verts;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>可以参考下 我写了个粗糙版</p>
]]></content>
      <tags>
        <tag>U3D</tag>
        <tag>ngui</tag>
      </tags>
  </entry>
  <entry>
    <title>unity新手指引和ngui点击问题</title>
    <url>/2021/12/13/%E6%88%91%E7%9A%84%E8%BD%A6%E8%BD%AE%E5%AD%90/unity%E6%96%B0%E6%89%8B%E6%8C%87%E5%BC%95%E5%92%8Cngui%E7%82%B9%E5%87%BB%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<p>最近项目需要写新手指引,不行随便写个耦合很高的。<br>但是我们用的ngui 没有点击穿透这一说，这就很尴尬了。但是作为一个面向搜索引擎的程序员这有啥怕；<br>网上我看到了一个方案 把屏幕用4个矩形分开只剩下中间的能点击的部分没有矩形 其他地方加上box。 但是我觉很不友好，突然面向搜索引擎 又发力了<br>第二个方案用的meshCollider（网格碰撞器） 顺便还有大神写了个轮子 下面我们展示代码</p>
<p>UIMaskWidget.cs  有兴趣的自己看下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">using UnityEngine;</span><br><span class="line">using System.Collections;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line"></span><br><span class="line">public class UIMaskWidget : UIWidget</span><br><span class="line">&#123;</span><br><span class="line">	[SerializeField, HideInInspector] Texture mTexture;</span><br><span class="line">	[SerializeField, HideInInspector] Shader mShader;</span><br><span class="line">	[SerializeField, HideInInspector] bool mSliced;</span><br><span class="line">	[SerializeField, HideInInspector] Vector4 mBorder;</span><br><span class="line"></span><br><span class="line">	private MeshCollider mMeshCollider = null;</span><br><span class="line">	private Mesh mColliderMesh;</span><br><span class="line">	private Vector3[] mColliderMeshVertices = new Vector3[8];</span><br><span class="line">	private int[] mColliderMeshTriangles = new int[24];</span><br><span class="line">	private Texture mSpareTexture;</span><br><span class="line">    //private Material mMat = null;</span><br><span class="line">	public override Texture mainTexture</span><br><span class="line">	&#123;</span><br><span class="line">		get</span><br><span class="line">		&#123;</span><br><span class="line">			if (mMat != null)</span><br><span class="line">			&#123;</span><br><span class="line">				return mMat.mainTexture;</span><br><span class="line">			&#125;</span><br><span class="line">			if (mTexture == null)</span><br><span class="line">			&#123;</span><br><span class="line">				return spareTexture;</span><br><span class="line">			&#125;</span><br><span class="line">			return mTexture;</span><br><span class="line">		&#125;</span><br><span class="line">		set</span><br><span class="line">		&#123;</span><br><span class="line">			if (mTexture != value)</span><br><span class="line">			&#123;</span><br><span class="line">				if (drawCall != null &amp;&amp; drawCall.widgetCount == 1 &amp;&amp; mMat == null)</span><br><span class="line">				&#123;</span><br><span class="line">					mTexture = value;</span><br><span class="line">					drawCall.mainTexture = value;</span><br><span class="line">				&#125;</span><br><span class="line">				else</span><br><span class="line">				&#123;</span><br><span class="line">					RemoveFromPanel();</span><br><span class="line">					mTexture = value;</span><br><span class="line">					MarkAsChanged();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	public override Material material</span><br><span class="line">	&#123;</span><br><span class="line">		get</span><br><span class="line">		&#123;</span><br><span class="line">			return mMat;</span><br><span class="line">		&#125;</span><br><span class="line">		set</span><br><span class="line">		&#123;</span><br><span class="line"></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	public override Shader shader</span><br><span class="line">	&#123;</span><br><span class="line">		get</span><br><span class="line">		&#123;</span><br><span class="line">			if (mMat != null) return mMat.shader;</span><br><span class="line">			if (mShader == null) mShader = Shader.Find(&quot;Unlit/Transparent Colored&quot;);</span><br><span class="line">			return mShader;</span><br><span class="line">		&#125;</span><br><span class="line">		set</span><br><span class="line">		&#123;</span><br><span class="line"></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	public override Vector4 border</span><br><span class="line">	&#123;</span><br><span class="line">		get</span><br><span class="line">		&#123;</span><br><span class="line">			return mBorder;</span><br><span class="line">		&#125;</span><br><span class="line">		set</span><br><span class="line">		&#123;</span><br><span class="line">			if (mBorder != value)</span><br><span class="line">			&#123;</span><br><span class="line">				mBorder = value;</span><br><span class="line">				MarkAsChanged();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	public MeshCollider meshCollider</span><br><span class="line">	&#123;</span><br><span class="line">		get</span><br><span class="line">		&#123;</span><br><span class="line">			if (mMeshCollider == null)</span><br><span class="line">			&#123;</span><br><span class="line">				mMeshCollider = GetComponent&lt;MeshCollider&gt;();</span><br><span class="line">				if (mMeshCollider == null)</span><br><span class="line">				&#123;</span><br><span class="line">					mMeshCollider = gameObject.AddComponent&lt;MeshCollider&gt;();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			return mMeshCollider;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	public Mesh colliderMesh</span><br><span class="line">	&#123;</span><br><span class="line">		get</span><br><span class="line">		&#123;</span><br><span class="line">			if (mColliderMesh == null)</span><br><span class="line">			&#123;</span><br><span class="line">				mColliderMesh = new Mesh();</span><br><span class="line">				mColliderMesh.name = &quot;UIMaskWidget&quot;;</span><br><span class="line">				mColliderMesh.vertices = mColliderMeshVertices;</span><br><span class="line"></span><br><span class="line">				for (int i = 0; i &lt; 4; i++)</span><br><span class="line">				&#123;</span><br><span class="line">					int index = i * 6;</span><br><span class="line"></span><br><span class="line">					mColliderMeshTriangles[index] = i;</span><br><span class="line">					mColliderMeshTriangles[index + 2] = (i + 5) &gt; 7 ? i + 1 : i + 5;</span><br><span class="line">					mColliderMeshTriangles[index + 1] = i + 4;</span><br><span class="line"></span><br><span class="line">					mColliderMeshTriangles[index + 3] = i;</span><br><span class="line">					mColliderMeshTriangles[index + 5] = (i + 1) &gt; 3 ? i - 3 : i + 1;</span><br><span class="line">					mColliderMeshTriangles[index + 4] = (i + 5) &gt; 7 ? i + 1 : i + 5;</span><br><span class="line">				&#125;</span><br><span class="line">				mColliderMesh.triangles = mColliderMeshTriangles;</span><br><span class="line">			&#125;</span><br><span class="line">			return mColliderMesh;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	public bool isTextureNull</span><br><span class="line">	&#123;</span><br><span class="line">		get</span><br><span class="line">		&#123;</span><br><span class="line">			return mTexture == null;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	public bool isSliced</span><br><span class="line">	&#123;</span><br><span class="line">		get</span><br><span class="line">		&#123;</span><br><span class="line">			return mSliced;</span><br><span class="line">		&#125;</span><br><span class="line">		set</span><br><span class="line">		&#123;</span><br><span class="line">			if (mSliced != value)</span><br><span class="line">			&#123;</span><br><span class="line">				mSliced = value;</span><br><span class="line">				MarkAsChanged();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	private Texture spareTexture</span><br><span class="line">	&#123;</span><br><span class="line">		get</span><br><span class="line">		&#123;</span><br><span class="line">			if (mSpareTexture == null)</span><br><span class="line">			&#123;</span><br><span class="line">				Texture2D tex = new Texture2D(1, 1);</span><br><span class="line">				tex.name = &quot;UIMaskWidget&quot;;</span><br><span class="line">				tex.SetPixel(0, 0, Color.white);</span><br><span class="line">				tex.Apply();</span><br><span class="line">				mSpareTexture = tex;</span><br><span class="line">			&#125;</span><br><span class="line">			return mSpareTexture;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	protected override void OnUpdate()</span><br><span class="line">	&#123;</span><br><span class="line">		base.OnUpdate();</span><br><span class="line">		MarkAsChanged();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	public override void OnFill(List&lt;Vector3&gt; verts, List&lt;Vector2&gt; uvs, List&lt;Color&gt; cols)</span><br><span class="line">	&#123;</span><br><span class="line">		if (mainTexture == null)</span><br><span class="line">		&#123;</span><br><span class="line">			return;</span><br><span class="line">		&#125;</span><br><span class="line">		Fill(verts, uvs, cols);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">    void Fill(List&lt;Vector3&gt; verts, List&lt;Vector2&gt; uvs, List&lt;Color&gt; cols)</span><br><span class="line">	&#123;</span><br><span class="line">        if (root == null)</span><br><span class="line">            return;</span><br><span class="line"></span><br><span class="line">		verts.Clear();</span><br><span class="line">		Vector3 innerLB = new Vector3(width * -pivotOffset.x, height * -pivotOffset.y, 0);</span><br><span class="line">		Vector3 innerRT = new Vector3(width * (1 - pivotOffset.x), height * (1 - pivotOffset.y), 0);</span><br><span class="line">		Vector3 windowHalfSize = new Vector3(NGUITools.screenSize.x, NGUITools.screenSize.y, 0) * 0.5f;</span><br><span class="line">        //Vector3 windowHalfSize = new Vector3(1280, 720, 0) * 0.5f;</span><br><span class="line">		Vector3 outerLB = transform.InverseTransformPoint(root.transform.TransformPoint(-windowHalfSize));</span><br><span class="line">		Vector3 outerRT = transform.InverseTransformPoint(root.transform.TransformPoint(windowHalfSize));</span><br><span class="line">		float[] vxs = new float[4] &#123; outerLB.x, innerLB.x, innerRT.x, outerRT.x &#125;;</span><br><span class="line">		float[] vys = new float[4] &#123; outerLB.y, innerLB.y, innerRT.y, outerRT.y &#125;;</span><br><span class="line">		// Rectangle LB</span><br><span class="line">		verts.Add(new Vector3(vxs[0], vys[0], 0));</span><br><span class="line">		verts.Add(new Vector3(vxs[0], vys[1], 0));</span><br><span class="line">		verts.Add(new Vector3(vxs[1], vys[1], 0));</span><br><span class="line">		verts.Add(new Vector3(vxs[1], vys[0], 0));</span><br><span class="line">		// Rectangle CB</span><br><span class="line">		verts.Add(new Vector3(vxs[1], vys[0], 0));</span><br><span class="line">		verts.Add(new Vector3(vxs[1], vys[1], 0));</span><br><span class="line">		verts.Add(new Vector3(vxs[2], vys[1], 0));</span><br><span class="line">		verts.Add(new Vector3(vxs[2], vys[0], 0));</span><br><span class="line">		// Rectangle RB</span><br><span class="line">		verts.Add(new Vector3(vxs[2], vys[0], 0));</span><br><span class="line">		verts.Add(new Vector3(vxs[2], vys[1], 0));</span><br><span class="line">		verts.Add(new Vector3(vxs[3], vys[1], 0));</span><br><span class="line">		verts.Add(new Vector3(vxs[3], vys[0], 0));</span><br><span class="line">		// Rectangle LC</span><br><span class="line">		verts.Add(new Vector3(vxs[0], vys[1], 0));</span><br><span class="line">		verts.Add(new Vector3(vxs[0], vys[2], 0));</span><br><span class="line">		verts.Add(new Vector3(vxs[1], vys[2], 0));</span><br><span class="line">		verts.Add(new Vector3(vxs[1], vys[1], 0));</span><br><span class="line">		// Rectangle RC</span><br><span class="line">		verts.Add(new Vector3(vxs[2], vys[1], 0));</span><br><span class="line">		verts.Add(new Vector3(vxs[2], vys[2], 0));</span><br><span class="line">		verts.Add(new Vector3(vxs[3], vys[2], 0));</span><br><span class="line">		verts.Add(new Vector3(vxs[3], vys[1], 0));</span><br><span class="line">		// Rectangle LT</span><br><span class="line">		verts.Add(new Vector3(vxs[0], vys[2], 0));</span><br><span class="line">		verts.Add(new Vector3(vxs[0], vys[3], 0));</span><br><span class="line">		verts.Add(new Vector3(vxs[1], vys[3], 0));</span><br><span class="line">		verts.Add(new Vector3(vxs[1], vys[2], 0));</span><br><span class="line">		// Rectangle CT</span><br><span class="line">		verts.Add(new Vector3(vxs[1], vys[2], 0));</span><br><span class="line">		verts.Add(new Vector3(vxs[1], vys[3], 0));</span><br><span class="line">		verts.Add(new Vector3(vxs[2], vys[3], 0));</span><br><span class="line">		verts.Add(new Vector3(vxs[2], vys[2], 0));</span><br><span class="line">		// Rectangle RT</span><br><span class="line">		verts.Add(new Vector3(vxs[2], vys[2], 0));</span><br><span class="line">		verts.Add(new Vector3(vxs[2], vys[3], 0));</span><br><span class="line">		verts.Add(new Vector3(vxs[3], vys[3], 0));</span><br><span class="line">		verts.Add(new Vector3(vxs[3], vys[2], 0));</span><br><span class="line"></span><br><span class="line">		uvs.Clear();</span><br><span class="line">		float[] uxs, uys;</span><br><span class="line">		if (isSliced)</span><br><span class="line">		&#123;</span><br><span class="line">			Vector2 texSizeR = new Vector2(1f / mainTexture.width, 1f / mainTexture.height);</span><br><span class="line">			uxs = new float[4] &#123; 0, border.x * texSizeR.x, 1 - border.z * texSizeR.x, 1 &#125;;</span><br><span class="line">			uys = new float[4] &#123; 0, border.y * texSizeR.y, 1 - border.w * texSizeR.y, 1 &#125;;</span><br><span class="line">		&#125;</span><br><span class="line">		else</span><br><span class="line">		&#123;</span><br><span class="line">			Vector2 screenSizeR = new Vector2(1f / (vxs[3] - vxs[0]), 1f / (vys[3] - vys[0]));</span><br><span class="line">			uxs = new float[4] &#123; 0, (vxs[1] - vxs[0]) * screenSizeR.x, (vxs[2] - vxs[0]) * screenSizeR.x, 1 &#125;;</span><br><span class="line">			uys = new float[4] &#123; 0, (vys[1] - vys[0]) * screenSizeR.y, (vys[2] - vys[0]) * screenSizeR.y, 1 &#125;;</span><br><span class="line">		&#125;</span><br><span class="line">		// Rectangle LB</span><br><span class="line">		uvs.Add(new Vector3(uxs[0], uys[0], 0));</span><br><span class="line">		uvs.Add(new Vector3(uxs[0], uys[1], 0));</span><br><span class="line">		uvs.Add(new Vector3(uxs[1], uys[1], 0));</span><br><span class="line">		uvs.Add(new Vector3(uxs[1], uys[0], 0));</span><br><span class="line">		// Rectangle CB</span><br><span class="line">		uvs.Add(new Vector3(uxs[1], uys[0], 0));</span><br><span class="line">		uvs.Add(new Vector3(uxs[1], uys[1], 0));</span><br><span class="line">		uvs.Add(new Vector3(uxs[2], uys[1], 0));</span><br><span class="line">		uvs.Add(new Vector3(uxs[2], uys[0], 0));</span><br><span class="line">		// Rectangle RB</span><br><span class="line">		uvs.Add(new Vector3(uxs[2], uys[0], 0));</span><br><span class="line">		uvs.Add(new Vector3(uxs[2], uys[1], 0));</span><br><span class="line">		uvs.Add(new Vector3(uxs[3], uys[1], 0));</span><br><span class="line">		uvs.Add(new Vector3(uxs[3], uys[0], 0));</span><br><span class="line">		// Rectangle LC</span><br><span class="line">		uvs.Add(new Vector3(uxs[0], uys[1], 0));</span><br><span class="line">		uvs.Add(new Vector3(uxs[0], uys[2], 0));</span><br><span class="line">		uvs.Add(new Vector3(uxs[1], uys[2], 0));</span><br><span class="line">		uvs.Add(new Vector3(uxs[1], uys[1], 0));</span><br><span class="line">		// Rectangle RC</span><br><span class="line">		uvs.Add(new Vector3(uxs[2], uys[1], 0));</span><br><span class="line">		uvs.Add(new Vector3(uxs[2], uys[2], 0));</span><br><span class="line">		uvs.Add(new Vector3(uxs[3], uys[2], 0));</span><br><span class="line">		uvs.Add(new Vector3(uxs[3], uys[1], 0));</span><br><span class="line">		// Rectangle LT</span><br><span class="line">		uvs.Add(new Vector3(uxs[0], uys[2], 0));</span><br><span class="line">		uvs.Add(new Vector3(uxs[0], uys[3], 0));</span><br><span class="line">		uvs.Add(new Vector3(uxs[1], uys[3], 0));</span><br><span class="line">		uvs.Add(new Vector3(uxs[1], uys[2], 0));</span><br><span class="line">		// Rectangle CT</span><br><span class="line">		uvs.Add(new Vector3(uxs[1], uys[2], 0));</span><br><span class="line">		uvs.Add(new Vector3(uxs[1], uys[3], 0));</span><br><span class="line">		uvs.Add(new Vector3(uxs[2], uys[3], 0));</span><br><span class="line">		uvs.Add(new Vector3(uxs[2], uys[2], 0));</span><br><span class="line">		// Rectangle RT</span><br><span class="line">		uvs.Add(new Vector3(uxs[2], uys[2], 0));</span><br><span class="line">		uvs.Add(new Vector3(uxs[2], uys[3], 0));</span><br><span class="line">		uvs.Add(new Vector3(uxs[3], uys[3], 0));</span><br><span class="line">		uvs.Add(new Vector3(uxs[3], uys[2], 0));</span><br><span class="line"></span><br><span class="line">		cols.Clear();</span><br><span class="line">		for (int i = 0; i &lt; 32; i++)</span><br><span class="line">		&#123;</span><br><span class="line">			cols.Add(color);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		FillMeshCollider(vxs, vys);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	void FillMeshCollider(float[] vxs, float[] vys)</span><br><span class="line">	&#123;</span><br><span class="line">		if (!Application.isPlaying)</span><br><span class="line">		&#123;</span><br><span class="line">			return;</span><br><span class="line">		&#125;</span><br><span class="line">		mColliderMeshVertices[0] = new Vector3(vxs[0], vys[0], 0);</span><br><span class="line">		mColliderMeshVertices[1] = new Vector3(vxs[3], vys[0], 0);</span><br><span class="line">		mColliderMeshVertices[2] = new Vector3(vxs[3], vys[3], 0);</span><br><span class="line">		mColliderMeshVertices[3] = new Vector3(vxs[0], vys[3], 0);</span><br><span class="line"></span><br><span class="line">		mColliderMeshVertices[4] = new Vector3(vxs[1], vys[1], 0);</span><br><span class="line">		mColliderMeshVertices[5] = new Vector3(vxs[2], vys[1], 0);</span><br><span class="line">		mColliderMeshVertices[6] = new Vector3(vxs[2], vys[2], 0);</span><br><span class="line">		mColliderMeshVertices[7] = new Vector3(vxs[1], vys[2], 0);</span><br><span class="line"></span><br><span class="line">		colliderMesh.vertices = mColliderMeshVertices;</span><br><span class="line">		meshCollider.sharedMesh = mColliderMesh;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>继续显示我们的自己的逻辑<br>由于我想写个基本由策划自己配置就行的指引不需要程序自己操心的！！！ 哈哈哈<br>就想到了给按钮BOX加委托  下面是我们自己的逻辑</p>
<p>GuideData.lua</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 新手指引</span></span><br><span class="line"><span class="built_in">module</span> (<span class="string">&#x27;m__&#x27;</span> .. ..., <span class="built_in">package</span>.<span class="built_in">seeall</span>)</span><br><span class="line"><span class="keyword">local</span> GuideData = newClass(<span class="string">&quot;GuideData&quot;</span>, BaseData)</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GuideData:Init</span><span class="params">()</span></span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">self</span>:ConstructMember()</span><br><span class="line">    <span class="built_in">self</span>:InitMember()</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GuideData:Clear</span><span class="params">()</span></span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GuideData:ConstructMember</span><span class="params">()</span></span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">self</span>.m_stepCfg = &#123;&#125;             <span class="comment">-- 按照大阶段的数据</span></span><br><span class="line">    <span class="built_in">self</span>.m_stepIndex = <span class="number">0</span>            <span class="comment">-- 主步骤</span></span><br><span class="line">    <span class="built_in">self</span>.m_subIndex = <span class="number">1</span>             <span class="comment">-- 子步骤</span></span><br><span class="line">    <span class="built_in">self</span>.m_stepStartIndex = &#123;&#125;      <span class="comment">-- 开始的第一步保存</span></span><br><span class="line">    <span class="built_in">self</span>.m_subEndIndex = &#123;&#125;         <span class="comment">-- 结束的第一步保存</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GuideData:InitMember</span><span class="params">()</span></span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">self</span>.m_timer <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">self</span>.m_timer = CountTimer.New()</span><br><span class="line">        <span class="built_in">self</span>.m_timer:AddEventListener(CountTimer.EVENT_TIMER, <span class="built_in">self</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span></span> <span class="built_in">self</span>:TimerCheckJudge() <span class="keyword">end</span>)</span><br><span class="line">    <span class="keyword">end</span>    </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 服务器记录值同步</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GuideData:InitData</span><span class="params">()</span></span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> LuaGameVars.CanPlayGuide <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">local</span> temp = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> i, v <span class="keyword">in</span> <span class="built_in">ipairs</span>(DBData.guidBaseCfg) <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">self</span>.m_stepCfg[v.main_step] = <span class="built_in">self</span>.m_stepCfg[v.main_step] <span class="keyword">or</span> &#123;&#125;</span><br><span class="line">        <span class="built_in">self</span>.m_stepCfg[v.main_step][v.index] = v</span><br><span class="line"></span><br><span class="line">        temp[v.main_step] = temp[v.main_step] <span class="keyword">or</span> &#123;&#125;</span><br><span class="line">        <span class="built_in">table</span>.<span class="built_in">insert</span>(temp[v.main_step],v)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">-- 大步骤的开始第一步</span></span><br><span class="line">    <span class="keyword">for</span> main_step = <span class="number">1</span>, <span class="number">1000</span> <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">local</span> cfg = temp[main_step]</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> cfg <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="built_in">table</span>.<span class="built_in">sort</span>(cfg,<span class="function"><span class="keyword">function</span><span class="params">(a,b)</span></span> <span class="keyword">return</span> a.index &lt; b.index <span class="keyword">end</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">local</span> startInfo,endInfo = cfg[<span class="number">1</span>],cfg[#cfg]</span><br><span class="line">        <span class="built_in">self</span>.m_stepStartIndex[main_step] = startInfo.index</span><br><span class="line">        <span class="built_in">self</span>.m_subEndIndex[main_step] = endInfo.index</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">-- 同步数据</span></span><br><span class="line">    <span class="keyword">local</span> guide_index = GameData.playerData:GetValue(role_ids.guide_index)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">self</span>.m_stepIndex = (guide_index == <span class="number">0</span>) <span class="keyword">and</span> <span class="number">1</span> <span class="keyword">or</span> guide_index</span><br><span class="line">    <span class="built_in">self</span>.m_subIndex = <span class="built_in">self</span>.m_stepStartIndex[<span class="built_in">self</span>.m_stepIndex]</span><br><span class="line">    <span class="comment">--self.m_subIndex = 0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">--开始timer</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">self</span>.m_timer <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">self</span>.m_timer:start(<span class="number">-1</span>, <span class="number">0.2</span>)</span><br><span class="line">    <span class="keyword">end</span>    </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 获取当前阶段的配置</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GuideData:GetCurStepCfg</span><span class="params">()</span></span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">self</span>.m_stepCfg[<span class="built_in">self</span>.m_stepIndex] <span class="keyword">or</span> <span class="keyword">not</span> <span class="built_in">self</span>.m_stepCfg[<span class="built_in">self</span>.m_stepIndex][<span class="built_in">self</span>.m_subIndex] <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">self</span>.m_stepCfg[<span class="built_in">self</span>.m_stepIndex][<span class="built_in">self</span>.m_subIndex]</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 间隔检测</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GuideData:TimerCheckJudge</span><span class="params">()</span></span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> MainView.ins:CheckUIIsShow(ModuleName.GuideModuleUI) <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">self</span>:CheckJudge() <span class="keyword">then</span></span><br><span class="line">        UIHelps.CloseWindow(ModuleName.GuideModuleUI)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    UIHelps.OpenWindow(ModuleName.GuideModuleUI)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 增加步骤值</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GuideData:AddStepIndex</span><span class="params">()</span></span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">local</span> curCfg = <span class="built_in">self</span>:GetCurStepCfg()</span><br><span class="line">    <span class="keyword">if</span> curCfg.end_step <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">self</span>.m_stepIndex = <span class="built_in">self</span>.m_stepIndex + <span class="number">1</span>   </span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="built_in">self</span>.m_subIndex = curCfg.next_index</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">self</span>.m_stepIndex &gt; <span class="built_in">table</span>.nums(<span class="built_in">self</span>.m_stepCfg) <span class="keyword">then</span></span><br><span class="line">        <span class="comment">-- 暂停计时器</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">self</span>.m_timer <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">self</span>.m_timer:stop()</span><br><span class="line">            <span class="built_in">self</span>.m_timer:dispose()</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="built_in">self</span>.m_timer = <span class="literal">nil</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">-- 发给服务器记录</span></span><br><span class="line">    <span class="keyword">local</span> info = &#123;guide_index = <span class="built_in">self</span>.m_stepIndex&#125;</span><br><span class="line">    LuaAppFacade.getIns():SendNotification(NoticeConst.ROLE_SAVE_GUIDE_INDEX,info)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 检查条件</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GuideData:CheckJudge</span><span class="params">()</span></span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">self</span>.m_stepCfg[<span class="built_in">self</span>.m_stepIndex] <span class="keyword">or</span> <span class="keyword">not</span> <span class="built_in">self</span>.m_stepCfg[<span class="built_in">self</span>.m_stepIndex][<span class="built_in">self</span>.m_subIndex] <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">local</span> cfg = <span class="built_in">self</span>.m_stepCfg[<span class="built_in">self</span>.m_stepIndex][<span class="built_in">self</span>.m_subIndex]</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> cfg <span class="keyword">or</span> cfg.main_step ~= <span class="built_in">self</span>.m_stepIndex <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">-- 检测初始位置是主界面 还是挂机的指引</span></span><br><span class="line">    <span class="keyword">if</span> cfg.index == <span class="built_in">self</span>.m_stepStartIndex[cfg.main_step] <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">local</span> nextInfo = DBData.guidBaseCfg[cfg.next_index]</span><br><span class="line">        <span class="keyword">if</span> nextInfo.ModuleName == <span class="string">&quot;BattleHomeModuleUI&quot;</span> <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">if</span> MainView.ins:CheckUIIsShow(nextInfo.ModuleName) <span class="keyword">then</span></span><br><span class="line">                <span class="built_in">self</span>:AddStepIndex()</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            <span class="keyword">end</span>    </span><br><span class="line">        <span class="keyword">end</span>    </span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="comment">-- 检查UI是否打开 要放在后面</span></span><br><span class="line">    <span class="keyword">local</span> ModuleName = cfg.ModuleName</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> MainView.ins:CheckUIIsShow(ModuleName) <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">-- 指引检查</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">self</span>.m_stepIndex == <span class="number">1</span> <span class="keyword">then</span></span><br><span class="line">        <span class="comment">-- 剧情体验战斗</span></span><br><span class="line">    <span class="keyword">elseif</span> <span class="built_in">self</span>.m_stepIndex == <span class="number">2</span> <span class="keyword">then</span></span><br><span class="line">        <span class="comment">-- 主线战斗1</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">self</span>:CheckBaseJudge1(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">elseif</span> <span class="built_in">self</span>.m_stepIndex == <span class="number">3</span> <span class="keyword">then</span></span><br><span class="line">        <span class="comment">-- 卡牌升级和穿戴装备</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">self</span>:CheckBaseJudge2()</span><br><span class="line">    <span class="keyword">elseif</span> <span class="built_in">self</span>.m_stepIndex == <span class="number">4</span> <span class="keyword">then</span></span><br><span class="line">        <span class="comment">-- 补给抽奖</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">self</span>:CheckBaseJudge3()</span><br><span class="line">    <span class="keyword">elseif</span> <span class="built_in">self</span>.m_stepIndex == <span class="number">5</span> <span class="keyword">then</span></span><br><span class="line">        <span class="comment">-- 主线战斗2</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">self</span>:CheckBaseJudge1(<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">-- 没有大步骤检测只有子步骤</span></span><br><span class="line">    <span class="keyword">if</span> cfg.other_fun_index <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">self</span>:CheckOtherFunIndex()</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 主线战斗1 2</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GuideData:CheckBaseJudge1</span><span class="params">(needSection)</span></span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">local</span> cfg = <span class="built_in">self</span>:GetCurStepCfg()</span><br><span class="line">    <span class="comment">-- 检测主线战斗1</span></span><br><span class="line">    <span class="keyword">if</span> cfg.index == <span class="built_in">self</span>.m_stepStartIndex[cfg.main_step] <span class="keyword">then</span></span><br><span class="line">	</span><br><span class="line">        <span class="keyword">if</span> curCfg.chapter &gt; <span class="number">0</span> <span class="keyword">and</span> curCfg.section &gt;= needSection <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">self</span>.m_stepIndex = cfg.main_step + <span class="number">1</span></span><br><span class="line">            <span class="built_in">self</span>.m_subIndex = <span class="built_in">self</span>.m_stepStartIndex[<span class="built_in">self</span>.m_stepIndex]</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">self</span>:CheckOtherFunIndex()</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 卡牌升级</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GuideData:CheckBaseJudge2</span><span class="params">()</span></span></span><br><span class="line"></span><br><span class="line">    <span class="comment">-- 检测卡牌升级和穿戴装备</span></span><br><span class="line">    <span class="keyword">local</span> cfg = <span class="built_in">self</span>:GetCurStepCfg()</span><br><span class="line">    <span class="keyword">if</span> cfg.index == <span class="built_in">self</span>.m_stepStartIndex[cfg.main_step] <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">local</span> items = GameData.bagData:GetContainerItems(global.system_cfg.bag_type.card_bag)</span><br><span class="line">        <span class="keyword">for</span> _, item <span class="keyword">in</span> <span class="built_in">pairs</span>(items) <span class="keyword">do</span></span><br><span class="line">            <span class="keyword">local</span> equips = item:Get_Equips()</span><br><span class="line">            <span class="keyword">if</span> item:Level() &gt; <span class="number">1</span> <span class="keyword">and</span> <span class="built_in">table</span>.nums(equips) &gt; <span class="number">1</span> <span class="keyword">then</span></span><br><span class="line">                <span class="built_in">self</span>.m_stepIndex = cfg.main_step + <span class="number">1</span></span><br><span class="line">                <span class="built_in">self</span>.m_subIndex = <span class="built_in">self</span>.m_stepStartIndex[<span class="built_in">self</span>.m_stepIndex]</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            <span class="keyword">end</span>    </span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span>    </span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">self</span>:CheckOtherFunIndex()</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 补给抽奖</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GuideData:CheckBaseJudge3</span><span class="params">()</span></span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">local</span> cfg = <span class="built_in">self</span>:GetCurStepCfg()</span><br><span class="line">    <span class="keyword">if</span> cfg.index == <span class="built_in">self</span>.m_stepStartIndex[cfg.main_step] <span class="keyword">then</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> isFree <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">self</span>.m_stepIndex = cfg.main_step + <span class="number">1</span></span><br><span class="line">            <span class="built_in">self</span>.m_subIndex = <span class="built_in">self</span>.m_stepStartIndex[<span class="built_in">self</span>.m_stepIndex]</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span>    </span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">self</span>:CheckOtherFunIndex()</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">--------------------------------------------------------------------- 淫荡分更新 ------------------------------------------------------</span></span><br><span class="line"><span class="comment">-- 检测子步骤</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GuideData:CheckOtherFunIndex</span><span class="params">()</span></span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">local</span> cfg = <span class="built_in">self</span>:GetCurStepCfg()</span><br><span class="line">    <span class="keyword">if</span> cfg.other_fun_index == <span class="number">1</span> <span class="keyword">then</span></span><br><span class="line">        <span class="comment">-- 检测卡牌有没有升级</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">self</span>:CheckCardUpLevel()</span><br><span class="line">    <span class="keyword">elseif</span> cfg.other_fun_index == <span class="number">2</span> <span class="keyword">then</span></span><br><span class="line">        <span class="comment">-- 检测主线有没有出战上阵</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">self</span>:CheckEmBattleSlot()</span><br><span class="line">    <span class="keyword">elseif</span> cfg.other_fun_index == <span class="number">3</span> <span class="keyword">then</span></span><br><span class="line">        <span class="comment">-- 检测个人演习有没有出战上阵</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">self</span>:CheckEmBattleExercise()</span><br><span class="line">    <span class="keyword">elseif</span> cfg.other_fun_index == <span class="number">4</span> <span class="keyword">then</span></span><br><span class="line">        <span class="comment">-- 检测剧情演示副本角色能量是否已满</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">self</span>:CheckStoryStageEnergy()</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--检测卡牌升级</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GuideData:CheckCardUpLevel</span><span class="params">()</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 检测主线有没有出战上阵</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GuideData:CheckEmBattleSlot</span><span class="params">()</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 检测个人演习有没有出战上阵</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GuideData:CheckEmBattleExercise</span><span class="params">()</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 检测剧情演示副本角色能量是否已满</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GuideData:CheckStoryStageEnergy</span><span class="params">()</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">--------------------------------------------------------------------- 淫荡分更新 ------------------------------------------------------</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>表现层<br>GuideModuleUI.lua</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="built_in">module</span> (<span class="string">&#x27;m__&#x27;</span> .. ..., <span class="built_in">package</span>.<span class="built_in">seeall</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> GuideModuleUI = newClass(<span class="string">&quot;GuideModuleUI&quot;</span>, LuaWindowModule)</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GuideModuleUI:ModuleAwake</span><span class="params">( ... )</span></span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">self</span>:SuperCall(GuideModuleUI, <span class="string">&quot;ModuleAwake&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">self</span>:ConstructMember()</span><br><span class="line">	<span class="built_in">self</span>:InitMember()</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 声明变量</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GuideModuleUI:ConstructMember</span><span class="params">()</span></span></span><br><span class="line"></span><br><span class="line">	UIStorage.FillTableAttr(<span class="built_in">self</span>)</span><br><span class="line"></span><br><span class="line">	<span class="built_in">self</span>.m_dicNoticeHandle = &#123;&#125;	    <span class="comment">-- 辅助监听回调</span></span><br><span class="line">    <span class="built_in">self</span>.m_OnClickBtn = <span class="literal">nil</span></span><br><span class="line">    <span class="built_in">self</span>.m_OnClickEvent = <span class="literal">nil</span></span><br><span class="line">    <span class="built_in">self</span>.m_timer = <span class="literal">nil</span></span><br><span class="line">    <span class="built_in">self</span>.m_timerDelay = <span class="literal">nil</span></span><br><span class="line">    <span class="built_in">self</span>.m_countDownTime = <span class="number">50</span>       <span class="comment">-- 倒计时时间</span></span><br><span class="line">    <span class="built_in">self</span>.m_cfg = &#123;&#125;                 <span class="comment">-- 配置表</span></span><br><span class="line">    <span class="built_in">self</span>.m_curMeshColliderPos = <span class="literal">nil</span> <span class="comment">-- 保存的设置位置  </span></span><br><span class="line"><span class="keyword">end</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">-- 初始化成员</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GuideModuleUI:InitMember</span><span class="params">()</span></span></span><br><span class="line"></span><br><span class="line">    LuaUIEventListener.AddEvent_OnClick(<span class="built_in">self</span>.meshCollider.gameObject, <span class="function"><span class="keyword">function</span><span class="params">()</span></span> <span class="built_in">self</span>:OnClick() <span class="keyword">end</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">self</span>.m_timer <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">self</span>.m_timer = CountTimer.New()</span><br><span class="line">        <span class="built_in">self</span>.m_timer:AddEventListener(CountTimer.EVENT_TIMER, <span class="built_in">self</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span></span> <span class="built_in">self</span>:UpdateTimer() <span class="keyword">end</span>)</span><br><span class="line">        <span class="built_in">self</span>.m_timer:start(<span class="number">-1</span>, <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 打开</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GuideModuleUI:Show</span><span class="params">(body)</span></span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">self</span>.m_cfg = GameData.guideData:GetCurStepCfg()</span><br><span class="line">    <span class="built_in">self</span>.meshCollider.gameObject:SetActive(<span class="literal">true</span>)</span><br><span class="line">    <span class="comment">-- 显示</span></span><br><span class="line">    <span class="built_in">self</span>:UpdateGuidUI()</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 关闭</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GuideModuleUI:Close</span><span class="params">()</span></span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">self</span>.m_timer <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">self</span>.m_timer:dispose()</span><br><span class="line">        <span class="built_in">self</span>.m_timer = <span class="literal">nil</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">self</span>.m_timerDelay <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">self</span>.m_timerDelay:dispose()</span><br><span class="line">        <span class="built_in">self</span>.m_timerDelay = <span class="literal">nil</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 释放委托</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GuideModuleUI:ReleaseEvent</span><span class="params">()</span></span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">self</span>.m_OnClickBtn <span class="keyword">and</span> <span class="built_in">self</span>.m_OnClickEvent <span class="keyword">then</span></span><br><span class="line">        LuaUIEventListener.ReleaseEvent_OnClick(<span class="built_in">self</span>.m_OnClickBtn,<span class="built_in">self</span>.m_OnClickEvent)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="built_in">self</span>.m_OnClickBtn = <span class="literal">nil</span></span><br><span class="line">    <span class="built_in">self</span>.m_OnClickEvent = <span class="literal">nil</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 获取对应界面按钮</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GuideModuleUI:GetButton</span><span class="params">()</span></span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">self</span>.m_cfg.isSceneNode <span class="keyword">and</span> GameObject.Find(<span class="built_in">self</span>.m_cfg.targe_node) <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">return</span> GameObject.Find(<span class="built_in">self</span>.m_cfg.targe_node)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">local</span> ViewContainerType = &#123;<span class="string">&quot;UIPopupView&quot;</span>,<span class="string">&quot;UIBaseView&quot;</span>,<span class="string">&quot;UITopView&quot;</span>&#125;</span><br><span class="line">    <span class="keyword">for</span> k, <span class="built_in">type</span> <span class="keyword">in</span> <span class="built_in">pairs</span>(ViewContainerType) <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">local</span> objParentObj = MainView.ins:GetViewContainer(<span class="built_in">type</span>)</span><br><span class="line">        <span class="keyword">local</span> buttonTrans = objParentObj.transform:Find(<span class="built_in">self</span>.m_cfg.targe_node)</span><br><span class="line">        <span class="keyword">if</span> buttonTrans <span class="keyword">and</span> buttonTrans.gameObject <span class="keyword">and</span> buttonTrans.gameObject.activeInHierarchy <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">return</span> buttonTrans.gameObject</span><br><span class="line">        <span class="keyword">end</span>    </span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> printError(<span class="string">&quot;填写的节点位置不对请仔细检查：&quot;</span> .. <span class="built_in">self</span>.m_cfg.targe_node)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 获取对应的位置</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GuideModuleUI:GetTargetPos</span><span class="params">()</span></span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">self</span>.m_OnClickBtn <span class="keyword">then</span> <span class="keyword">return</span> <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">self</span>.m_cfg.isSceneNode <span class="keyword">then</span></span><br><span class="line">        <span class="comment">-- 场景按钮</span></span><br><span class="line">        <span class="keyword">local</span> scenePos = <span class="built_in">self</span>.m_OnClickBtn.transform.position</span><br><span class="line">        <span class="keyword">local</span> x,y,z = UIHelps.ChangeScenePosToUIPos(scenePos.x,scenePos.y, scenePos.z)</span><br><span class="line">        <span class="keyword">local</span> guideLocalPos = <span class="built_in">self</span>.bg.transform.parent:InverseTransformPoint(Vector3.New(x, y, <span class="number">1</span>))</span><br><span class="line">        guideLocalPos.x = guideLocalPos.x</span><br><span class="line">        guideLocalPos.y = guideLocalPos.y</span><br><span class="line">        <span class="keyword">return</span> guideLocalPos</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">local</span> widget = <span class="built_in">self</span>.m_OnClickBtn:GetComponent(<span class="string">&quot;UIWidget&quot;</span>)</span><br><span class="line">        <span class="keyword">local</span> labPivotX = widget.pivotOffset.x <span class="comment">--0.5</span></span><br><span class="line">        <span class="keyword">local</span> labPivotY = widget.pivotOffset.y <span class="comment">--0.5</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">local</span> guideLocalPos = <span class="built_in">self</span>.bg.transform.parent:InverseTransformPoint(<span class="built_in">self</span>.m_OnClickBtn.transform.position)</span><br><span class="line">        guideLocalPos.x = guideLocalPos.x + (<span class="number">0.5</span> - labPivotX) * widget.width + (<span class="built_in">self</span>.m_cfg.offsetX <span class="keyword">or</span> <span class="number">0</span>)</span><br><span class="line">        guideLocalPos.y = guideLocalPos.y + (<span class="number">0.5</span> - labPivotY) * widget.height + (<span class="built_in">self</span>.m_cfg.offsetY <span class="keyword">or</span> <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> guideLocalPos</span><br><span class="line">    <span class="keyword">end</span>    </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 更新位置</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GuideModuleUI:UpdateMeshCollider</span><span class="params">()</span></span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">self</span>.m_OnClickBtn <span class="keyword">then</span> <span class="keyword">return</span> <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">local</span> guideLocalPos = <span class="built_in">self</span>:GetTargetPos()</span><br><span class="line">    <span class="built_in">self</span>.meshCollider.transform.localPosition = guideLocalPos</span><br><span class="line">    <span class="built_in">self</span>.m_curMeshColliderPos = guideLocalPos</span><br><span class="line">    <span class="built_in">self</span>.meshCollider.width = <span class="built_in">self</span>.m_cfg.radius * <span class="number">2</span></span><br><span class="line">    <span class="built_in">self</span>.meshCollider.height = <span class="built_in">self</span>.m_cfg.radius * <span class="number">2</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">-- 显示圆形裁剪坐标</span></span><br><span class="line">    <span class="keyword">local</span> sp = <span class="built_in">self</span>.bg:GetComponent(<span class="string">&quot;UISprite&quot;</span>)</span><br><span class="line">    <span class="keyword">local</span> m_Material = Material.New(Shader.Find(<span class="string">&quot;UI/CircleGuide&quot;</span>))</span><br><span class="line">    m_Material:SetVector(<span class="string">&quot;_Center&quot;</span>,Vector4.New(guideLocalPos.x, guideLocalPos.y, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">    m_Material:SetFloat(<span class="string">&quot;_Slider&quot;</span>,<span class="built_in">self</span>.m_cfg.radius)</span><br><span class="line">    sp.material = m_Material</span><br><span class="line"></span><br><span class="line">    <span class="comment">-- 圆形特效</span></span><br><span class="line">    <span class="built_in">self</span>.arrowEffect.transform.localPosition = guideLocalPos</span><br><span class="line">    <span class="built_in">self</span>.arrowEffect:SetActive(<span class="literal">true</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 更新对话框</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GuideModuleUI:UpdateDialogue</span><span class="params">()</span></span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">self</span>.m_cfg <span class="keyword">or</span> <span class="keyword">not</span> <span class="built_in">self</span>.m_cfg.dialog_direction <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">self</span>.dialogueLeftNode:SetActive(<span class="built_in">self</span>.m_cfg.dialog_direction == <span class="number">1</span>)</span><br><span class="line">    <span class="built_in">self</span>.dialogueRightNode:SetActive(<span class="built_in">self</span>.m_cfg.dialog_direction == <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">self</span>.m_cfg.dialog_direction == <span class="number">1</span> <span class="keyword">then</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">self</span>.text_left_jueseming.text = <span class="built_in">self</span>.m_cfg.name</span><br><span class="line">        <span class="built_in">self</span>.text_left_wenbenneirong.text = <span class="built_in">self</span>.m_cfg.dialog_dec</span><br><span class="line"></span><br><span class="line">        <span class="keyword">local</span> to = <span class="built_in">self</span>.dialogueLeftNode.transform.localPosition</span><br><span class="line">        <span class="keyword">local</span> from = &#123;x = to.x - <span class="number">1500</span>, y = to.y, z = to.z&#125;</span><br><span class="line">        <span class="built_in">self</span>.dialogueLeftNode.transform.localPosition = from</span><br><span class="line">        <span class="built_in">self</span>.dialogueLeftNode.transform:DOLocalMoveX(to.x, <span class="number">0.5</span>):OnComplete(<span class="function"><span class="keyword">function</span><span class="params">()</span></span></span><br><span class="line">            <span class="built_in">self</span>.act_left_wenbenneirong:SetCharsPerSecond(<span class="number">12</span>)</span><br><span class="line">            <span class="built_in">self</span>.act_left_wenbenneirong:ResetToBeginning()</span><br><span class="line">        <span class="keyword">end</span>)</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">self</span>.text_right_jueseming.text = <span class="built_in">self</span>.m_cfg.name</span><br><span class="line">        <span class="built_in">self</span>.text_right_wenbenneirong.text = <span class="built_in">self</span>.m_cfg.dialog_dec</span><br><span class="line"></span><br><span class="line">        <span class="keyword">local</span> to = <span class="built_in">self</span>.dialogueRightNode.transform.localPosition</span><br><span class="line">        <span class="keyword">local</span> from = &#123;x = to.x + <span class="number">1500</span>, y = to.y, z = to.z&#125;</span><br><span class="line">        <span class="built_in">self</span>.dialogueRightNode.transform.localPosition = from</span><br><span class="line">        <span class="built_in">self</span>.dialogueRightNode.transform:DOLocalMoveX(to.x, <span class="number">0.5</span>):OnComplete(<span class="function"><span class="keyword">function</span><span class="params">()</span></span></span><br><span class="line"></span><br><span class="line">            <span class="built_in">self</span>.act_right_wenbenneirong:SetCharsPerSecond(<span class="number">12</span>)</span><br><span class="line">            <span class="built_in">self</span>.act_right_wenbenneirong:ResetToBeginning()</span><br><span class="line">        <span class="keyword">end</span>)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 检测位置坐标 防止位置错误</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GuideModuleUI:CheckTargePos</span><span class="params">()</span></span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">local</span> guideLocalPos = <span class="built_in">self</span>:GetTargetPos()</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">self</span>.m_curMeshColliderPos <span class="keyword">and</span> <span class="built_in">self</span>.m_curMeshColliderPos ~= guideLocalPos <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">self</span>:UpdateMeshCollider()</span><br><span class="line">    <span class="keyword">end</span>     </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 刷新这个界面</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GuideModuleUI:UpdateGuidUI</span><span class="params">()</span></span></span><br><span class="line"></span><br><span class="line">    <span class="comment">-- 释放</span></span><br><span class="line">    <span class="built_in">self</span>:ReleaseEvent()</span><br><span class="line"></span><br><span class="line">    <span class="built_in">self</span>.m_OnClickBtn = <span class="built_in">self</span>:GetButton()</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">self</span>.m_OnClickBtn <span class="keyword">then</span></span><br><span class="line">        UIHelps.CloseWindow(ModuleName.GuideModuleUI)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">-- 按钮增加委托</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">self</span>.m_cfg.isSceneNode <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">self</span>.m_OnClickEvent = LuaUIEventListener.AddEvent_OnClick2(<span class="built_in">self</span>.m_OnClickBtn, <span class="function"><span class="keyword">function</span><span class="params">()</span></span> <span class="built_in">self</span>:ShowNext() <span class="keyword">end</span>)  </span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="comment">-- 场景按钮直接增加</span></span><br><span class="line">        GameData.guideData:AddStepIndex()</span><br><span class="line">    <span class="keyword">end</span> </span><br><span class="line"></span><br><span class="line">    <span class="comment">-- 更新对话</span></span><br><span class="line">    <span class="built_in">self</span>:UpdateDialogue()</span><br><span class="line"></span><br><span class="line">    <span class="comment">-- 更新手指位置</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">self</span>.m_cfg.delay_time <span class="keyword">then</span></span><br><span class="line">        <span class="comment">-- 延迟显示手指</span></span><br><span class="line">        <span class="built_in">self</span>.m_timerDelay = CountTimer.New()</span><br><span class="line">        <span class="built_in">self</span>.m_timerDelay:AddEventListener(CountTimer.EVENT_TIMERCOMPLETE, <span class="built_in">self</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span></span></span><br><span class="line">            <span class="built_in">self</span>:UpdateMeshCollider()</span><br><span class="line">        <span class="keyword">end</span>)</span><br><span class="line">        <span class="built_in">self</span>.m_timerDelay:start(<span class="number">1</span>, <span class="built_in">self</span>.m_cfg.delay_time)</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">self</span>:UpdateMeshCollider()</span><br><span class="line">        <span class="comment">-- 检测手指最终位置对不对</span></span><br><span class="line">        <span class="built_in">self</span>.m_timerDelay = CountTimer.New()</span><br><span class="line">        <span class="built_in">self</span>.m_timerDelay:AddEventListener(CountTimer.EVENT_TIMERCOMPLETE, <span class="built_in">self</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span></span></span><br><span class="line">            <span class="built_in">self</span>:CheckTargePos()</span><br><span class="line">        <span class="keyword">end</span>)</span><br><span class="line">        <span class="built_in">self</span>.m_timerDelay:start(<span class="number">1</span>,<span class="number">3</span>)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 显示下一个</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GuideModuleUI:ShowNext</span><span class="params">()</span></span></span><br><span class="line"></span><br><span class="line">    <span class="comment">-- 释放</span></span><br><span class="line">    <span class="built_in">self</span>:ReleaseEvent()</span><br><span class="line">    <span class="comment">-- 下一个步骤</span></span><br><span class="line">    GameData.guideData:AddStepIndex()</span><br><span class="line">    <span class="comment">-- 走重新打开界面</span></span><br><span class="line">    UIHelps.CloseWindow(ModuleName.GuideModuleUI)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GuideModuleUI:UpdateTimer</span><span class="params">()</span></span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">self</span>.m_countDownTime <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">self</span>.m_countDownTime = <span class="built_in">self</span>.m_countDownTime - <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">self</span>.m_countDownTime &lt; <span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">self</span>.m_timer:stop()</span><br><span class="line">            <span class="built_in">self</span>:ShowNext()</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 点击关闭</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GuideModuleUI:OnClickClose</span><span class="params">()</span></span></span><br><span class="line"></span><br><span class="line">	UIHelps.CloseWindow(ModuleName.GuideModuleUI)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 点击背景</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GuideModuleUI:OnClick</span><span class="params">()</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 注册监听</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GuideModuleUI:listNotificationInterests</span><span class="params">()</span></span></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 监听回调</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GuideModuleUI:handleNotification</span><span class="params">(notification )</span></span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">local</span> msgName = notification:getName()</span><br><span class="line">    <span class="keyword">local</span> body = notification:getBody()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">local</span> handle = <span class="built_in">self</span>.m_dicNoticeHandle[msgName]</span><br><span class="line">    <span class="keyword">if</span> handle ~= <span class="literal">nil</span> <span class="keyword">then</span></span><br><span class="line">        handle(<span class="built_in">self</span>, body)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>看我们的配置表<br><img src="/images/%E6%96%B0%E6%89%8B%E6%8C%87%E5%BC%95%E9%85%8D%E7%BD%AE.png"></p>
<p>大功告成<br>。。。<br>。。<br>。</p>
]]></content>
      <tags>
        <tag>U3D</tag>
        <tag>ngui</tag>
      </tags>
  </entry>
  <entry>
    <title>unity红点框架代码</title>
    <url>/2021/12/24/%E6%88%91%E7%9A%84%E8%BD%A6%E8%BD%AE%E5%AD%90/unity%E7%BA%A2%E7%82%B9%E6%A1%86%E6%9E%B6%E4%BB%A3%E7%A0%81/</url>
    <content><![CDATA[<p>最近公司项目做到了红点的步骤，之前的项目感觉红点架构感觉不太好用，于是我自己设计了一下。来上代码<br>先上C# 代码</p>
<p>预制体红点绑定这个 可以绑定lua文件 在lua检测红点条件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 红点物体;</span><br><span class="line"> * RedDotItem.cs</span><br><span class="line">**/</span><br><span class="line">using UnityEngine;</span><br><span class="line">using UnityEngine.UI;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using LuaInterface;</span><br><span class="line"></span><br><span class="line">public class RedDotItem : MonoBehaviour</span><br><span class="line">&#123;  </span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// lua文件;</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    public string luaClassName;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 红点物体;</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    public GameObject Go_RedDot;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 红点类型;</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    public List&lt;RedDotType&gt; redDotTypes;</span><br><span class="line">    [SerializeField] private string curShowType;</span><br><span class="line"></span><br><span class="line">    private bool _isInit;</span><br><span class="line">    private LuaTable luaObj;</span><br><span class="line">    private LuaFunction fnCheckRedDot;</span><br><span class="line">    private int leftTime = -1;</span><br><span class="line"></span><br><span class="line">    public bool isInit</span><br><span class="line">    &#123;</span><br><span class="line">        get</span><br><span class="line">        &#123;</span><br><span class="line">            return this._isInit;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    void Awake()&#123;</span><br><span class="line"></span><br><span class="line">        if (luaClassName == null)</span><br><span class="line">            luaClassName = &quot;MainRedDotHelp&quot;;</span><br><span class="line">        LuaBehaviourProxy obj = LuaBehaviourProxy.CreateLuaProxy(this.gameObject,luaClassName);</span><br><span class="line">        luaObj = obj.luaObj;</span><br><span class="line">        fnCheckRedDot = luaObj[&quot;CheckRedDot&quot;] as LuaFunction;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        if (Go_RedDot == null)</span><br><span class="line">            return;</span><br><span class="line"></span><br><span class="line">        this.Init();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    void Start()</span><br><span class="line">    &#123;   </span><br><span class="line">        //设置红点;</span><br><span class="line">        this.CheckRedDot();</span><br><span class="line">        this.MoveTime();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void Init()</span><br><span class="line">    &#123;</span><br><span class="line">        if (_isInit)</span><br><span class="line">            return;</span><br><span class="line">        _isInit = true;</span><br><span class="line"></span><br><span class="line">        RedDotManager.Instance.RegisterRedDot(redDotTypes, this);</span><br><span class="line"></span><br><span class="line">        //设置红点;</span><br><span class="line">        this.CheckRedDot();</span><br><span class="line">        this.MoveTime();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void Reset()</span><br><span class="line">    &#123;</span><br><span class="line">        // 取消注册红点;</span><br><span class="line">        RedDotManager.Instance.UnRegisterRedDot(this);</span><br><span class="line">        // 清除类型</span><br><span class="line">        this.redDotTypes.Clear();</span><br><span class="line">        // 清除红点标记</span><br><span class="line">        this.Go_RedDot = null;</span><br><span class="line">        // 重新初始化</span><br><span class="line">        _isInit = false;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    void OnDestroy()</span><br><span class="line">    &#123;</span><br><span class="line">        //取消注册红点;</span><br><span class="line">        RedDotManager.Instance.UnRegisterRedDot(this);</span><br><span class="line"></span><br><span class="line">        //取消注册lua函数</span><br><span class="line">        if (fnCheckRedDot != null) </span><br><span class="line">        &#123;</span><br><span class="line">            fnCheckRedDot.Dispose();</span><br><span class="line">        &#125;</span><br><span class="line">        fnCheckRedDot = null;</span><br><span class="line">        luaObj = null;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void MoveTime()</span><br><span class="line">    &#123;</span><br><span class="line">        if (!this.isInit)</span><br><span class="line">            return;</span><br><span class="line"></span><br><span class="line">        if (leftTime &gt; 0)</span><br><span class="line">        &#123;</span><br><span class="line">            leftTime--;</span><br><span class="line">        &#125;</span><br><span class="line">        this.SetData(leftTime == 0);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 设置红点显示;</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;param name=&quot;bRedDot&quot;&gt;&lt;/param&gt;</span><br><span class="line">    public void SetData(bool bRedDot, bool bForceRefresh = false)</span><br><span class="line">    &#123;</span><br><span class="line">        if (bForceRefresh &amp;&amp; Go_RedDot.active != bRedDot)</span><br><span class="line">        &#123;</span><br><span class="line">            Go_RedDot.SetActive(bRedDot);</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if (Go_RedDot.active != bRedDot)</span><br><span class="line">        &#123;</span><br><span class="line">            Go_RedDot.SetActive(bRedDot);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 获取当前物体挂载的所有红点;</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">    public List&lt;RedDotType&gt; GetRedDotTypes()</span><br><span class="line">    &#123;</span><br><span class="line">        return this.redDotTypes;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /// 添加当前物体挂载的红点类型;</span><br><span class="line">    public void AddRedDotType(RedDotType rt = RedDotType.None)</span><br><span class="line">    &#123;</span><br><span class="line">        if (rt != RedDotType.None)&#123;</span><br><span class="line"></span><br><span class="line">            if (redDotTypes == null)</span><br><span class="line">                redDotTypes = new List&lt;RedDotType&gt;();</span><br><span class="line"></span><br><span class="line">            if (!redDotTypes.Contains(rt))</span><br><span class="line">            &#123;</span><br><span class="line">                redDotTypes.Add(rt);</span><br><span class="line">            &#125;</span><br><span class="line">            CheckRedDot();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 设置红点样式</span><br><span class="line">    public void SetRedDotNode(GameObject goRedDot)</span><br><span class="line">    &#123;</span><br><span class="line">        this.Go_RedDot = goRedDot;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 调用lua方法;</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">    public int CheckRedDot(RedDotType redDotType)</span><br><span class="line">    &#123;   </span><br><span class="line">        string rt = redDotType.ToString();</span><br><span class="line"></span><br><span class="line">        fnCheckRedDot.BeginPCall();</span><br><span class="line">		fnCheckRedDot.Push(luaObj);</span><br><span class="line">		fnCheckRedDot.Push(rt);</span><br><span class="line">		fnCheckRedDot.PCall();</span><br><span class="line">        int state = (int)fnCheckRedDot.CheckNumber();</span><br><span class="line">		fnCheckRedDot.EndPCall();</span><br><span class="line">        </span><br><span class="line">        return state;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //检测单前对象所有类型红点</span><br><span class="line">    public void CheckRedDot()</span><br><span class="line">    &#123;   </span><br><span class="line">        if (!this.isInit)</span><br><span class="line">            return;</span><br><span class="line"></span><br><span class="line">        this.curShowType = &quot;&quot;;</span><br><span class="line">        List&lt;RedDotType&gt; redDotTypes = this.GetRedDotTypes();</span><br><span class="line">        int tmpTime = -1;</span><br><span class="line">        for(int i = 0; i &lt; redDotTypes.Count; i++)</span><br><span class="line">		&#123;</span><br><span class="line"></span><br><span class="line">            int time = this.CheckRedDot(redDotTypes[i]);</span><br><span class="line">            if (time == 0)</span><br><span class="line">            &#123;</span><br><span class="line">                this.leftTime = 0;</span><br><span class="line">                this.curShowType = redDotTypes[i].ToString();</span><br><span class="line">                return;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            if (time &gt; 0)</span><br><span class="line">            &#123;</span><br><span class="line">                if (tmpTime == -1)</span><br><span class="line">                    tmpTime = time;</span><br><span class="line"></span><br><span class="line">                if (tmpTime &gt; time)</span><br><span class="line">                    tmpTime = time;         </span><br><span class="line">            &#125;</span><br><span class="line">		&#125;</span><br><span class="line">        this.leftTime = tmpTime;</span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 检测红点返回值;</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">    public void ShowRedDot(RedDotType redDotType)</span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>红点管理器可以导出lua之后调用更新</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 红点系统管理类;</span><br><span class="line"> * RedDotManager.cs</span><br><span class="line">**/</span><br><span class="line">using System;</span><br><span class="line">using System.Collections;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using UnityEngine;</span><br><span class="line"></span><br><span class="line">public class RedDotManager</span><br><span class="line">&#123;</span><br><span class="line">    private static RedDotManager _instance;</span><br><span class="line">    public static RedDotManager Instance</span><br><span class="line">    &#123;</span><br><span class="line">        get</span><br><span class="line">        &#123;</span><br><span class="line">            if (null == _instance)</span><br><span class="line">            &#123;</span><br><span class="line">                _instance = new RedDotManager();</span><br><span class="line">                GameVars.tickUtils.SetInterval(1, _instance.UpdateAll);</span><br><span class="line">            &#125;</span><br><span class="line">            return _instance;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 红点物体;</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    Dictionary&lt;RedDotType, List&lt;RedDotItem&gt;&gt; RedDotObjDict = new Dictionary&lt;RedDotType, List&lt;RedDotItem&gt;&gt;();</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 初始化红点系统(注意只需要初始化一次);</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    public void Initilize()</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 注册红点;</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;param name=&quot;redDotType&quot;&gt;&lt;/param&gt;</span><br><span class="line">    /// &lt;param name=&quot;item&quot;&gt;&lt;/param&gt;</span><br><span class="line">    public void RegisterRedDot(List&lt;RedDotType&gt; redDotTypes, RedDotItem item)</span><br><span class="line">    &#123;</span><br><span class="line">        for (int i = 0; i &lt; redDotTypes.Count; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            RegisterRedDot(redDotTypes[i], item);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 通过gameObject注册红点;</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;param name=&quot;rt&quot;&gt; 类型&lt;/param&gt;</span><br><span class="line">    /// &lt;param name=&quot;item&quot;&gt; 添加的节点&lt;/param&gt;</span><br><span class="line">    /// &lt;param name=&quot;goRedDot&quot;&gt; 红点物体&lt;/param&gt;</span><br><span class="line">    public void LuaRegisterRedDot(string rt, GameObject item,GameObject goRedDot)</span><br><span class="line">    &#123;   </span><br><span class="line">        RedDotType redDotType = (RedDotType)Enum.Parse(typeof(RedDotType),rt);</span><br><span class="line">        RedDotItem rItem = item.GetComponent&lt;RedDotItem&gt;();</span><br><span class="line">        if (rItem == null)</span><br><span class="line">        &#123;</span><br><span class="line">            rItem = item.AddComponent&lt;RedDotItem&gt;();</span><br><span class="line">            rItem.AddRedDotType(redDotType);</span><br><span class="line">            rItem.SetRedDotNode(goRedDot);</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            if (!rItem.isInit)</span><br><span class="line">            &#123;</span><br><span class="line">                rItem.Reset();</span><br><span class="line">                rItem.AddRedDotType(redDotType);</span><br><span class="line">                rItem.SetRedDotNode(goRedDot);</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                rItem.AddRedDotType(redDotType);</span><br><span class="line">                RegisterRedDot(redDotType,rItem);</span><br><span class="line">            &#125; </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 取消注册红点;</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;param name=&quot;item&quot;&gt;&lt;/param&gt;</span><br><span class="line">    public void UnRegisterRedDot(RedDotItem item)</span><br><span class="line">    &#123;</span><br><span class="line">        Dictionary&lt;RedDotType, List&lt;RedDotItem&gt;&gt;.Enumerator itor = RedDotObjDict.GetEnumerator();</span><br><span class="line">        while (itor.MoveNext())</span><br><span class="line">        &#123;</span><br><span class="line">            List&lt;RedDotItem&gt; redDotItems = itor.Current.Value;</span><br><span class="line">            if (redDotItems.Contains(item))</span><br><span class="line">            &#123;</span><br><span class="line">                redDotItems.Remove(item);</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    // lua 调用</span><br><span class="line">    public void LuaNotifyAll(string rt, object obj = null)</span><br><span class="line">    &#123;</span><br><span class="line">        RedDotType cc = (RedDotType)Enum.Parse(typeof(RedDotType),rt);</span><br><span class="line">        NotifyAll(cc);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void UpdateAll(object obj)</span><br><span class="line">    &#123;</span><br><span class="line">        var enumerator = this.RedDotObjDict.GetEnumerator();</span><br><span class="line">        while (enumerator.MoveNext())</span><br><span class="line">        &#123;   </span><br><span class="line">            for (int i = 0; i &lt; enumerator.Current.Value.Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                RedDotItem item = enumerator.Current.Value[i];</span><br><span class="line">                if (item != null)</span><br><span class="line">                &#123;</span><br><span class="line">                    item.MoveTime();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; </span><br><span class="line">        &#125;     </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 更新该类型的所有红点组件;</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;param name=&quot;redDotType&quot;&gt;&lt;/param&gt;</span><br><span class="line">    /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">    private void NotifyAll(RedDotType redDotType)</span><br><span class="line">    &#123;</span><br><span class="line">        if (RedDotObjDict.ContainsKey(redDotType))</span><br><span class="line">        &#123;   </span><br><span class="line">            for (int i = 0; i &lt; RedDotObjDict[redDotType].Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                RedDotItem item = RedDotObjDict[redDotType][i];</span><br><span class="line">                if (item != null)</span><br><span class="line">                &#123;</span><br><span class="line">                    item.CheckRedDot();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    #region private</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 添加红点界面;</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;param name=&quot;redDotType&quot;&gt;&lt;/param&gt;</span><br><span class="line">    /// &lt;param name=&quot;item&quot;&gt;&lt;/param&gt;</span><br><span class="line">    private void RegisterRedDot(RedDotType redDotType, RedDotItem item)</span><br><span class="line">    &#123;</span><br><span class="line">        if (RedDotObjDict.ContainsKey(redDotType))</span><br><span class="line">        &#123;   </span><br><span class="line">            if (!RedDotObjDict[redDotType].Contains(item))</span><br><span class="line">            &#123;</span><br><span class="line">                RedDotObjDict[redDotType].Add(item);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            List&lt;RedDotItem&gt; items = new List&lt;RedDotItem&gt;();</span><br><span class="line">            items.Add(item);</span><br><span class="line">            RedDotObjDict.Add(redDotType, items);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    #endregion</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>枚举值可在预制体选择那个类型</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 红点类型的枚举;</span><br><span class="line"> * RedDotType.cs</span><br><span class="line">**/</span><br><span class="line">public enum RedDotType</span><br><span class="line">&#123;</span><br><span class="line">    None = 0,</span><br><span class="line">    MainUI_EmailRedDot = 1,</span><br><span class="line">    MainUI_SignInRedDot = 2,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>lua方面的代码介绍</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">MainRedDotHelp = newClass(<span class="string">&quot;MainRedDotHelp&quot;</span>,LuaBehaviour);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">MainRedDotHelp:CheckRedDot</span><span class="params">(type)</span></span></span><br><span class="line">    <span class="comment">-- 检测状态 RedDotType</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">self</span>[<span class="built_in">type</span>] <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">self</span>[<span class="built_in">type</span>]()</span><br><span class="line">    <span class="keyword">end</span>      </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 邮件红点</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">MainRedDotHelp:MainUI_EmailRedDot</span><span class="params">()</span></span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">local</span> state = GameData.mailData:GetRedDotTag()</span><br><span class="line">    <span class="keyword">return</span> state</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 签到红点</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">MainRedDotHelp:MainUI_SignInRedDot</span><span class="params">()</span></span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">local</span> state = GameData.welfareData:GetSignInRedDotTag()</span><br><span class="line">    <span class="keyword">return</span> state</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p>好啦大概就这样了 用起来还行</p>
]]></content>
      <tags>
        <tag>U3D</tag>
        <tag>轮子</tag>
      </tags>
  </entry>
  <entry>
    <title>U3D 基于NGUI写的 自适应大小的ListView</title>
    <url>/2021/10/20/%E6%88%91%E7%9A%84%E8%BD%A6%E8%BD%AE%E5%AD%90/%E8%87%AA%E9%80%82%E5%BA%94%E5%A4%A7%E5%B0%8FListView/</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">using UnityEngine;</span><br><span class="line">using UnityEngine.UI;</span><br><span class="line">using System.Collections;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System;</span><br><span class="line"></span><br><span class="line">public enum Layout</span><br><span class="line">&#123;</span><br><span class="line">    Vertical,</span><br><span class="line">    Horizontal</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/// &lt;summary&gt;</span><br><span class="line">///	无限Item列表</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">public class UIDiffSizeListView : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    public Layout 				layout;</span><br><span class="line">    public Vector2				spacing;</span><br><span class="line">    public GameObject           itemPrefab;</span><br><span class="line">    private UIItemRender        itemRender = null;</span><br><span class="line">    private UIPanel             mPanel;</span><br><span class="line">    public UIScrollView 		mScrollView;</span><br><span class="line">    private bool				initialized = false;</span><br><span class="line">    private GameObject		    content;</span><br><span class="line">    private Vector2			    scrollRectSize;</span><br><span class="line">    private GameObject          pressObj;</span><br><span class="line">    private bool isDraging      = false;</span><br><span class="line">    private bool isInvalid;</span><br><span class="line">    public List&lt;object&gt; dataList = new List&lt;object&gt;();</span><br><span class="line">    private Dictionary&lt;int, UIItemRender&gt; dirCurItems = new Dictionary&lt;int, UIItemRender&gt;();</span><br><span class="line">    private Dictionary&lt;int, UIItemRender&gt; tmpDic2 = new Dictionary&lt;int, UIItemRender&gt;();</span><br><span class="line">    private Dictionary&lt;int, Vector2&gt; itemSizes = new Dictionary&lt;int, Vector2&gt;();</span><br><span class="line">    private Queue&lt;UIItemRender&gt; unUseItems = new Queue&lt;UIItemRender&gt;();</span><br><span class="line"></span><br><span class="line">    void Awake()</span><br><span class="line">    &#123;</span><br><span class="line">        this.Init();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void AddData(object obj)</span><br><span class="line">    &#123;</span><br><span class="line">        this.dataList.Add(obj);</span><br><span class="line">        this.Invalidate();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    public void UpdateDataAt(object obj, int inx)</span><br><span class="line">    &#123;</span><br><span class="line">        if (inx &gt;= 0 &amp;&amp; inx &lt;= this.dataList.Count)</span><br><span class="line">        &#123;</span><br><span class="line">            this.dataList[inx] = obj;</span><br><span class="line">            this.itemSizes.Remove(inx);</span><br><span class="line">            this.Invalidate();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void InsertData(object obj, int inx)</span><br><span class="line">    &#123;</span><br><span class="line">        this.dataList.Insert(inx, obj);</span><br><span class="line"></span><br><span class="line">        Dictionary&lt;int, Vector2&gt; tmpDic = new Dictionary&lt;int, Vector2&gt;();</span><br><span class="line">        for(int i = 0; i &lt; this.dataList.Count; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            if (i &lt; inx)</span><br><span class="line">            &#123;   </span><br><span class="line">                if(this.itemSizes.ContainsKey(i))</span><br><span class="line">                &#123;</span><br><span class="line">                    tmpDic[i] = this.itemSizes[i];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            else if (i &gt; inx)</span><br><span class="line">            &#123;</span><br><span class="line">                if(this.itemSizes.ContainsKey(i - 1))</span><br><span class="line">                &#123;</span><br><span class="line">                    tmpDic[i] = this.itemSizes[i - 1];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        this.itemSizes = null;</span><br><span class="line">        this.itemSizes = tmpDic;</span><br><span class="line"></span><br><span class="line">        this.Invalidate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void RemoveDataAt(int inx)</span><br><span class="line">    &#123;</span><br><span class="line">        if (inx &gt;= 0 &amp;&amp; inx &lt;= this.dataList.Count)</span><br><span class="line">        &#123;</span><br><span class="line">            this.dataList.RemoveAt(inx);</span><br><span class="line"></span><br><span class="line">            Dictionary&lt;int, Vector2&gt; tmpDic = new Dictionary&lt;int, Vector2&gt;();</span><br><span class="line">            for(int i = 0; i &lt; this.dataList.Count; ++i)</span><br><span class="line">            &#123;</span><br><span class="line">                if (i &lt; inx)</span><br><span class="line">                &#123;   </span><br><span class="line">                    if(this.itemSizes.ContainsKey(i))</span><br><span class="line">                    &#123;</span><br><span class="line">                        tmpDic[i] = this.itemSizes[i];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                else if (i &gt; inx)</span><br><span class="line">                &#123;</span><br><span class="line">                    if(this.itemSizes.ContainsKey(i + 1))</span><br><span class="line">                    &#123;</span><br><span class="line">                        tmpDic[i] = this.itemSizes[i + 1];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            this.itemSizes = null;</span><br><span class="line">            this.itemSizes = tmpDic;</span><br><span class="line">            this.Invalidate();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void JumpTo(int inx)</span><br><span class="line">    &#123;   </span><br><span class="line">        if (inx &gt;= 0 &amp;&amp; inx &lt;= this.dataList.Count)</span><br><span class="line">        &#123;</span><br><span class="line">            float sizeSum = 0;</span><br><span class="line">            UIWidget widget = this.content.GetComponent&lt;UIWidget&gt;();</span><br><span class="line">            if (this.layout == Layout.Vertical)</span><br><span class="line">            &#123;</span><br><span class="line">                for(int i = 0; i &lt; inx; ++i)</span><br><span class="line">                &#123;   </span><br><span class="line">                    Vector2 size = this.GetSizeByInx(i);</span><br><span class="line">                    sizeSum = sizeSum + size.y;</span><br><span class="line">                &#125;</span><br><span class="line">                this.mScrollView.MoveRelative(new Vector3(0,sizeSum,0));</span><br><span class="line">            &#125;</span><br><span class="line">            else if (this.layout == Layout.Horizontal)</span><br><span class="line">            &#123;</span><br><span class="line">                for(int i = 0; i &lt; inx; ++i)</span><br><span class="line">                &#123;   </span><br><span class="line">                    Vector2 size = this.GetSizeByInx(i);</span><br><span class="line">                    sizeSum = sizeSum + size.x;</span><br><span class="line">                &#125;</span><br><span class="line">                this.mScrollView.MoveRelative(new Vector3(sizeSum,0,0));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;    </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    public void JumpToBottom()</span><br><span class="line">    &#123;   </span><br><span class="line">        UIWidget widget = this.content.GetComponent&lt;UIWidget&gt;();</span><br><span class="line">        if (this.layout == Layout.Vertical)</span><br><span class="line">        &#123;</span><br><span class="line">            this.mScrollView.ResetPosition();</span><br><span class="line">            float showPos = widget.height - scrollRectSize.y;</span><br><span class="line">            if (showPos &gt; 0)</span><br><span class="line">                this.mScrollView.MoveRelative(new Vector3(0,showPos,0));</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        else if (this.layout == Layout.Horizontal)</span><br><span class="line">        &#123;   </span><br><span class="line">            this.mScrollView.ResetPosition();</span><br><span class="line">            float showPos = widget.width - scrollRectSize.x;</span><br><span class="line">            if (showPos &gt; 0)</span><br><span class="line">                this.mScrollView.MoveRelative(new Vector3(showPos,0,0));</span><br><span class="line">        &#125;   </span><br><span class="line">    &#125;</span><br><span class="line">    public void JumpToTop()</span><br><span class="line">    &#123;   </span><br><span class="line">        UIWidget widget = this.content.GetComponent&lt;UIWidget&gt;();</span><br><span class="line">        if (this.layout == Layout.Vertical)</span><br><span class="line">        &#123;</span><br><span class="line">            this.mScrollView.SetDragAmount(0,0,false);</span><br><span class="line">        &#125;</span><br><span class="line">        else if (this.layout == Layout.Horizontal)</span><br><span class="line">        &#123;</span><br><span class="line">            this.mScrollView.SetDragAmount(0,0,false);</span><br><span class="line">        &#125;   </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void Init()</span><br><span class="line">    &#123;   </span><br><span class="line"></span><br><span class="line">        if (initialized)</span><br><span class="line">            return;</span><br><span class="line">        initialized = true;</span><br><span class="line"></span><br><span class="line">        mPanel = NGUITools.FindInParents&lt;UIPanel&gt;(gameObject);</span><br><span class="line">        this.mScrollView = mPanel.GetComponent&lt;UIScrollView&gt;();</span><br><span class="line">        this.mPanel.onClipMove += OnUIPanelClipMove;</span><br><span class="line"></span><br><span class="line">        // record some sizes</span><br><span class="line">        scrollRectSize = mPanel.GetViewSize();</span><br><span class="line"></span><br><span class="line">        // add a scrollrect content</span><br><span class="line">        GameObject go = new GameObject ();</span><br><span class="line">		go.name = &quot;content&quot;;</span><br><span class="line">        go.transform.SetParent(transform);</span><br><span class="line">        </span><br><span class="line">        UIWidget uiwidget = go.AddComponent&lt;UIWidget&gt;();</span><br><span class="line">        uiwidget.pivot = UIWidget.Pivot.TopLeft;</span><br><span class="line">        uiwidget.SetDimensions((int)scrollRectSize.x,(int)scrollRectSize.y);</span><br><span class="line">        go.transform.localPosition = Vector3.zero;</span><br><span class="line">        go.transform.localScale = Vector3.one;</span><br><span class="line">        this.content = go;</span><br><span class="line"></span><br><span class="line">        //itemPrefab</span><br><span class="line">        GameObject item = GameObject.Instantiate(itemPrefab) as GameObject;</span><br><span class="line">        item.transform.SetParent(mPanel.transform.parent);</span><br><span class="line">        item.transform.localPosition = new Vector3(1500, 1500, 1);</span><br><span class="line">        itemRender = item.GetComponent&lt;UIItemRender&gt;();</span><br><span class="line">        if (itemRender == null)</span><br><span class="line">            itemRender = item.AddComponent&lt;UIItemRender&gt;();</span><br><span class="line"></span><br><span class="line">        this.mScrollView.onDragStarted += delegate ()</span><br><span class="line">        &#123;</span><br><span class="line">            this.isDraging = true;</span><br><span class="line">        &#125;;</span><br><span class="line">        this.mScrollView.onDragFinished += delegate ()</span><br><span class="line">        &#123;</span><br><span class="line">            this.isDraging = false;</span><br><span class="line">            this.pressObj = null;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 全部清除重新计算每个的大小</span><br><span class="line">    public void ClearAll()</span><br><span class="line">    &#123;</span><br><span class="line">        this.dataList.Clear();</span><br><span class="line">        this.itemSizes.Clear();</span><br><span class="line">        this.Invalidate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void ClearAllCurItems()</span><br><span class="line">    &#123;</span><br><span class="line">        var enumerator = this.dirCurItems.GetEnumerator();</span><br><span class="line">        while (enumerator.MoveNext())</span><br><span class="line">        &#123;   </span><br><span class="line">            Destroy(enumerator.Current.Value.gameObject);</span><br><span class="line">        &#125;</span><br><span class="line">        this.dirCurItems.Clear();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    void LateUpdate()</span><br><span class="line">    &#123;</span><br><span class="line">        UpdateNow();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void UpdateNow()</span><br><span class="line">    &#123;</span><br><span class="line">        if (this.isInvalid)</span><br><span class="line">        &#123;</span><br><span class="line">            if (!this.gameObject.activeInHierarchy)</span><br><span class="line">                return;</span><br><span class="line"></span><br><span class="line">            this.ClearAllCurItems();</span><br><span class="line">            this.UpdateView();</span><br><span class="line">            this.UpdateScrollView();</span><br><span class="line">            this.isInvalid = false;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    private void Invalidate()</span><br><span class="line">    &#123;</span><br><span class="line">        this.isInvalid = true;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void OnUIPanelClipMove(UIPanel panel)</span><br><span class="line">    &#123;</span><br><span class="line">        this.UpdateView();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void UpdateScrollView()</span><br><span class="line">    &#123;</span><br><span class="line">        this.mScrollView.InvalidateBounds();</span><br><span class="line">        this.mScrollView.RestrictWithinBounds(true);</span><br><span class="line">        this.mScrollView.UpdateScrollbars(false);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private Vector2 GetSizeByInx(int inx)</span><br><span class="line">    &#123;</span><br><span class="line">        if(!this.itemSizes.ContainsKey(inx))</span><br><span class="line">        &#123;</span><br><span class="line">            </span><br><span class="line">            itemRender.SetData(this.dataList[inx]);</span><br><span class="line">            UIWidget widget = itemRender.GetComponent&lt;UIWidget&gt;();</span><br><span class="line"></span><br><span class="line">            Vector2 size = Vector2.zero;</span><br><span class="line">            size.x = widget.width;</span><br><span class="line">            size.y = widget.height;</span><br><span class="line"></span><br><span class="line">            this.itemSizes.Add(inx, size);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return this.itemSizes[inx];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private Vector3 GetLocalPosByInx(int inx)</span><br><span class="line">    &#123;</span><br><span class="line">        Vector3 pos = Vector3.zero;</span><br><span class="line">        for(int i = 0; i &lt; inx; ++i)</span><br><span class="line">        &#123;   </span><br><span class="line">            Vector2 size = this.GetSizeByInx(i);</span><br><span class="line">            if (this.layout == Layout.Vertical)</span><br><span class="line">            &#123;</span><br><span class="line">                pos.y = pos.y - size.y;</span><br><span class="line">            &#125;</span><br><span class="line">            else if (this.layout == Layout.Horizontal)</span><br><span class="line">            &#123;</span><br><span class="line">                pos.x = pos.x + size.x;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return pos;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private Vector2Int GetStartInxAndEndInx(float min,float max)</span><br><span class="line">    &#123;   </span><br><span class="line">        int startInx = -1;</span><br><span class="line">        int endInx = -1;</span><br><span class="line">        float AreaCellSizeCount = 0;</span><br><span class="line">        for(int i = 0; i &lt; this.dataList.Count; ++i)</span><br><span class="line">        &#123;   </span><br><span class="line">            Vector2 size = this.GetSizeByInx(i);</span><br><span class="line">            if (this.layout == Layout.Vertical)</span><br><span class="line">            &#123;   </span><br><span class="line">                if (max &gt; 0) </span><br><span class="line">                &#123;</span><br><span class="line">                    startInx = 0;</span><br><span class="line">                &#125;</span><br><span class="line">                UIWidget widget = this.content.GetComponent&lt;UIWidget&gt;();</span><br><span class="line">                if (Math.Abs(min) &gt; widget.height) </span><br><span class="line">                &#123;</span><br><span class="line">                    endInx = this.dataList.Count - 1;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                AreaCellSizeCount = AreaCellSizeCount + size.y;</span><br><span class="line">                if (AreaCellSizeCount &gt; Math.Abs(max) &amp;&amp; startInx == -1)</span><br><span class="line">                &#123;</span><br><span class="line">                    startInx = i;</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">                if (AreaCellSizeCount &gt; Math.Abs(min) &amp;&amp; endInx == -1)</span><br><span class="line">                &#123;</span><br><span class="line">                    endInx = i;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            else if (this.layout == Layout.Horizontal)</span><br><span class="line">            &#123;</span><br><span class="line">                </span><br><span class="line">                AreaCellSizeCount = AreaCellSizeCount + size.x;</span><br><span class="line"></span><br><span class="line">                if (AreaCellSizeCount &gt; Math.Abs(max) &amp;&amp; startInx == -1)</span><br><span class="line">                &#123;</span><br><span class="line">                    startInx = i;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                if (AreaCellSizeCount &gt; Math.Abs(min) &amp;&amp; endInx == -1)</span><br><span class="line">                &#123;</span><br><span class="line">                    endInx = i;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            if (startInx != -1 &amp;&amp; endInx != -1)</span><br><span class="line">                break;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return new Vector2Int(startInx,endInx);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private UIItemRender CreateItemRender()</span><br><span class="line">    &#123;</span><br><span class="line">        UIItemRender item = null;</span><br><span class="line">        if (unUseItems.Count &gt; 0)</span><br><span class="line">        &#123;</span><br><span class="line">            item = unUseItems.Dequeue();</span><br><span class="line">            item.gameObject.SetActive(true);</span><br><span class="line">            return item;</span><br><span class="line">        &#125;</span><br><span class="line">        GameObject obj = NGUITools.AddChild(content, itemPrefab);</span><br><span class="line">        item = obj.GetComponent&lt;UIItemRender&gt;();</span><br><span class="line">        if (item == null)</span><br><span class="line">            item = obj.AddComponent&lt;UIItemRender&gt;();</span><br><span class="line">        if (obj.GetComponent&lt;UIDragScrollView&gt;() != null)</span><br><span class="line">            UIEventListener.Get(obj).onPress += OnPressItem;</span><br><span class="line"></span><br><span class="line">        obj.SetActive(true);</span><br><span class="line">        </span><br><span class="line">        return item;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void OnPressItem(GameObject obj, bool isPress)</span><br><span class="line">    &#123;</span><br><span class="line">        if (isPress)</span><br><span class="line">        &#123;</span><br><span class="line">            pressObj = obj;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            if (obj == pressObj)</span><br><span class="line">                pressObj = null;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private bool RecoverItemRender(UIItemRender item)</span><br><span class="line">    &#123;</span><br><span class="line">        bool result = false;</span><br><span class="line">        if (item.gameObject == pressObj &amp;&amp; isDraging)</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            pressObj = null;</span><br><span class="line">            result = true;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        unUseItems.Enqueue(item);</span><br><span class="line">        item.SetSelected(false);</span><br><span class="line">        item.gameObject.SetActive(false);</span><br><span class="line">        return result;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    private void UpdateSize()</span><br><span class="line">    &#123;   </span><br><span class="line">        Vector2 tempSize = Vector2.zero;</span><br><span class="line">        for(int i = 0; i &lt; this.dataList.Count; ++i)</span><br><span class="line">        &#123;   </span><br><span class="line">            Vector2 size = this.GetSizeByInx(i);</span><br><span class="line">            if (this.layout == Layout.Vertical)</span><br><span class="line">            &#123;</span><br><span class="line">                tempSize.x = size.x;</span><br><span class="line">                tempSize.y = tempSize.y + size.y;</span><br><span class="line">            &#125;</span><br><span class="line">            else if (this.layout == Layout.Horizontal)</span><br><span class="line">            &#123;</span><br><span class="line">                tempSize.x = tempSize.x + size.x;</span><br><span class="line">                tempSize.y = size.y;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        UIWidget widget = this.content.GetComponent&lt;UIWidget&gt;();</span><br><span class="line">        widget.SetDimensions(Mathf.FloorToInt(tempSize.x), Mathf.FloorToInt(tempSize.y));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void UpdateView()</span><br><span class="line">    &#123;   </span><br><span class="line">        this.Init();</span><br><span class="line">        this.UpdateSize();</span><br><span class="line"></span><br><span class="line">        Vector3[] corners = mPanel.worldCorners;</span><br><span class="line">        for (int i = 0; i &lt; 4; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            Vector3 v = corners[i];</span><br><span class="line">            v = this.content.transform.InverseTransformPoint(v);</span><br><span class="line">            corners[i] = v;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        float min = 0;</span><br><span class="line">        float max = 0;</span><br><span class="line">        int tmpSizeH = 100;</span><br><span class="line">        int tmpSizeW = 100;</span><br><span class="line">        int maxInx = 0;</span><br><span class="line">        int startInx = 0;</span><br><span class="line">        int endInx = 0;</span><br><span class="line"></span><br><span class="line">        if (this.layout == Layout.Vertical)</span><br><span class="line">        &#123;</span><br><span class="line">            min = corners[0].y;</span><br><span class="line">            max = corners[2].y;</span><br><span class="line">            max += tmpSizeH;</span><br><span class="line">            min -= tmpSizeH;</span><br><span class="line">            min = Mathf.Min(0, min);</span><br><span class="line">            max = Mathf.Min(0, max);</span><br><span class="line">            maxInx = Mathf.Max(0, this.dataList.Count - 1);</span><br><span class="line">            tmpSizeW = 0;</span><br><span class="line"></span><br><span class="line">            Vector2Int tempInx = this.GetStartInxAndEndInx(min,max);</span><br><span class="line">            startInx = tempInx.x;</span><br><span class="line">            endInx = tempInx.y;</span><br><span class="line">            startInx = Mathf.Min(startInx, maxInx);</span><br><span class="line">            endInx = Mathf.Min(endInx, maxInx);</span><br><span class="line">        &#125;</span><br><span class="line">        else if (this.layout == Layout.Horizontal)</span><br><span class="line">        &#123;</span><br><span class="line">            min = corners[0].x;</span><br><span class="line">            max = corners[2].x;</span><br><span class="line">            max += tmpSizeW;</span><br><span class="line">            min -= tmpSizeW;</span><br><span class="line">            min = Mathf.Max(0, min);</span><br><span class="line">            max = Mathf.Max(0, max);</span><br><span class="line">            maxInx = Mathf.Max(0, this.dataList.Count - 1);</span><br><span class="line">            tmpSizeH = 0;</span><br><span class="line"></span><br><span class="line">            Vector2Int tempInx = this.GetStartInxAndEndInx(min,max);</span><br><span class="line">            startInx = tempInx.x;</span><br><span class="line">            endInx = tempInx.y;</span><br><span class="line">            startInx = Mathf.Min(startInx, maxInx);</span><br><span class="line">            endInx = Mathf.Min(endInx, maxInx);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        int count = this.dataList.Count;</span><br><span class="line">        Dictionary&lt;int, UIItemRender&gt;.Enumerator enumerator = this.dirCurItems.GetEnumerator();</span><br><span class="line">        bool recoverFocus = false;</span><br><span class="line">        while (enumerator.MoveNext())</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            int key = enumerator.Current.Key;</span><br><span class="line">            if (count &gt; 0 &amp;&amp; key &gt;= startInx &amp;&amp; key &lt;= endInx)</span><br><span class="line">            &#123;</span><br><span class="line">                this.tmpDic2[key] = enumerator.Current.Value;</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                bool tmp = this.RecoverItemRender(enumerator.Current.Value);</span><br><span class="line">                if (tmp)</span><br><span class="line">                    recoverFocus = true;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        this.dirCurItems.Clear();</span><br><span class="line">        Dictionary&lt;int, UIItemRender&gt; tmpDic = null;</span><br><span class="line">        tmpDic = dirCurItems;</span><br><span class="line">        dirCurItems = tmpDic2;</span><br><span class="line">        tmpDic2 = tmpDic;</span><br><span class="line"></span><br><span class="line">        if (count &gt; 0 &amp;&amp; startInx &gt;= 0)</span><br><span class="line">        &#123;</span><br><span class="line">            </span><br><span class="line">            for (int i = startInx; i &lt;= endInx; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                UIItemRender item = null;</span><br><span class="line">                Vector3 position = this.GetLocalPosByInx(i);</span><br><span class="line">                if (!this.dirCurItems.TryGetValue(i, out item))</span><br><span class="line">                &#123;</span><br><span class="line">                    item = this.CreateItemRender();</span><br><span class="line">                    item.__index = i;</span><br><span class="line">                    this.dirCurItems[i] = item;</span><br><span class="line">                    item.SetData(this.dataList[i]);</span><br><span class="line">                &#125;</span><br><span class="line">                item.gameObject.name = i.ToString();</span><br><span class="line">                item.transform.localPosition = position;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        if (recoverFocus)</span><br><span class="line">            this.mScrollView.Press(false);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>第二版</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">using UnityEngine;</span><br><span class="line">using UnityEngine.UI;</span><br><span class="line">using System.Collections;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System;</span><br><span class="line">using LuaInterface;</span><br><span class="line"></span><br><span class="line">// public enum Layout</span><br><span class="line">// &#123;</span><br><span class="line">//     Vertical,</span><br><span class="line">//     Horizontal</span><br><span class="line">// &#125;</span><br><span class="line"></span><br><span class="line">/// &lt;summary&gt;</span><br><span class="line">///	无限Item列表</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">public class UIDictListView : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    public  Layout 				layout;</span><br><span class="line">    public  Vector2				spacing;</span><br><span class="line">    public  GameObject          itemPrefab;</span><br><span class="line">    private Vector3				panelDefaultPos;</span><br><span class="line">    private Vector2             panelDefaultClipOffset;</span><br><span class="line">    private UIPanel             mPanel;</span><br><span class="line">    public  UIScrollView 		mScrollView;</span><br><span class="line">    private UIItemRender        itemRender = null;</span><br><span class="line">    private bool				initialized = false;</span><br><span class="line">    private GameObject		    content;</span><br><span class="line">    private Vector2			    scrollRectSize;</span><br><span class="line">    public  bool                bBackLoad = false;</span><br><span class="line">    public  bool                isCheackBackLoad = false;      </span><br><span class="line">    public  List&lt;object&gt;        dataList = new List&lt;object&gt;();</span><br><span class="line">    private List&lt;UIItemRender&gt;	lstItems = new List&lt;UIItemRender&gt;();</span><br><span class="line">    private GameObject          pressObj;</span><br><span class="line">    private bool isDraging      = false;</span><br><span class="line">    float svLastPos = 0;        //记录scrollviet上一次的位置，用于判断scrollview的移动方向</span><br><span class="line"></span><br><span class="line">    void Awake()</span><br><span class="line">    &#123;</span><br><span class="line">        this.Init();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void Init()</span><br><span class="line">    &#123;   </span><br><span class="line"></span><br><span class="line">        if (initialized)</span><br><span class="line">            return;</span><br><span class="line">        initialized = true;</span><br><span class="line"></span><br><span class="line">        mPanel = NGUITools.FindInParents&lt;UIPanel&gt;(gameObject);</span><br><span class="line">        this.mScrollView = mPanel.GetComponent&lt;UIScrollView&gt;();</span><br><span class="line">        this.mPanel.onClipMove += OnUIPanelClipMove;</span><br><span class="line">        this.panelDefaultPos = mPanel.transform.localPosition;</span><br><span class="line">        this.panelDefaultClipOffset = mPanel.clipOffset;</span><br><span class="line"></span><br><span class="line">        // record some sizes</span><br><span class="line">        scrollRectSize = mPanel.GetViewSize();</span><br><span class="line"></span><br><span class="line">        // add a scrollrect content</span><br><span class="line">        GameObject go = new GameObject ();</span><br><span class="line">		go.name = &quot;content&quot;;</span><br><span class="line">        go.transform.SetParent(transform);</span><br><span class="line">        </span><br><span class="line">        UIWidget uiwidget = go.AddComponent&lt;UIWidget&gt;();</span><br><span class="line">        uiwidget.SetDimensions((int)scrollRectSize.x,(int)scrollRectSize.y);</span><br><span class="line">        go.transform.localPosition = Vector3.zero;</span><br><span class="line">        go.transform.localScale = Vector3.one;</span><br><span class="line">        this.content = go;</span><br><span class="line"></span><br><span class="line">        //itemPrefab</span><br><span class="line">        GameObject item = GameObject.Instantiate(itemPrefab) as GameObject;</span><br><span class="line">        item.transform.SetParent(mPanel.transform.parent);</span><br><span class="line">        item.transform.localPosition = new Vector3(1500, 1500, 1);</span><br><span class="line">        itemRender = item.GetComponent&lt;UIItemRender&gt;();</span><br><span class="line">        if (itemRender == null)</span><br><span class="line">            itemRender = item.AddComponent&lt;UIItemRender&gt;();</span><br><span class="line"></span><br><span class="line">        this.mScrollView.onDragStarted += delegate ()</span><br><span class="line">        &#123;</span><br><span class="line">            this.isDraging = true;</span><br><span class="line">        &#125;;</span><br><span class="line">        this.mScrollView.onDragFinished += delegate ()</span><br><span class="line">        &#123;</span><br><span class="line">            this.isDraging = false;</span><br><span class="line">            this.pressObj = null;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void AddData(object obj)</span><br><span class="line">    &#123;</span><br><span class="line">        this.dataList.Add(obj);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void InsertData(object data,int inx)</span><br><span class="line">    &#123;</span><br><span class="line">        this.dataList.Insert(inx, data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void ClearAll()</span><br><span class="line">    &#123;</span><br><span class="line">        this.dataList.Clear();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void UpdateNow()</span><br><span class="line">    &#123;</span><br><span class="line">        this.Init();</span><br><span class="line">        this.AutoContentPivot();</span><br><span class="line">        this.UpdateView();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void ClearAllItems()</span><br><span class="line">    &#123;</span><br><span class="line">        var enumerator = this.lstItems.GetEnumerator();</span><br><span class="line">        while (enumerator.MoveNext())</span><br><span class="line">        &#123;   </span><br><span class="line">            Destroy(enumerator.Current.gameObject);</span><br><span class="line">        &#125;</span><br><span class="line">        this.lstItems.Clear();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public bool CheckBackLoad(LuaTable table)</span><br><span class="line">    &#123;   </span><br><span class="line">        List&lt;LuaTable&gt; tableList = LuaTools.GetLuaTableToList&lt;LuaTable&gt;(table);</span><br><span class="line">        float containerH = 0;</span><br><span class="line">        for(int i = 0; i &lt; tableList.Count; ++i)</span><br><span class="line">        &#123;   </span><br><span class="line">            itemRender.SetData(tableList[i]);</span><br><span class="line">            UIWidget itemWidget = itemRender.GetComponent&lt;UIWidget&gt;();</span><br><span class="line">            containerH = containerH + itemWidget.height;</span><br><span class="line">            // 初始布局,最多保证可隐藏的区域大于显示区域就可以了</span><br><span class="line">            if (containerH &gt; (scrollRectSize.y))</span><br><span class="line">            &#123;</span><br><span class="line">                return true;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void AutoContentPivot()</span><br><span class="line">    &#123;   </span><br><span class="line">        this.ClearAllItems();</span><br><span class="line">        </span><br><span class="line">        // 设置锚点</span><br><span class="line">        UIWidget contentWidget = this.content.GetComponent&lt;UIWidget&gt;();</span><br><span class="line">        contentWidget.SetDimensions((int)scrollRectSize.x,(int)scrollRectSize.y);</span><br><span class="line">        if(bBackLoad)</span><br><span class="line">        &#123;</span><br><span class="line">            mPanel.transform.localPosition = this.panelDefaultPos - new Vector3(0,scrollRectSize.y - 1, 0);</span><br><span class="line">            mPanel.clipOffset = this.panelDefaultClipOffset + new Vector2(0,scrollRectSize.y - 1);</span><br><span class="line"></span><br><span class="line">            this.mScrollView.contentPivot = UIWidget.Pivot.BottomLeft;</span><br><span class="line">            contentWidget.pivot = UIWidget.Pivot.BottomLeft;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            mPanel.transform.localPosition = this.panelDefaultPos;</span><br><span class="line">            mPanel.clipOffset = this.panelDefaultClipOffset;</span><br><span class="line"></span><br><span class="line">            this.mScrollView.contentPivot = UIWidget.Pivot.TopLeft;</span><br><span class="line">            contentWidget.pivot = UIWidget.Pivot.TopLeft;</span><br><span class="line">        &#125;</span><br><span class="line">        this.content.transform.localPosition = Vector3.zero;</span><br><span class="line">        this.content.transform.localScale = Vector3.one;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void OnUIPanelClipMove(UIPanel panel)</span><br><span class="line">    &#123;   </span><br><span class="line">        Vector3 delta = panelDefaultPos - panel.transform.localPosition;</span><br><span class="line">        float distance = delta.y;</span><br><span class="line"></span><br><span class="line">        float moveDis = this.mScrollView.transform.localPosition.y - svLastPos;</span><br><span class="line">        if (Mathf.Abs(moveDis) &gt; 0.05 &amp;&amp; lstItems.Count &gt; 0)</span><br><span class="line">        &#123;</span><br><span class="line">            bool isup = moveDis &gt; 0;</span><br><span class="line">            if (isup)</span><br><span class="line">            &#123;</span><br><span class="line">                if(bBackLoad)</span><br><span class="line">                &#123;</span><br><span class="line">                    float height = lstItems[lstItems.Count - 1].GetComponent&lt;UIWidget&gt;().height;</span><br><span class="line">                    while (lstItems[lstItems.Count - 1].transform.localPosition.y - height &gt; distance &amp;&amp;</span><br><span class="line">                        lstItems[0].__index &gt; 0)</span><br><span class="line">                    &#123;</span><br><span class="line">                        UIItemRender  itemRender = lstItems[lstItems.Count - 1];</span><br><span class="line">                        int idx = lstItems[0].__index - 1;</span><br><span class="line">                        itemRender.SetData(dataList[idx]);</span><br><span class="line">                        itemRender.__index = idx;</span><br><span class="line">                        itemRender.gameObject.name = idx.ToString();</span><br><span class="line"></span><br><span class="line">                        lstItems.Insert(0, itemRender);</span><br><span class="line">                        lstItems.RemoveAt(lstItems.Count - 1);</span><br><span class="line"></span><br><span class="line">                        UIItemRender  tempRender = lstItems[1];</span><br><span class="line">                        float _height = tempRender.GetComponent&lt;UIWidget&gt;().height;         //锚点左上角所以加itemRender height</span><br><span class="line">                        itemRender.transform.localPosition = tempRender.transform.localPosition - new Vector3(0, _height, 0);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                else</span><br><span class="line">                &#123;</span><br><span class="line">                    float height = lstItems[0].GetComponent&lt;UIWidget&gt;().height;</span><br><span class="line">                    while (lstItems[0].transform.localPosition.y - height &gt; distance &amp;&amp;</span><br><span class="line">                       lstItems[lstItems.Count - 1].__index &lt; dataList.Count - 1)</span><br><span class="line">                    &#123;</span><br><span class="line">                        UIItemRender  itemRender = lstItems[0];</span><br><span class="line">                        int idx = lstItems[lstItems.Count - 1].__index + 1;</span><br><span class="line">                        itemRender.SetData(dataList[idx]);</span><br><span class="line">                        itemRender.__index = idx;</span><br><span class="line">                        itemRender.gameObject.name = idx.ToString();</span><br><span class="line"></span><br><span class="line">                        lstItems.Add(itemRender);</span><br><span class="line">                        lstItems.RemoveAt(0);</span><br><span class="line"></span><br><span class="line">                        </span><br><span class="line">                        UIItemRender  tempRender = lstItems[lstItems.Count - 2];</span><br><span class="line">                        float _height = tempRender.GetComponent&lt;UIWidget&gt;().height;         //锚点左上角所以加tempRender height</span><br><span class="line">                        itemRender.transform.localPosition = tempRender.transform.localPosition - new Vector3(0, _height, 0);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                if(bBackLoad)</span><br><span class="line">                &#123;</span><br><span class="line">                    float height = lstItems[0].GetComponent&lt;UIWidget&gt;().height;</span><br><span class="line">                    distance = distance - scrollRectSize.y;</span><br><span class="line">                    while (distance &gt; lstItems[0].transform.localPosition.y &amp;&amp;</span><br><span class="line">                       lstItems[lstItems.Count - 1].__index &lt; dataList.Count - 1)</span><br><span class="line">                    &#123;</span><br><span class="line">                        UIItemRender  itemRender = lstItems[0];</span><br><span class="line">                        int idx = lstItems[lstItems.Count - 1].__index + 1;</span><br><span class="line">                        itemRender.SetData(dataList[idx]);</span><br><span class="line">                        itemRender.__index = idx;</span><br><span class="line">                        itemRender.gameObject.name = idx.ToString();</span><br><span class="line"></span><br><span class="line">                        lstItems.Add(itemRender);</span><br><span class="line">                        lstItems.RemoveAt(0);</span><br><span class="line"></span><br><span class="line">                        </span><br><span class="line">                        UIItemRender  tempRender = lstItems[lstItems.Count - 2];</span><br><span class="line">                        float _height = itemRender.GetComponent&lt;UIWidget&gt;().height;         //锚点左上角所以加tempRender height</span><br><span class="line">                        itemRender.transform.localPosition = tempRender.transform.localPosition + new Vector3(0, _height, 0);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                else</span><br><span class="line">                &#123;</span><br><span class="line">                    float height = lstItems[lstItems.Count - 1].GetComponent&lt;UIWidget&gt;().height;</span><br><span class="line">                    float temp = Mathf.Abs(distance) + scrollRectSize.y;</span><br><span class="line">                    while (lstItems[lstItems.Count - 1].transform.localPosition.y &lt; - temp &amp;&amp;</span><br><span class="line">                        lstItems[0].__index &gt; 0)</span><br><span class="line">                    &#123;</span><br><span class="line"></span><br><span class="line">                        UIItemRender  itemRender = lstItems[lstItems.Count - 1];</span><br><span class="line">                        int idx = lstItems[0].__index - 1;</span><br><span class="line">                        itemRender.SetData(dataList[idx]);</span><br><span class="line">                        itemRender.__index = idx;</span><br><span class="line">                        itemRender.gameObject.name = idx.ToString();</span><br><span class="line"></span><br><span class="line">                        lstItems.Insert(0, itemRender);</span><br><span class="line">                        lstItems.RemoveAt(lstItems.Count - 1);</span><br><span class="line"></span><br><span class="line">                        UIItemRender  tempRender = lstItems[1];</span><br><span class="line">                        float _height = itemRender.GetComponent&lt;UIWidget&gt;().height;         //锚点左上角所以加itemRender height</span><br><span class="line">                        itemRender.transform.localPosition = tempRender.transform.localPosition + new Vector3(0, _height, 0);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">            svLastPos = this.mScrollView.transform.localPosition.y;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private UIItemRender loadOneItem()</span><br><span class="line">    &#123;   </span><br><span class="line">        GameObject item = GameObject.Instantiate(itemPrefab) as GameObject;</span><br><span class="line">        UIItemRender itemRender = item.GetComponent&lt;UIItemRender&gt;();</span><br><span class="line">        item.transform.SetParent(this.content.transform);</span><br><span class="line">        item.transform.localScale = Vector3.one;</span><br><span class="line"></span><br><span class="line">        lstItems.Add(itemRender);</span><br><span class="line">        return itemRender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void UpdateView()</span><br><span class="line">    &#123;   </span><br><span class="line">        svLastPos = 0;</span><br><span class="line">        this.ClearAllItems();</span><br><span class="line">        float containerH = 0;</span><br><span class="line"></span><br><span class="line">        Vector3 itemPosition = Vector3.zero;</span><br><span class="line">        for(int i = 0; i &lt; dataList.Count; ++i)</span><br><span class="line">        &#123;   </span><br><span class="line">            UIItemRender itemRender = this.loadOneItem();</span><br><span class="line">            itemRender.SetData(dataList[i]);</span><br><span class="line">            itemRender.__index = i;</span><br><span class="line">            itemRender.gameObject.name = i.ToString();</span><br><span class="line"></span><br><span class="line">            UIWidget widget = itemRender.GetComponent&lt;UIWidget&gt;();</span><br><span class="line">            if(bBackLoad)</span><br><span class="line">            &#123;</span><br><span class="line">                containerH = containerH + widget.height;        // 锚点在左上所以位置不是从0开始</span><br><span class="line">                itemPosition.y = itemPosition.y + widget.height;</span><br><span class="line">                itemRender.transform.localPosition = new Vector3(0,itemPosition.y, 0);</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                itemRender.transform.localPosition = new Vector3(0,itemPosition.y, 0);</span><br><span class="line">                containerH = containerH + widget.height;</span><br><span class="line">                itemPosition.y = itemPosition.y - widget.height;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            // 初始布局,最多保证可隐藏的区域大于显示区域就可以了</span><br><span class="line">            if (containerH &gt; (scrollRectSize.y * 1.5f))</span><br><span class="line">            &#123;</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>造轮子</category>
      </categories>
      <tags>
        <tag>U3D</tag>
        <tag>轮子</tag>
      </tags>
  </entry>
  <entry>
    <title>吃人且崇尚祭祀的商朝是怎么完蛋的</title>
    <url>/2023/10/17/%E6%95%85%E4%BA%8B%E4%BC%9A/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84/</url>
    <content><![CDATA[<h1 id="吃人且崇尚祭祀的商朝是怎么完蛋的"><a href="#吃人且崇尚祭祀的商朝是怎么完蛋的" class="headerlink" title="吃人且崇尚祭祀的商朝是怎么完蛋的"></a>吃人且崇尚祭祀的商朝是怎么完蛋的</h1><p>2023年2月7日</p>
<p><a href="http://www.cbyxs.com/archives/105227#respond">0</a></p>
<p>116</p>
<p>文章原来的标题是《周灭商与华夏新生》，原作者李硕，载于《读库1205》。由于不是我自己写的，所以就不开评论了。文章很长，可以收藏起来慢慢看，希望大家喜欢。</p>
<p><strong>上篇</strong></p>
<p><strong>文王八卦</strong></p>
<p>据说周文王在忍痛吃掉了儿子的肉之后，才被商纣释放。这似乎流于野史传说。但在商人的殷墟遗存和甲骨文献里，这种行为再平常不过……</p>
<p>公元前一千余年，《旧约》中以色列大卫王之世，《封神演义》的传说时代。正当壮年的商纣王君临“天下”，统治着亚欧大陆最东端的华北平原。</p>
<p><a href="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84.jpg"><img src="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84.jpg?resize=655,585" alt="吃人且崇尚祭祀的商朝是怎么完蛋的"></a></p>
<p>▲<strong>商朝形势图</strong></p>
<p>此时的周文王，只是一个远在西陲（今天陕西）的小小部族酋长。好几代人以来，周族都臣服于商朝。文王周昌已经年过五旬，在那个年代已经是十足的老人，且又痴迷于怪异的八卦占卜，更给这个撮尔小邦笼罩了沉沉暮气。</p>
<p>一支商军突然开到西部，逮捕了周昌，将他押解往商朝都城——朝歌。这是商人一次惯常的惩戒征讨。数百年来，商王对于他征服之下的数百个邦国、部族，都是这样维持统治的。</p>
<p>这次的结果却迥然不同。</p>
<p><strong>尘封梦魇</strong></p>
<p>三千年后的今天，河南安阳殷墟，黄土掩埋着殷商王朝最后的都城：朝歌。</p>
<p><a href="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-1.jpg"><img src="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-1.jpg?resize=360,260" alt="吃人且崇尚祭祀的商朝是怎么完蛋的"></a></p>
<p>▲<strong>河南安阳殷墟</strong></p>
<p>一个世纪以来，考古学者在这里发掘出了数量惊人的被残杀的尸骸，一起出土的甲骨文显示，他们死于商人血腥的祭祀典礼。累累骸骨告诉世人：这里掩埋了被忘却的血腥文明，梦魇般恐怖而悠长的岁月。</p>
<p>在殷墟一座宫殿旁边，发掘出一百多座杀人祭祀坑，被杀人骨近六百具。这些尸骨大都身、首分离，是砍头之后被乱扔到坑里。两个坑内还埋着十七具惨死的幼童。这座宫殿奠基时也伴随着杀人祭祀：所有的柱子下面都夯筑了一具尸骨；大门则建造在十五个人的遗骨之上，其中三人只有头颅。</p>
<p><a href="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-2.jpg"><img src="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-2.jpg?resize=600,385" alt="吃人且崇尚祭祀的商朝是怎么完蛋的"></a></p>
<p>▲<strong>1930年代殷墟发掘时的照片</strong></p>
<p>商王陵墓区有一座人祭场，比操场大两倍以上，出土近3500具人骨，分别埋在九百多个祭祀坑中。尸骸很多身首异处，有些坑中只埋头骨，或者只埋身躯，甚至是在挣扎中被掩埋的活人。王陵区之外也有人祭现场。比如后岗一座坑内，埋着73具被杀者的骨骸，大都是20岁以下的男性青少年，甚至有十多具幼儿的尸骨。商人文化所到之处，如河南偃师、郑州的商代早期遗址，甚至东南到江苏铜山，也都有大型人祭场的遗址。</p>
<p>多年的自然变迁和人工已经破坏殷墟遗址，整个商朝共有过多少这样的人祭现场，就无法确知了。这些遗址时代早晚不同，说明人祭的做法曾延续了很多年。它绝不是某位暴君心血来潮的产物，而是一个文明的常态。</p>
<p>但在被考古学家的铲子揭露之前，中国古史文献从来没有提及商人的这种习俗。</p>
<p><a href="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-3.jpg"><img src="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-3.jpg?resize=696,463" alt="吃人且崇尚祭祀的商朝是怎么完蛋的"></a></p>
<p>▲<strong>安阳殷墟王陵遗址内的祭祀坑</strong></p>
<p>文王之子——周武王灭商之后，朝歌城被废弃、掩埋，商人的这种风俗也消散如云烟。但周朝人又为什么删除了对那个血腥时代的记忆？这和他们的兴起、灭商、建立周朝又有什么关系？</p>
<p>甲骨文和考古发掘向我们提出了这些问题。如果尝试解答它，还必须从上古的儒家经书、古史文献中，搜罗吉光片羽般珍稀飘渺的信息，将它们和考古材料拼合，还原那湮没三千年的恶梦——不，事实。</p>
<p><a href="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-4.jpg"><img src="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-4.jpg?resize=696,463" alt="吃人且崇尚祭祀的商朝是怎么完蛋的"></a></p>
<p>▲<strong>安阳殷墟王陵遗址内的车马坑</strong></p>
<p><strong>商朝和它的臣虏：羌、周</strong></p>
<p>商人兴起于东方。他们统治的核心区在今日河南省东北部，属于华夏世界的东方。对于西部的异族，商人称之为“羌”，甲骨文这个字形如大角羊头，代表居住在山地、放牧牛羊为生的人群。这只是一个泛称，“羌”人包含着无数互不统属的松散族邦、部落。</p>
<p><a href="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-5.jpg"><img src="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-5.jpg?resize=213,182" alt="吃人且崇尚祭祀的商朝是怎么完蛋的"></a></p>
<p>▲<strong>甲骨文中“羌”的三种写法</strong></p>
<p>商纣王之前二百年，一位商王的王后“妇好”率军征讨西方，把商朝的势力扩张到羌人地区。那次远征在甲骨文献中的规模最大，全军有一万三千人。和西部蛮族相比，商人有先进的青铜冶炼技术，兵器坚固锋利；他们还有记录语言的独特技术：文字，由此组建起庞大军事和行政机器，以及高度分工的文明。这都是蛮荒部族无法想象的。</p>
<p><a href="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-6.jpg"><img src="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-6.jpg?resize=400,270" alt="吃人且崇尚祭祀的商朝是怎么完蛋的"></a></p>
<p>▲<strong>妇好墓</strong></p>
<p><a href="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-7.jpg"><img src="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-7.jpg?resize=696,418" alt="吃人且崇尚祭祀的商朝是怎么完蛋的"></a></p>
<p>▲<strong>妇好率领一万三千军队伐羌方的卜甲：</strong></p>
<p><strong>辛巳卜，贞，登妇好三千登旅万，呼伐（羌）</strong></p>
<p>商人从没有用自己的文化改变蛮夷的想法。他们只想保持军事征服。商王习惯带着军队巡游边疆，用武力威慑周边小邦，让他们保持臣服，必要时则进行杀鸡儆猴式的惩戒战争。商朝的本土并不比今天的一个河南省大太多。</p>
<p>对于“周”这个西方部族，商人有点说不清它的来历，因为它太渺小了。周人史诗讲述了自己的早期历史，也混杂了大量神话。传说周族始祖是一位叫“姜嫄”的女子，她在荒野里踩到了巨人的足迹，怀孕生子后稷，繁衍出了周人氏族。商周语言中，姜就是羌，所以周人也属于广义的羌人，他们形成部族后，才给自己冠以“姬”姓，而把周围其他部族称为“姜”姓。这标志着他们之间的血缘关系已经疏远，可以相互通婚。按照西方的风俗，同姓、同族的人不能通婚。</p>
<p>到文王周昌的祖父——古公亶父一代人，才有了比较可靠的记载。周人原来生活在深山之中，和野蛮民族（其实就是他们的近亲羌人）没什么区别。古公亶父带着族人迁出深山，沿着一条小河来到渭河平原的边缘，开始进行农业垦殖，从此脱离野蛮，进入了一种更“文明”的生活方式。</p>
<p>这些史诗掺入了周人的自我夸耀，只是部分可靠。从考古发掘看，这个时期关中渭河流域的文明形态都差不多，各族邦都不过几千或万余人，过着种植谷子、高粱，饲养牛羊的生活。他们最主要的农具是磨制石器，居家使用粗糙的灰陶，上层族长才有一点外地输入的奢侈品，比如玉器和铜器。周人并不比羌人邻居们“文明”多少。在商人眼里，他们都同样落后，根本不是值得尊敬的对手。</p>
<p>古公亶父带给周族的最大变化，是他投靠了强大的商王朝，成为商人在远西地区的统治代理人。</p>
<p><a href="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-8.jpg"><img src="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-8.jpg?resize=450,184" alt="吃人且崇尚祭祀的商朝是怎么完蛋的"></a></p>
<p>▲<strong>铜戈</strong></p>
<p><strong>河南安阳小屯村殷墟妇好墓出土</strong></p>
<p><a href="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-9.jpg"><img src="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-9.jpg?resize=299,434" alt="吃人且崇尚祭祀的商朝是怎么完蛋的"></a></p>
<p>▲<strong>铜圆斝</strong></p>
<p><strong>河南安阳小屯村殷墟妇好墓出土</strong></p>
<p><a href="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-10.jpg"><img src="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-10.jpg?resize=450,371" alt="吃人且崇尚祭祀的商朝是怎么完蛋的"></a></p>
<p>▲<strong>妇好铜圈足觥</strong></p>
<p><strong>河南安阳小屯村殷墟妇好墓出土</strong></p>
<p><a href="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-11.jpg"><img src="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-11.jpg?resize=398,427" alt="吃人且崇尚祭祀的商朝是怎么完蛋的"></a></p>
<p>▲<strong>妇好方鼎</strong></p>
<p><strong>河南安阳小屯村殷墟妇好墓出土</strong></p>
<p>在彼时，周族不过是个万余人的小部族，对统治着数百万人口的庞大商朝有何用处？</p>
<p>正如殷墟考古发掘所揭示，商人相信，上帝和祖先神灵主宰着人世间的一切祸福，而异族人的血肉，则是奉献给上帝和祖先的最好礼物——甲骨文中的“祭”字，就是一只手拿着肉块奉献于祭台。他们祭祀用人最主要的来源，就是羌人。甲骨文的人祭记载中，羌人占了被杀者的一大半。他们被称作“人牲”。</p>
<p><a href="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-12.jpg"><img src="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-12.jpg?resize=108,128" alt="吃人且崇尚祭祀的商朝是怎么完蛋的"></a></p>
<p>▲<strong>甲骨文“祭”</strong></p>
<p>亶父带领周族投靠商人之后，最主要的职责就是为商朝提供羌族人牲。这是被后来周人刻意掩埋、忘却的历史，但出土甲骨文泄露了一点信息。</p>
<p>周族自己没有文字。甲骨文“周”字是商人所造。商人对杀人献祭有一个专门的动词：“用”。无数片关于祭祀的甲骨文都记载，商王“用”羌人男女和牛羊奉献神灵。甲骨文中的“周”，是“用”和“口”两个字的合写；《说文解字》对“周”字的解释也是“从用、从口”——在商人看来，“周”族特征，就是缴纳供“用”的人口。</p>
<p>商人的“周”字还有一种更可怕的写法：“用”字的小方格中点满了点。甲骨文这种点代表鲜血，它来自被杀的人牲，是神明最新鲜的饮食。甲骨文还有专门描绘用鲜血献祭的字：一座凸起的祭台上，用点表示的血液正在淋漓滴沥下来。</p>
<p><a href="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-13.jpg"><img src="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-13.jpg?resize=400,603" alt="吃人且崇尚祭祀的商朝是怎么完蛋的"></a></p>
<p>▲<strong>刻辞卜甲</strong></p>
<p><strong>殷墟博物馆藏</strong></p>
<p>从血缘关系讲，古公亶父和周人的这种行为，是对家乡族人的无耻背叛。靠着捕猎羌人，周族成了商朝在西方的血腥代理人，也得到了相应的报酬。锋利的铜兵器可以帮助他们捕获猎物；商人马拉战车的军事技术，可能也在这个时候输入了周族。</p>
<p>亶父以来三代人、近百年时间里，周人都在努力趋附商朝。按照传统婚俗，周族首领应当隔代迎娶姜姓的夫人。亶父的夫人就来自羌人，说明在他当年结婚时还没有背弃西方盟族。但他的儿子季历、孙子周昌（文王），两代人都是从东方迎娶夫人，这表明了他们投靠商朝的姿态。</p>
<p>周人宣称这两位夫人都是商人，甚至是商王之女。这只是他们对周边羌人的吹嘘。商人实行族内婚，严密保护着自己高贵血统的纯洁性，绝对不会将王室之女嫁给远方蛮夷。商人的姓是“子”，而季历和周昌的两位夫人，分别姓“任”和“姒”，她们只是来自臣服于商的外围小国而已。不过任、姒两位夫人的母国，还是比周人先进的多。在周人眼里，她们俨然是从天界下凡的女神一般，后世史诗中充满了对她们的歌颂声，甚至称她们为“大任”、“大姒”（《诗经·大雅·思齐》、《史记·周本纪》）。</p>
<p>两代东方新娘给周族上层带来了巨大变化。丈夫可以不懂妻子家族的语言，但母亲必然会全面影响儿子一代。东方文化随她们来到西部，最神秘、“先进”的当属甲骨占卜之术，它融合文字、占算和沟通鬼神的通灵术于一身，被商人发挥到了极致。其中，对卜骨纹路进行解读和运算的部分属于“八卦”。到文王周昌老年时，开始痴迷于这种来自东方的神秘运算技术。由此，周人和古中国的命运开始发生转折。</p>
<p><a href="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-14.jpg"><img src="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-14.jpg?resize=500,342" alt="吃人且崇尚祭祀的商朝是怎么完蛋的"></a></p>
<p><strong>文王野心：八卦</strong></p>
<p>文王周昌年幼时就继承了族长之位。实际上，他的父亲季历很可能早夭而没有当过族长。季历的妻子、周昌的母亲大任来自东方，商朝显然支持幼年周昌继任周族之长。他成年后继续从东方迎娶妻子大姒，也是沿袭祖父亶父以来投靠商朝的政策，同时保障自己的权威。</p>
<p>掌握甲骨占卜和八卦推算技术的，都是巫师家族，他们世代传承此职，将其作为家传绝技秘不示人。后世人传说，周文王在被商纣囚禁期间，将八卦推衍为六十四卦，这种说法也许有一定来历，但周昌接触和演算八卦的开端肯定更早。可以想象，当老年周昌对“八卦”发生兴趣后，肯定对占卜师软硬兼施，采用了各种手段，终于迫使他们交待出了卦象运算原理。</p>
<p><a href="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-15.jpg"><img src="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-15.jpg?resize=614,618" alt="吃人且崇尚祭祀的商朝是怎么完蛋的"></a></p>
<p>商、周时代，偶或有沉迷占卜之术的上层人士，但老年周昌的惊人之举，就是从中获得了背叛商朝、取而代之的启示。这显然远远超出了作为商人臣属的本分，而且背离了自祖父亶父以来的立国之本。</p>
<p>周昌究竟是如何推衍、论证的，现在已经不得而知。但现存《周易》中的《彖辞》部分，据说就是文王周昌所作，其中有些语言确实显露出不臣之心，比如“宜建侯”、“履帝位”、“建侯行师”这类语言，已经明显超出了臣子本分，充满反逆杀机（屯、履、豫卦）。</p>
<p>多个卦的《彖辞》都显示，“东北丧朋、西南得朋”。东北方不利而机会在西南。商人统治中心河北，正是周人的东北方，这无疑预示着和商王决裂之机已到，需要联络西部羌人、甚至西南方深山的各族为同盟军。而后来武王灭商时，西南民族蜀、髳、微等确实参战（坤、蹇、解卦）；文王《彖辞》中出现最多的，是“利涉大川”一词——从关中到商都朝歌，必须渡过黄河，习惯山居的周人不习水性，这显然是老年周昌最关心的问题（需、讼、同人、蛊、大畜、益、鼎、涣、中孚等卦）。</p>
<p>沉溺在卦象演算中的周昌忽视了一点：他求教的占卜师来自商人控制的东方，他们和故乡的同行有密切联系。周人老族长的不臣之心，完全有可能通过占卜师的通信网传向朝歌，而商朝首席祭司又是商王的心腹。于是，商朝军队带走了老周昌。</p>
<p><a href="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-16.jpg"><img src="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-16.jpg?resize=696,388" alt="吃人且崇尚祭祀的商朝是怎么完蛋的"></a></p>
<p>▲<strong>卜骨 商 武丁时期</strong></p>
<p><strong>传河南安阳小屯出土</strong></p>
<p><strong>中国国家博物馆藏</strong></p>
<p>《史记》等文献完全没说这是一场战事。也许商军像以往征收羌族人牲一样来到周族，顺便带走了周昌。从当时的实力对比看，老周昌的造反念头实为异想天开。所有周族人，包括他的儿子们——后来的武王发、周公旦等等，显然都被这个想法吓坏了。商人军队执法般轻而易举地带走周昌，足以说明周人被震慑之深：他们根本没有追随首领、对抗商人的实力和勇气。</p>
<p>周昌被捉走，把所有的难题都留给了儿子们。夫人大姒为周昌生了好几个儿子，长子伯邑考，次子周发、周旦此时已经成年。他们唯一能做的，就是去朝歌向商纣王求情，祈求他宽恕周昌因老迈糊涂而产生的妄念。</p>
<p>《史记》记载，几个从商朝叛逃到周的臣子（闳夭、散宜生等），带着礼物到商都祈求纣王。这显然不是全部实情：见到叛臣只会增加商纣王的愤怒，何况此时周族也难以吸引到商朝的投诚者。商纣是异常聪明的人，“知足以距谏，言足以饰非”，周昌的儿子们不出面，他肯定不会宽恕周人（《史记·殷本纪》）。</p>
<p><a href="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-17.jpg"><img src="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-17.jpg?resize=450,600" alt="吃人且崇尚祭祀的商朝是怎么完蛋的"></a></p>
<p>▲<strong>刻辞卜骨</strong></p>
<p><strong>殷墟博物馆藏</strong></p>
<p>文王诸子这次去朝歌的屈辱经历，只是在他们灭商、夺取天下之后，才被隐讳了起来。事实上，他们在朝歌经历的远不止是委屈羞辱，更是如梦魇一般的血腥惨剧。</p>
<p><strong>天邑商：朝歌鬼神世界</strong></p>
<p>旧史的零星记载说，周昌长子伯邑考到朝歌之后，被商纣王处死且做成了肉酱。周昌在忍痛吃掉了儿子的肉之后，才获得释放（皇甫谧《帝王世纪》）。这确实显得过于荒唐，似乎只能流于野史。但有了今天殷墟的考古发现和甲骨文献，我们才知道，这种行为对于商人再也正常不过。</p>
<p>以往数十年里，周人一直在向商朝提供羌人俘虏。对于这些人在朝歌的命运，周人可能有一些模糊的了解，却不会有太具体的观感，因为西部并没有商人的人牲祭祀场。只有在老周昌和儿子们相继到达朝歌之后，才亲眼目睹了那些经自己之手送给商人的俘虏的下场。</p>
<p>按照甲骨文记载，商人用活人献祭的方法有很多种。比较常见的是“卯”祭，这个字是人或牲畜被掏空内脏之后、对半剖开悬挂的形状，如同今天屠宰流水线上悬挂的猪羊。事实上，羌人俘虏也确实常和牛、羊一起被杀死“卯”祭。</p>
<p><a href="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-18.jpg"><img src="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-18.jpg?resize=600,486" alt="吃人且崇尚祭祀的商朝是怎么完蛋的"></a></p>
<p>▲<strong>甲骨文拓片</strong></p>
<p>其他献祭方式包括奉献人牲的内脏、鲜血、头颅。加工人牲方法有烧烤、滚汤炖烂、风干成腊肉等等，都有专门的甲骨文字。这都是加工食物的方法，因为他们就是奉献给神灵的饮食。按照习俗，神明享用祭品时也施加了祝福，所以典礼结束之后，献祭者将分享祭品。</p>
<p>这自然会得出一个惊悚的推论：商人，特别是上层商人，很有可能是食人族。但这并非只有考古证据。历史文献中除了伯邑考被做成肉酱；另一位对纣王有异心的小国君“鬼侯”也被做成了肉干，分赐给其他邦君为食。</p>
<p>按商人观念，异族的酋长、贵人是最高级的人牲，他们给这种酋长叫“方伯”，再多的普通人牲也抵不上一位方伯。周昌或者他的继承人，正是商人眼里的一位“羌方伯”。</p>
<p><a href="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-19.jpg"><img src="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-19.jpg?resize=600,636" alt="吃人且崇尚祭祀的商朝是怎么完蛋的"></a></p>
<p>▲<strong>甲骨文拓片</strong></p>
<p>但这次被“用”的为什么是伯邑考，而不是他的弟弟武王发、周公旦，或者惹出这场风波的老周昌自己？</p>
<p>在犹太《旧约》里的上古时代，上帝最喜欢接受长子作为祭礼。商人未必有这种礼俗，但他们确实喜欢用青壮年男子或儿童献祭，极少用老年人（对某些特定的神则用青年女子）。而且，商人习惯用占卜选择祭品，他们应当对伯邑考、周发、周旦等兄弟进行了认真考察和占算，来确定谁最适合做成肉酱。毕竟，用来祭祀的牛、羊事先也要认真检查，看它们的毛色、肥瘦，以及有没有疤痕、暗病，这种记载在《春秋》中屡见不鲜。老周昌的儿子们如何经历过这一关，他们的感受如何？旁人将永远无法得知。</p>
<p>无论如何，老周昌重获自由。而且，他和儿子们还有了意外收获。</p>
<p><a href="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-20.jpg"><img src="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-20.jpg?resize=696,521" alt="吃人且崇尚祭祀的商朝是怎么完蛋的"></a></p>
<p><a href="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-21.jpg"><img src="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-21.jpg?resize=696,281" alt="吃人且崇尚祭祀的商朝是怎么完蛋的"></a></p>
<p>▲<strong>青铜甗里装着蒸熟的人头，</strong></p>
<p><strong>殷墟不止一次出土过这种祭祀用品</strong></p>
<p>首先，商纣王对他们的悔过非常满意，尤其是周昌吃下自己儿子肉的表现。这大概象征了他衷心归化于商人文明世界的姿态。纣王授予周昌“西伯”身份，让他代表商朝管理更大范围的西方事务。</p>
<p>还有，在这次朝歌之旅中，周昌父子获得了面对面观察商人高层的机会。除了那些足以让人疯狂的血腥祭祀，他们还发现，商朝远不是他们在西陲时想象的“天邑商”——如同仙界般悬浮在天空的神圣都市。这里虽然富丽堂皇，但所有的人，从商纣王到他的兄弟子女亲人，都和周人一样普通，没有任何神圣之处。</p>
<p>最关键的是，商人世界并非一个团结的整体。和任何一位族长、首领一样（甚至更加严重），纣王身边充斥着心怀不满的兄弟和宗族成员，他的儿子们为争夺继承权明争暗斗。闳夭、散宜生等向周人暗送秋波的商朝臣子，应当是在这时和周昌父子们建立联系的。周武王灭商之后扶植的傀儡、商纣之子武庚，此时肯定也对周人进行了试探拉拢，更不用说商纣那些早已心怀不满的叔伯兄弟们，比如稍后被处死的比干。在这些人看来，周族人和他们那些西方亲属羌人部族，也许是可以利用的潜在力量。如果商纣王一意孤行、不尊重这些贵族的利益，就有必要联络异族，里应外合发动政变。</p>
<p>商纣王和他身边的觊觎者们，都没有想到扶植周族可能带来的危险。</p>
<p>商人称霸中原已长达六百年，从没有外来威胁可以动摇它的统治。而且，商人一致认为，天界的上帝、诸神主宰着人间一切祸福命运。已经死去的历代商王、贵族，也都进入天界成为神灵，拥有大小不一的神力。那些神灵非常“现实”，只保佑向他们献祭的人。奉献的人牲、牛羊越多，诸神就越高兴，会保证献祭者享受人间的一切。</p>
<p>商王最重要的工作，就是向天地、山川、祖先之神不停献祭，祭祀日程表排得满满当当，如同营养师的菜单。在甲骨文记载中，商王会一次宰杀、奉献三千名人牲，以及一千头牛。能够保存到现在的甲骨文只是九牛一毛，这肯定不是商人规模最大的祭祀。</p>
<p>由于商王垄断了向诸神祭祀的权力，也就独享了诸神的福佑，理所当然要征服、统治大地上的所有民族。当然，这也是为了给诸神提供更多的祭品。</p>
<p>在这种思维方式下，商人自然成为了一个以纵欲著称的民族。向神明献祭的人和民族就可得到天佑，于是不必顾及什么道德戒律，更不必担心未来的忧患。《史记》记载了纣王建造酒池肉林、男女裸体集体淫乱等种种荒唐行为。其实，这和他敲骨看髓的故事一样，都是将整个商族的丑恶集中到了一个人身上。种种酷刑、血腥的杀祭，都是商人集体而非纣王一人的娱乐方式。</p>
<p><a href="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-22.jpg"><img src="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-22.jpg?resize=256,455" alt="吃人且崇尚祭祀的商朝是怎么完蛋的"></a></p>
<p>▲<strong>玉人</strong></p>
<p><strong>河南安阳小屯村出土</strong></p>
<p><a href="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-23.jpg"><img src="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-23.jpg?resize=302,259" alt="吃人且崇尚祭祀的商朝是怎么完蛋的"></a></p>
<p>▲<strong>玉玦</strong></p>
<p><strong>河南安阳小屯村北出土</strong></p>
<p>他们还从上到下沉溺在酗酒恶习之中，终日少有清醒的人。纣王在位以来，来自西方的人牲数量在减少，但作为酿酒原料的粮食在不断增加（周昌怠工以后，纣王正试图在东南方开辟新的人牲来源）。</p>
<p>商王之下的贵族们死后成为小神，但他们也必须保佑后世商王，不能只顾及自己的子孙。在纣王之前二百多年，商王盘庚刚刚把都城迁到朝歌，他身边的贵族们大都不满。盘庚将他们召集起来训话，公然威胁说：不要以为你们死去的祖先会帮助你们，因为他们都在我先王的身边，跟着享受了我奉献的祭品，所以会优先保佑我盘庚，不会纵容你们！</p>
<p>兹予大享于先王，尔祖其从与享之。作福作灾，予亦不敢动用非德。予告汝于难，若射之有志！</p>
<p>据说商人早期是经营畜牧和商业的民族，所以他们把被统治的人视同牲畜，并且用生意人的思维和诸神打交道（《山海经·大荒东经》，《世本·作篇》）。商纣王觉得天下是他一人的产业，其他商人贵族也认为王位只能在商人内部传承。周人只是他们的工具而已，永远没有爬到主人位子上的可能。</p>
<p><strong>太公阴谋</strong></p>
<p>在周昌父子们周旋活动于朝歌时，他们也许还遇见了一位后来共同参与改写历史的人物，就是太公吕尚——后世所谓的“姜太公”。他族姓为姜，属于周人的传统盟族，羌人。</p>
<p><a href="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-24.jpg"><img src="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-24.jpg?resize=268,375" alt="吃人且崇尚祭祀的商朝是怎么完蛋的"></a></p>
<p>▲<strong>姜太公画像</strong></p>
<p>《史记》说太公吕尚是“东海上人”，在渭水边垂钓遇到文王而被重用。这种叙事模式来自《战国策》的说客故事，不足采信。更晚的野史小说《封神演义》，则有姜太公曾在朝歌城里卖面粉、当屠户的故事。在商周之际，世袭阶级身份是不可能改变的，根本不会有出身平民的暴发户。太公必然出自羌人中的吕氏部族，是一位典型“羌方伯”之子。</p>
<p>但这并不排除太公曾有在朝歌生活的经历。《史记》中记载确凿的，是姜太公在后来周人的灭商事业里作用巨大，特别是提供了许多阴谋秘计，“其事多兵权与奇计，故后世之言兵及周之阴权，皆宗太公为本谋。”这种阴谋算计，和羌人、周人在西陲山地的简单淳朴生活格格不入。只有“文明”世界才能塑造出如此阴沉工于心计的人。</p>
<p>那么，出身羌人上层的太公吕尚，为何有着如此复杂难以捉摸的经历，并最终和周人走到了一起？</p>
<p>结合周人以往为商朝所作的工作，可以推测，太公作为羌人吕氏部族的首领之子，可能是被周人俘获或者诱捕，然后作为人牲送到了朝歌。那时的太公和文王都还年轻。但某些变故使他侥幸保住了性命（比如占卜结果并不适合作祭品等），便在朝歌城内作为一名贱民生活下来，直到见到了被押解来的老周昌和追随而来的儿子们。</p>
<p><a href="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-25.jpg"><img src="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-25.jpg?resize=662,399" alt="吃人且崇尚祭祀的商朝是怎么完蛋的"></a></p>
<p>▲<strong>朝歌，今河南省淇县</strong></p>
<p>如此的话，老年太公和周昌在朝歌城内的再次会面，一定极富戏剧性，特别是在老周昌父子们经历了作为“羌方伯”的种种遭遇、伯邑考被“用”之后。这次相见的细节已混淆在种种传说中无法复原，但结局很清晰：这些有着同样惨痛经历的人达成共识，太公谅解了周族人以往的暴行，认可了老周昌的灭商梦想——虽然动机来自他未必理解的八卦推算。他悄悄和周昌父子们一起回到了西部，共同投身到灭商大业中。</p>
<p>带着在朝歌的惊悚、悲哀、新知和收获，老周昌和剩余的儿子们回到了故乡。他们离开时只有忧虑绝望，归来时却已经团结一致，带领全族投入了这桩豪赌事业：翦商。这个事业已经裹挟了包括周人在内、从东方商都到西部远山的各种政治势力，一旦开启就不可能中止，如同置身深山峡谷中的漂流之舟，或者苦撑到辽阔富饶的新家园，或者在激流乱石中撞得粉身碎骨。</p>
<p>这桩事业中，新加盟的太公吕尚为周人提供了极大帮助。司马迁《史记》记载，太公给文王周昌、武王周发父子策划的，都是阴谋诡计、密室之谋，大多没有记载下来。但他能给周人的教益不止于此。</p>
<p>和周人、羌人相比，商人的文明更加发达，分工专业化程度和生产效率更高。以太公可能在朝歌城内从事过的屠宰业为例（倒不仅是来自《封神演义》的戏说，在很多早期文明中，屠夫职业确实与贱民身份密切相关），商都的这个产业早已脱离了小作坊经营阶段。屠宰完的人牲肉、骨利用很充分，不同部位、器官被分拣归类，进入下一轮生产环节。在1930年代发掘的殷墟手工工场区内，有专门加工人腿骨的作坊，经过初步拣选的成年人腿骨被捆扎在一起，等待下一步精细加工，可能是制作束头发的骨簪。在其他的商代作坊区中，还有专门用人头盖骨制作碗的遗迹。周人不会这样利用人骨，但这种分工、专门化的生产方式，则是太公能够带来的真正进步。</p>
<p><a href="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-26.jpg"><img src="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-26.jpg?resize=600,277" alt="吃人且崇尚祭祀的商朝是怎么完蛋的"></a></p>
<p>▲<strong>骨笄</strong></p>
<p><strong>殷墟博物馆藏</strong></p>
<p><a href="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-27.jpg"><img src="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-27.jpg?resize=450,132" alt="吃人且崇尚祭祀的商朝是怎么完蛋的"></a></p>
<p><a href="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-28.jpg"><img src="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-28.jpg?resize=450,131" alt="吃人且崇尚祭祀的商朝是怎么完蛋的"></a></p>
<p>▲<strong>骨簪</strong></p>
<p><strong>河南安阳小屯村殷墟妇好墓出土</strong></p>
<p>此外，年轻的周发（武王）还娶了太公的女儿，周公旦可能也娶了另一位姊妹。由此，周人重续了和羌人的世代婚姻，两个亲缘部族终于在灭商大业之下团结起来。</p>
<p><strong>下篇</strong></p>
<p>朝歌城的经历、长兄的惨死，显然给武王造成了无法愈合的精神创伤。他的后半生都无法摆脱失眠和噩梦的困扰。</p>
<p><strong>周命维新</strong></p>
<p>从朝歌返回之后，老周昌对翦商事业非常乐观。他的创意终于得到了儿子和族人的响应，他们看到了商人内部的裂痕，还获得了太公为代表的羌人同盟军。再加上卦象显示的各种预兆——目前族人们还不懂如此高深的玄机，但他们早晚会为之折服——翦商大业注定前途光明。</p>
<p>周昌甚至按照朝歌的排场给自己加了王位。从此，他才成了和商纣王平等的王、历史上的“周文王”。当然，这只是在周人的小范围内，悄悄瞒着商纣王的耳目。</p>
<p><a href="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-29.jpg"><img src="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-29.jpg?resize=189,220" alt="吃人且崇尚祭祀的商朝是怎么完蛋的"></a></p>
<p>▲<strong>明·朱天然《历代古人像赞》中的周文王</strong></p>
<p>从朝歌回来之后，文王的身体还算康健，记忆力却迅速下降。后来周人史诗说他“不知不识，顺帝之则”，其实是典型的老年痴呆症状（《诗经·大雅·文王》）。</p>
<p>这些已经不重要，因为他有限的时间和智力，都已投入了将八卦演算为六十四卦的工作，这也许是他解除丧子之痛的唯一方式。后世卦师们的衣食之源——《周易》由此产生。</p>
<p>但这对于翦商事业没有任何助益，具体工作都由儿子们进行。除了丧命商都的伯邑考，现在成年的只有周发和周旦。对于老周昌一意孤行开创的这桩事业，他们依旧视为畏途。</p>
<p>和庞大、发达的商王朝相比，周族力量毕竟太弱小了。周旦（周公）性情柔弱，从不敢质疑父亲的决策，但也无法胜任太多建设性工作。周发则努力担负起这桩事业，这应当是他被文王指定为继承人的重要原因。</p>
<p>周昌父子的翦商事业，已经被古代经学家、现代历史学者讲述过无数遍。他们举族迁往更适合农业种植的平原地区，借着商纣王授予的“西伯”头衔，拉拢、团结周边羌人等部族，对不愿服从的部族、方国则进行武力征服。</p>
<p>周人扩张非常迅速，他们的势力甚至开始伸展到关中之外。被征服者提供了衣食资财，使周族男子得以从生计劳碌中解脱出来，组建全民皆兵的武装。周人传统的氏族、家支都被打散，青壮年在军事单位中重新编组。</p>
<p>在扩张过程中，周人还创立了“大学”，也叫辟雍或明堂。这个最早的大学的事业，不是学习研究文化，而是对所有周人男子进行军事训练，最基本的必修课是射箭，最先进、难度最高的则是驾驶战车作战。</p>
<p><a href="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-30.jpg"><img src="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-30.jpg?resize=524,402" alt="吃人且崇尚祭祀的商朝是怎么完蛋的"></a></p>
<p>▲<strong>北京国子监辟雍 李乾朗 绘</strong></p>
<p>在经典文献的描述中，辟雍是一座环水的高大建筑，其实就是护城河环绕的武装堡垒。周王和儿子们都居住在堡垒中。这座辟雍成为周人征服南北西东的力量之源：</p>
<p>镐京辟雍，自西自东，自南自北，无思不服。皇王烝哉！——《诗经·大雅·文王有声》</p>
<p>从朝歌返回之后，文王周昌又活了九年。他去世后，周发即位自称武王，但仍然继续文王的纪年。按照他的解释，父亲的在天之灵依旧指导着翦商大业。</p>
<p><strong>周公解梦</strong></p>
<p>但武王周发始终生活在恐惧和焦虑中。</p>
<p>朝歌城的经历，特别是长兄伯邑考的惨死，给他造成了无法愈合的精神创伤。再加上翦商事业的压力，担心失败的恐惧，使他的后半生都无法逃脱失眠和噩梦的困扰。</p>
<p>《逸周书》中以多个以“寤”为题的篇章，都记载了武王的恶梦之痛（《寤儆》《和寤》《武寤》《武儆》）。他常常辗转终夜无法入眠，黎明时分恍然睡去，却又梦到翦商之谋泄露、商纣王震怒，联络好的盟友们都不敢反抗，整个周族旋即遭受灭顶之灾：</p>
<p>呜呼，谋泄哉！今朕寤，有商惊予。欲与无□，则欲攻无庸，以王不足，戒乃不兴，忧其深矣！——《逸周书·寤儆》</p>
<p>每次他从恐惧中醒来，都要派身边的小臣去请弟弟周公，向他讲述梦里的惨状，以及对谋商事业能否成功的忧虑。商王家族世代向上帝献祭，他们肯定能得到上天的保佑，试图翦商是否是逆天悖伦之举？</p>
<p>对于这种恶梦，周公也只能尝试用梦来缓解。他宽慰说，他们的母亲大姒曾梦到商都朝歌生满了荆棘，这就是上天降下的商人将亡之兆。虽然上帝享受了历代商王的祭祀奉献，但他不应该因为这种小小的实惠而偏袒商王。</p>
<p><a href="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-31.jpg"><img src="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-31.jpg?resize=184,220" alt="吃人且崇尚祭祀的商朝是怎么完蛋的"></a></p>
<p>▲<strong>明·朱天然《历代古人像赞》中的周公</strong></p>
<p>为了使自己的解释圆满，周公一次次进行发挥和阐释：王的使命，应当是使天下所有的人生活在和平、公正之中，这就是所谓“德”。上帝应该只保佑有“德”之人，替换掉没有“德”的君王或王朝，以有德之人代替之。只要武王努力修“德”，就一定能在上帝福佑之下战胜商王（《太平御览》引《周书·程寤》，《逸周书·大开武、小开武》）。</p>
<p>武王从未能真心信服这种解释，恶梦一直陪伴他到成功灭商以至去世。如果真有那位全知全能的上帝，长兄伯邑考为什么还会惨死在朝歌？</p>
<p>他宁可相信实力决定一切。只有在战场上彻底消灭商朝军队，周人才能从恐惧中解脱出来。所以武王真正信赖重用的是岳父太公。每天晚上，他都在和岳父密谋富国强兵的种种方案，拉拢周边小邦、分化商人高层的种种策略。</p>
<p>但密谋结束之后，他依旧会辗转反复无法入眠，朝歌人祭场的一幕幕在眼前挥之不去，惨死兄长的魂灵随时会降临他的卧室。每次从恶梦中挣扎而醒时，窗外已开始泛白，弟弟周公正守候在榻边。</p>
<p>周公名“旦”，字形是半轮太阳正从地平线上升起，意为清晨。他确实是武王在每个恶梦之晨看到的第一个人。武王的侍卫亲随——“小子御”早已习惯，看到他失眠和恶梦，不待指令也会向周公求助。</p>
<p><a href="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-32.jpg"><img src="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-32.jpg?resize=219,350" alt="吃人且崇尚祭祀的商朝是怎么完蛋的"></a></p>
<p>▲<strong>青铜刀 西周</strong></p>
<p><strong>中国国家博物馆藏</strong></p>
<p><a href="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-33.jpg"><img src="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-33.jpg?resize=696,470" alt="吃人且崇尚祭祀的商朝是怎么完蛋的"></a></p>
<p>▲<strong>青铜戈 西周</strong></p>
<p><strong>中国国家博物馆藏</strong></p>
<p>于是，武王在周公的宽慰鼓励中稍稍振作，开始新一天的工作。史书没有记载，周公自己是否逃脱了噩梦的纠缠，以及他自己是否相信那些关于“德”的说教。但每个黎明前被兄长召唤的时刻，他都从容清醒如白日。周公显然已认真考虑过自己的定位：他无力承担父亲开启的正义而疯狂的事业，也无法给死去的长兄报仇。但这个使命和它带来的压力，注定要由他们兄弟二人一起承受。</p>
<p>他对“德”的阐释，只是作为普通人的美好愿望：他们不想无故被杀或者杀人，只渴望生活在一位圣明君王统治下的安定中。但和所有普通人不一样的，是他的兄长周发必须成为那位有“德“君王。不然整个周族将死无葬身之地。</p>
<p>如果说武王的使命是成为帝王、翦商和建设人间秩序，那么他周公旦的使命，就是做这位帝王的心理辅导师，塑造和维护他的伟人形象，如此便于愿足矣。</p>
<p><strong>牧野鹰扬</strong></p>
<p>文王死去两年之后，武王终于集结兵力，发动了对商朝的进攻。</p>
<p>但是，当他们到达黄河边后，忽然又停止进军，班师撤退。第一次出征草草结束。</p>
<p>周人和盟友都不理解武王的想法。其实，武王曾多次和太公、周公秘密讨论：以周人现有的兵力，完全无法对抗商军，要征集更多的部族做同盟军，则势必泄露翦商之谋，这显然是一个两难的处境：</p>
<p>“余夙夜维商，密不显，谁和？”（《逸周书·大开武》）</p>
<p>在两者间权衡取舍许久之后，武王终于决心发起这个冒险之举：公开与商朝决裂，并发动一次有限的试探进攻。这是他向所有被商朝统治的部族发出的振臂一呼：已经有人率先揭竿而起，亮出你们立场的时候到了！</p>
<p>当独夫暴君得意之时，似乎所有人都屈服于他的淫威。但只要第一个、第二个反对者站出来，他们身后会立即涌现一支追随者大军。被血腥人祭摧残已久的部族们纷纷赶来投靠周人。沿途加入周军的“诸侯”——部族和小国，其实多数不过是新石器水平的农业聚落——多达八百个。</p>
<p>这些未经统一训练的乌合之众是无法作战的。所以武王及时退回了关中。他需要时间把这些新盟友们锻造成一支更大的军队。</p>
<p>商纣王本该用雷霆之怒来惩戒周人的叛逆，如同十二年前逮捕文王一样。但他立刻发现，哪怕在商朝内部，他的权威也在迅速下降。对他公开表示不满的高官和亲人越来越多，推翻他的阴谋正在宫廷中酝酿。他忙于扑灭朝歌城内的反对派，处死了叔父比干，关押囚禁了更多的人。越来越多的商朝臣僚叛逃入周，带来了朝歌反对派们求援的呼声。</p>
<p>又经历了几百个不眠之夜后，周武王发动了真正的远征。西部联军沿着当年文王被捉入朝歌之路前进。</p>
<p>刚刚压平国内反对派的商纣王也集结起了大军，准备一举荡平周人和所有的叛逆民族。双方在朝歌城外的原野——牧野集结，即将发起决战。</p>
<p><a href="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-34.jpg"><img src="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-34.jpg?resize=696,529" alt="吃人且崇尚祭祀的商朝是怎么完蛋的"></a></p>
<p>▲<strong>牧野之战示意图</strong></p>
<p>这个彻底改变中国历史、再造华夏文明的日子，在文王周昌被抓到朝歌的十三年之后，公元前1046年二月一日的凌晨。双方军队连夜集结备战。连绵篝火映红了旷远夜空，人和牲畜的走动喧哗声终夜不休。</p>
<p>严冬即将过去，淡淡晨雾飘散在原野间，枯草上凝结着闪亮霜露。当天空现出幽深的蓝色——这个武王每每从恶梦中惊醒的时刻，双方军队列阵完毕。</p>
<p>周人和他们的同盟军，总共四万五千人；至于商纣王集结的军队，则像树林一样多的无法计算，“殷商之旅，其会如林”（《诗经·大雅·大明》），后来的说法是共有七十万人。而且新的部队还在源源不断开来。</p>
<p>据说，商人内部的反对者已经约定，在两军接战之前倒戈，向纣王发起攻击。但随着两军距离越来越近，他们迟迟没有动静。或许他们也被商人自己的庞大兵力吓坏了。</p>
<p>周人联军列成方阵，向殷商的矛戟丛林走去。他们因为紧张而越来越拥挤，盾牌互相碰撞挤压，每走几步都要停下来重整队列。前排敌人的面貌越来越清晰，紧张气氛陡然加剧，联军将士终于再也无法挪动脚步。</p>
<p>一方是统治中原六百年的主人，一方世世代代为主人提供人牲祭品，这将是一场实力对比悬殊的屠杀。弱势一方随时都会在恐惧中崩溃奔逃。</p>
<p>武王最后的阵前动员：</p>
<p>今日之事，不过六步七步，乃止齐焉，夫子勉哉！——《史记·周本纪》、《尚书·牧誓》</p>
<p>就在这短暂而沉寂的对峙之间，一小群联军战士挤出队列，向殷商军阵走去。带领这百十人走在最前面的，是年过七旬的的权术家、以老谋深算著称的太公吕尚。没人知道，他何以忽然抛弃了所有阴谋、诈术、诡计，像一介武夫般怒发冲冠直向敌阵。</p>
<p><a href="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-35.jpg"><img src="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-35.jpg?resize=477,357" alt="吃人且崇尚祭祀的商朝是怎么完蛋的"></a></p>
<p>▲<strong>武王伐纣</strong></p>
<p>也许他只想改变羌人作为人牲悬挂风干的命运，他在朝歌已经看得太多。</p>
<p>在后世周人的史诗中，太公在那个清晨变成了一只鹰盘旋在牧野上空。他面前的敌军阵列瞬间解体，变成了互相砍杀混战的人群。武王的部队旋即启动，三百五十辆战车冲向商纣的中军王旗之处……</p>
<p>当淡淡阳光穿透晨雾，洒向原野间的纵横尸骸时，六百年商王朝已经终结。</p>
<p>维师尚父，时维鹰扬。涼彼武王，肆伐大商，会朝清明。——《诗经·大雅·大明》</p>
<p>纣师虽众，皆无战之心，心欲武王亟入。纣师皆倒兵以战，以开武王。武王驰之，纣兵皆崩，畔纣。纣走……——《史记·周本纪》</p>
<p><strong>新商人</strong></p>
<p>周人和他们的同盟军开进了朝歌城。</p>
<p>商纣王已经在绝望中自焚而死。除了纣王亲党，所有势力都在他的倒台中获得了满足。王宫的仓库都已空空如也，据说纣王将所有宝物堆在身边点燃殉葬，但从灰烬中只寻找出几块“天智玉”。太公建议武王不要追查宝物的去向：投诚的商人显贵多是些唯利是图之辈，应当犒劳一下他们。周军继续向各地进发，征讨顽抗的商军，倒戈的商朝贵族则充当向导。</p>
<p>平定商朝全境不是问题，周武王和周公、太公焦虑的，是让商朝上层接受被征服的事实。之前双方的秘密联络中，商人上层只是把这次战争看做一次联合铲除商纣的权宜之举，之后的商人仍旧将保有自己的王朝。局势至此，周人显然不会承认这点。</p>
<p><a href="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-36.jpg"><img src="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-36.jpg?resize=671,447" alt="吃人且崇尚祭祀的商朝是怎么完蛋的"></a></p>
<p>▲<strong>鸟尊 西周</strong></p>
<p><strong>山西博物院藏</strong></p>
<p><a href="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-37.jpg"><img src="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-37.jpg?resize=669,453" alt="吃人且崇尚祭祀的商朝是怎么完蛋的"></a></p>
<p>▲<strong>鸟盖人足盉 西周</strong></p>
<p><strong>山西博物院藏</strong></p>
<p>在熟悉商人典礼的太公主持下，武王在朝歌举行了向上帝献祭的仪式，如同商人以往的所有仪式一样，被砍下的头颅是敬献给上帝的礼物，只是这次的头颅换成了烧焦的商纣王、以及他的妃嫔和亲信们，而奉献祈福者换成了周武王，十三年前的人牲伯邑考的弟弟。</p>
<p>之后，武王向商朝臣工训话，宣布商王朝从此被周王朝取代，享用过祭礼的上帝也转而成为周族的保护神。</p>
<p>武王用了商人最熟悉的交易逻辑来论证：上帝此举并非心血来潮的冲动，以往虽然是历代商王献祭，但祭品中的谷物是由周人先祖——姜嫄之子后稷培育的，所以上帝心中早已对周族青睐有加，将商人的天下转托给周人：</p>
<p>在商先哲王，明祀上帝，亦维我后稷之元谷，用告和、用胥饮食，肆商先哲王，维厥故，斯用显我西土！——《逸周书·商誓》</p>
<p>商纣的儿子武庚被任命为新商王。几个月后，商地逐渐稳定，武王留下三位刚成年的少弟——管叔、蔡叔、霍叔等驻扎商都、监视武庚朝廷，自己带主力班师西归。</p>
<p>纣王的脑袋、还有他曾重用的所有臣子都被押解到了关中。武王在自己的都城镐京再次举行祭天典礼，宣告他正式平定了中土，成为上帝在人间的唯一代理人。</p>
<p>武王要抚慰父亲的屈辱、长兄的惨死。实际上，在向商人复仇的过程中，他已经变成了一个不折不扣的新商人。</p>
<p>这个典礼仪式也完全按照商人的惯例进行：纣王的一百名幸臣被押解到祭台下，用斧钺砍断手脚，任由他们在血水里翻滚挣扎。他们喊叫的声音越大，挣扎翻滚的越剧烈，就说明奉献给上帝的祭礼越丰盛。</p>
<p>还有在牧野战场上顽抗的武将、商人核心氏族的四十名族长，他们被剥光衣服，投入到沸水翻滚的大鼎中（《逸周书·世俘》）。</p>
<p>然后，武王身穿天子之服，在音乐声中走上祭坛，向上帝和祖先之灵汇报灭商过程。生的、熟的人牲躯体被抬上祭坛，正式奉献给上帝和周人列祖列宗。纣王和妻妾们的头颅、战争中斩获敌军的耳朵，都被堆放在巨大的柴堆之上焚烧，焦香的烟火气是上帝最喜欢的食物——这是商人的说法。</p>
<p>除了这些惊悚的祭品，山川天地诸神还要享用一些稍为正常的食物：宰杀了五百零四头牛奉献给上帝和周先祖；还有二千七百零一只猪、羊、狗，作为奉献给山川、土地诸小神的祭品。</p>
<p><a href="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-38.jpg"><img src="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-38.jpg?resize=673,450" alt="吃人且崇尚祭祀的商朝是怎么完蛋的"></a></p>
<p>▲<strong>猪尊 西周</strong></p>
<p><strong>山西博物院藏</strong></p>
<p><a href="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-39.jpg"><img src="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-39.jpg?resize=670,448" alt="吃人且崇尚祭祀的商朝是怎么完蛋的"></a></p>
<p>▲<strong>刖人守囿车 西周</strong></p>
<p><strong>山西博物院藏</strong></p>
<p>按照商人的仪轨举行完所有典礼，武王周发合理合法地成为了人间的新统治者。</p>
<p>但他仍旧不能摆脱失眠和恶梦的困扰。</p>
<p>他再次巡游新占领的疆域，试图找到上帝转而福佑自己的迹象，却始终未能如愿。当武王登上西山、俯瞰朝歌城，发现自己还生活在昔日恐惧的回忆中。他的健康状况每况愈下，在灭商当年的年底终于一病不起。</p>
<p>当武王再次经历过一个漫长的失眠之夜后，小子御陪着周公旦出现在卧榻前。武王说起了自己还没来得及完成的事业：</p>
<p>那些曾追随纣王作恶的商臣和部族，至今尚未全部铲除，随时可能发起反攻；自己的长子周诵还不到十岁，其余的尚在襁褓之中，根本无法治理新兴的王朝；除了周公之外，诸位弟弟都还年轻，只有周公能够接手治理这个新王朝。此事没有其他选择，所以连占卜都没必要了。</p>
<p>而且，在周公即位之后，朝歌城必须毁灭，那里是罪恶的大本营；父兄们在那里遭受的患难血泪要随之一起埋葬。武王已经为周公选好了新都城基址：在位居天下之中的河南平原上、一个小山环抱、三水汇流的盆地内。武王甚至给这座还在脑海中的新城起了名字：“度邑”，周人由尘世升入天堂的过渡之城。</p>
<p>以往宽慰从噩梦中惊醒的武王时，周公总是引经据典滔滔不绝，这次他却一句话也说不出，只能跪坐在榻前俯身哭泣，任泪水打湿衣裾（《逸周书·度邑》）。</p>
<p>二人商谈的具体过程已经湮灭。但当武王去世时，继位的仍是少年成王，周诵。周公以叔父身份辅政，宣布了营建度邑的决定，只是改名为洛邑——他意识到了天界与人世间不可逾越的界限。朝歌城中所有的居民，从贵族到工匠、贫民，都要迁徙到这座尘世新都（今洛阳市）。</p>
<p><a href="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-40.jpg"><img src="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-40.jpg?resize=500,361" alt="吃人且崇尚祭祀的商朝是怎么完蛋的"></a></p>
<p>▲<strong>周代徙都图</strong></p>
<p><strong>周公制度</strong></p>
<p>叛乱立刻在东方爆发。管、蔡、霍三兄弟质疑周公表面推让王位，实际上却掌控着朝廷实权，这种虚伪的把戏只能欺骗一个孩子。</p>
<p>三人是文王朝歌之难后长大的一代新人，没有当年惊弓之鸟的凄惶经历，视周人的天下为理所当然。朝歌繁华富丽，生活比周人旧地舒适得多，商王的宫阙和种种排场，正应由他们享用，怎能轻易付之一炬？他们联合新商王武庚起兵，要保住这块商人的最后天堂。</p>
<p>周公和关中故地的周人已经预计到了商人的反抗，但没有想到自己的青年们被东方世界同化得如此迅速。军队再次向东方开去。腐化的军队不堪一击，管叔战败身死，蔡叔、霍叔被俘，武庚逃亡到了北方戎狄之中。</p>
<p>朝歌城被夷平为废墟。文王、伯邑考、武王和周公的所有梦魇都永远埋葬于斯。</p>
<p>周公开始颁布他的新政令。所有新政的出发点，就是往昔那些清晨他开导兄长的关于“德”的说法。这些说法对武王从未发挥药效，但周公如今有了全面推行它的机会。</p>
<p>杀人祭祀的风习被严令禁止，甚至宰杀牛羊也不能超过十二头。周公开始营建新洛阳，奠基时的祭礼只有两头牛；次日拜祭土地之神，用了牛、羊、猪各一头。</p>
<p>不仅如此，周公还要消灭有关朝歌的一切，自己和兄长遭受过的梦魇都要永远深埋。既然不能斩杀尽所有的殷商遗民，就只能修改他们的记忆，让他们自以为和别的民族没有任何区别。商王的甲骨档案库早已随着朝歌焚烧一尽；其他各种文献记载也被秘密审查、销毁。</p>
<p><a href="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-41.jpg"><img src="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-41.jpg?resize=669,449" alt="吃人且崇尚祭祀的商朝是怎么完蛋的"></a></p>
<p>▲<strong>龙纹玉环 西周</strong></p>
<p><strong>山西博物院藏</strong></p>
<p><a href="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-42.jpg"><img src="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-42.jpg?resize=666,447" alt="吃人且崇尚祭祀的商朝是怎么完蛋的"></a></p>
<p>▲<strong>龙凤纹玉圭形饰 西周</strong></p>
<p><strong>山西博物院藏</strong></p>
<p>周公还开始重新编纂历史。新的周公版历史说：商人和其他民族没有任何区别，他们的王朝也是禀受天命所建，历代商王和宰辅们都仁慈智慧、兢兢业业。只是末世的纣王丧心病狂，才导致了商王朝的终结。至于周族，也自然没有了为商朝充当帮凶的污点。</p>
<p>商人几百年的血腥暴行都归于纣王一人，他负荷着千百万人的罪恶，被涂抹成了完全丧失理性的疯子，以至孔子的学生子贡怀疑：关于商纣暴虐的很多说法都是后世人的虚构：</p>
<p>子贡曰：“纣之不善，不如是之甚也。是以君子恶居下流，天下之恶皆归焉。”——《论语·子张》</p>
<p>周公五百年后的孔子就是商人后代，他和子贡等弟子们传承的，却是被周公修改过的知识。人们或许能感到，纣王恶行的传说过于虚妄，但不知道这后面隐去的事实是何等恐怖。</p>
<p>这正是周公的目的，他不想后人也生活在恐惧和仇恨中，虽然他和兄长已终生无法摆脱。</p>
<p>还有，民族的隔阂必须打破。商人的族内婚被严厉禁止，所有贵族都不得在本族内结婚，而应当与其他部族、方国的上层联姻。为了巩固新的周王朝，周公还把周人、羌人分封到新占领的东方，让他们在各地建立新诸侯国。商人也都被拆散分配到这些新邦国中，他们将和各地的土著民族通婚混血，互相同化，形成新的世袭统治阶级。</p>
<p>混血、统一、开放的新华夏民族由此诞生。周人、商人、羌人的划分永远成为历史。</p>
<p><a href="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-43.jpg"><img src="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-43.jpg?resize=670,445" alt="吃人且崇尚祭祀的商朝是怎么完蛋的"></a></p>
<p>▲<strong>玉鼓 西周</strong></p>
<p><strong>山西博物院藏</strong></p>
<p>周公继续完善着他的道德理想。他制定了种种礼节，希望让人们学会控制欲望，把社会规训得和善、节制、长幼有序。这些说教和规范形成了种种儒家经书，被统称为“周礼”。</p>
<p>当初激发父亲翦商灵感的八卦、六十四卦，也要重新进行阐释，消除那些野心和投机的成分。据说《周易》的《爻辞》是周公所写，它与文王名下的《彖辞》区别极大，不再鼓励任何投机和以下犯上的非分之想，全是一位君子应当如何朝乾夕惕、完成社会角色的励志说教。周公兄弟们从未能理解父亲对八卦的狂热。那个冒失之举虽然最终收获巨大，但毕竟给他们的家庭和国族带来了太多磨难和风险。如果再次面临这个选择，他们恐怕没有勇气投身于斯。</p>
<p>商人和神灵做交易的理论，也要做彻底修改。给神灵、祖先的献祭只是表达虔诚敬意，不需要、也不允许无限丰厚。神灵不再是贪得无厌的嗜血饿鬼，而是保佑有德者、惩戒无德者的最高仲裁，维系着周公倡导的人间道德体系。</p>
<p>在商人的功利、血腥、残暴已然登峰造极之后，周公创建了一套全新文化：节制欲望、善待他人、克己复礼、勤勉拘谨。这就是正在形成的新华夏族的样板品格。</p>
<p><a href="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-44.jpg"><img src="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-44.jpg?resize=696,402" alt="吃人且崇尚祭祀的商朝是怎么完蛋的"></a></p>
<p>▲<strong>《周礼》</strong></p>
<p>周公还以身作则，每次面见年少的侄子成王时，他都战战兢兢如对严父，虽然他是成王事实上的监护人。每向成王表达完自己的意见，或者听成王说出每句话，周公都要以头触地、长跪稽首许久。</p>
<p>至于逐渐长大的成王，和所有青年们一样，开始萌生叛逆心理，对这些繁缛礼节和道德说教渐渐不满。而且周公一直掌握大权，在反对者看来，这无疑是虚伪和言行不一的表现。据说在数年间，成王曾命令周公居住在洛阳，不得到关中朝觐。最后，可能是周公奉还大政、交出所有权力之后，他才与侄子和解，回自己封邑度过晚年。</p>
<p>他委实无法向侄子解释自己这种对道德的近乎病态的依赖：这是他和父亲、兄长生命中的不能承受之痛，已无从向年轻一代谈起，就像伯邑考的死因不能触及一样。</p>
<p>周公在归政后不久死去，埋葬在文王和武王的陵墓之旁。最后岁月里，他和侄子成王关系如何，史书完全没有记载，但从他死时的寂寥来看，侄子显然还对这位道德楷模心存芥蒂。</p>
<p><a href="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-45.jpg"><img src="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-45.jpg?resize=669,447" alt="吃人且崇尚祭祀的商朝是怎么完蛋的"></a></p>
<p>▲<strong>玉人 西周</strong></p>
<p><strong>山西博物院藏</strong></p>
<p>周公的道德事业是成功还是失败？恐怕言人人殊。但他彻底埋葬商都记忆的努力无疑是成功的，至少在考古学家的铲子掘开殷墟之前是如此。</p>
<p><strong>尾声</strong></p>
<p>经过十几年历史记载的空白之后，35岁的周成王忽然病重弥留，命悬一线。</p>
<p>但他仍按照天子之仪轨，挣扎着梳洗、穿戴起最庄重的冕服，端坐到朝堂之上，对臣工们发表了临终训话。他历数祖父文王、父亲武王以来的功业和教诲，告诫太子和臣工永保勤勉，不要丧失先辈们的翦商大业。</p>
<p>在臣僚们看来，这番景象恍然周公重生。</p>
<p>显然，在独自为政之后，成王渐渐理解了叔叔的某些用心：</p>
<p>王曰：“呜呼！疾大渐，惟几，病日臻。既弥留，恐不获誓言嗣，兹予审训命汝：昔君文王、武王宣重光，奠丽陈教，则肄肄不违，用克达殷、集大命。在后之侗，敬迓天威，嗣守文、武大训，无敢昏逾……”——《尚书·顾命》</p>
<p>临终训话结束之后，臣僚退去。成王挣扎着脱下了礼服，回到病榻上。次日，成王去世，太子康王继位。</p>
<p>华夏历史沿着武王和周公修改后的轨迹继续前行，直至今日。</p>
<p><a href="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-46.jpg"><img src="https://i0.wp.com/www.cbyxs.com/wp-content/uploads/2023/02/%E5%90%83%E4%BA%BA%E4%B8%94%E5%B4%87%E5%B0%9A%E7%A5%AD%E7%A5%80%E7%9A%84%E5%95%86%E6%9C%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%8C%E8%9B%8B%E7%9A%84-46.jpg?resize=497,499" alt="吃人且崇尚祭祀的商朝是怎么完蛋的"></a></p>
<p>▲<strong>四羊方尊 商</strong></p>
<p>作者附言：两位大学同窗为本文提供了帮助，首先是芝加哥大学人类学博士、中国社科院历史所的林鹄师兄，他在本文酝酿阶段贡献了许多有见地的想法，本文第一节殷墟考古部分的文字，就直接来自他的著作；北大历史系的韩巍教授审读了全文，并提出了宝贵意见。在此一并致谢。</p>
]]></content>
      <tags>
        <tag>故事会</tag>
        <tag>阅读</tag>
      </tags>
  </entry>
  <entry>
    <title>网管</title>
    <url>/2021/11/13/%E6%95%85%E4%BA%8B%E4%BC%9A/%E7%BD%91%E7%AE%A1/</url>
    <content><![CDATA[<p>章节 1<br>  我不说他的ID，就说他。他每天都会来我们网吧上网，一般都是晚上10点左右。买一包7块钱的烟，一瓶可乐或者雪碧。他长得不算帅，也不丑，身高大概在1米7左右，脸上总是一副闷闷不乐的样子，但是我能看出来他很善良，你知道的，眼神骗不了人。<br>  他总喜欢坐在挨着收银台的地方，打开电脑后就登陆QQ，然后上百度，我注意到了，他会一个通宵都泡在李毅吧，神情有时候严肃，有时候又很伤感，但是他也会咯咯的笑。那是少见的时刻，像个天真的孩子，老实说，他笑起来很无邪，眼睛里透露出来的善良更加清晰。<br>  这些事都是09年初发生的，那时候我刚实习，学的是计算机，但是工作太难找了，就去想着去网吧混混时间。网吧的生意很好，大多时候我都坐在收银台旁边，时不时帮上网的人送水和烟。</p>
<p>章节 2<br>  网吧里大多数人都会通宵玩游戏，除了他。有时候我看到他会写很长一串文字，我无意偷窥别人的隐私。但是我看到他写他的女朋友，他的家人，他的生活<br>  这是一个西北部的城市，三四月的雨水不多，但是整天都阴沉沉的，给人一种透不过气来的感觉。那时候我一月工资才七百，因为自小家里经济情况不好，所以我一直很节省，大学四年，女生的手都没碰一下。所以有时候我会盯着那些漂亮的女生看，他也一样。其实我觉得这么一直说他，挺别扭的，我还是称呼他为A吧。<br>  但是我觉得A应该跟我一样，家里的情况并不是很好，因为大多数时候，他晚上的宵夜就是两个包子。有时候他的头发还油腻腻的，似乎很多天没洗。那些穿着光鲜，眉目如画的姑娘从他身边走过时，他也会用眼睛的余光去看，然后又盯着屏幕，滑动鼠标，似乎什么事都没发生一样。但是就像那些姑娘从来没有看过我一眼一样，也从来没有去注意过他。<br>  就在那段时间，城市正在严查网吧，所以一到晚上12点，网吧的大门基本都关了。里面的人出不去，外面的人也进不来。有时候网吧满座时，我根本没机器可以上，只能呆呆的做一晚上。看A浏览网页，看视频。或者跟负责收银的姑娘瞎侃。暂且叫她小C吧。<br>  一开始我并不习惯跟姑娘说太多话，因为在学校我就比较胆小，跟女孩子说话都紧张的要死。但是小C很会找话题，也比较开放，可能是大城市呆久的原因吧。没事儿就喜欢逗我，说交女朋友没，还是处男吗，我一个劲摇头，连回答的勇气都没有。<br>  我说过了，A总是坐在离收银台很近的地方，有时候我跟C说话，他也会回过头来看看。那时候天气比较冷，但是小C总是只穿很单薄的衣服，丰满之势呼之欲出。也不知道是A在听我们谈话，还是在看小C。<br>  后来时间长了，接触的多了，胆子也大了起来。因为经常见到A,所以后来他一进网吧，我们都会互相打招呼。他总是嘴角淡淡的笑一下，然后一边拉椅子一边说：“拿包烟，再拿瓶可乐。”</p>
<p>章节 3<br>  网吧除了我一个网管，还有另外一个负责技术的大网管，平时他就坐在网吧后面的小屋子里。有什么我搞不定的问题，他就出来弄。他长得五大三粗，嘴里总是叼只烟，有很严重的眼袋，眼睛四周都是淡淡的青色，就像很久没睡觉一样。他的脾气很大，喜欢发火，刚去的那段时候，我总是坐着无事可做，他偶尔出来就朝我骂，说我不做事，要告诉老板。我只好站起来假惺惺的走一圈。<br>  然后他就跟小C笑眯眯的说话，一副讨好的样子，但是小C总是爱理不理。其实小C长得并不漂亮，但表情却显得很张扬，就是那种很有欲望的样子。加上她伟岸的胸脯，难免让人想入非非。<br>  不过后来就好多了，大网管经常出来转，也不说我了，时不时还递烟给我，其实我那时候还不会抽烟，但是我怕会扫他的面子，还是接过来，点着，说实话，一开始我并不喜欢烟的味道，让我的鼻子和喉咙都不舒服，甚至会让我觉得头晕晕乎乎的。<br>  但是慢慢习惯后，我也开始买烟了，4块一包的红梅，不太好抽。但是没办法，没什么钱，只能将就着。而我和小A第一次正式的对话也是因烟而起的。</p>
<p>章节 4<br>  网吧通宵的费用从12点到8点是6块，从10点起是8块。那天A像平时一样来到网吧，但是他没去开机器。只是围着网吧转了几圈，最后站在一个人后面看着。大概站了有半个小时，又走出了网吧。直到12点多的时候，他才又进来了。那时候小C正在修指甲，也没抬头看他。他说开个6块的。小C这才放下修指甲的刀，然后扑在收银台上，乳沟也一下子显露出来。看得我心头一阵，而小A也似乎在喝水一样，喉咙迅速的翻动了几下。<br>  那天A没买烟，也没买可乐。然后找个地方坐下，开机，登QQ，打开百度，进李毅吧。那天我才知道，一直以来我都以为他只有一个ID，原来不是。也许是我平时没注意吧，但是那天夜里我至少看见他用了五个不同的ID发言。<br>  那天三点多的时候，一直坐在电脑前的小A突然朝我挥了下手，意思是让我过去。我两步踱到他面前，以为他要买东西；“你要买什么”。他抿了抿嘴，露出一个很浅的笑容：“你有烟不，我不记得带钱出来了。”那时我已经在网吧工作一个多月了，也知道他在说谎，肯定是没有钱了。但是给任何人在当时都不会揭穿。一边拿出烟，一边说：“差烟，不知道你抽不抽得习惯。”他呵呵直笑：“有就好，有就好。”<br>  然后他找我借火机，点燃之后说了声“谢谢”，那时候我已经在刻意锻炼自己的社交能力了，嬉笑的又抽出几支，说：“多拿几支。”他显得很客气，推辞了一下，但是最后还是拿了两支。一支别在耳朵上，一支放在桌子上。<br>  接着我就坐在他身后不远地方看到，他在输入栏里写了一行字：“今天偷了老爹的一包芙蓉王，会被发现么？”<br>  我觉得这个世界所有的人都会说谎，我也不例外。母亲打电话来说弟弟读高中了，生活费不是很够，问我工资有没有多的，给弟弟寄点。我一直怕家里担心我，给他们添麻烦，骗他们说实习工资有1500。我知道我没办法拒绝母亲的请求。一口就答应了。那时我全部身家就只有800多，给弟弟寄了200过去，600多足够我一个月花费了，而且那时候还住在学校。网吧还包两顿饭，所以花费不是很大。<br>  所以A说自己偷了老爹的芙蓉王，也许是个玩笑罢了。网络茫茫，谁没信口开河的时候呢。<br>  不过后来A又按着键盘，似乎是刷新了一次，然后又点进自己的帖子，后面多了几个回复。A卷了卷衣服的袖子，写下几个字：“不过这烟不太好抽。”我心里暗想，四块的红梅，当然不好抽。然后他点了发表，刷得一下弹出来一个框,原来帖子已经被删除了。<br>  看得出来A有点不乐意，即使从后背也能想像他的表情，左晃右晃，用手摸了摸嘴，又把头足有晃了几下，深深吸了口气。直接关掉的浏览器。<br>  这时候有个上网家伙跑到收银台买东西，我一回头才才发现，小C竟然没坐在收银台里。那家伙拍了几下桌子，问：“人呢.”我想大概去厕所了吧，就对那人说：“去厕所了，你等下。”但是等了两三分钟，小C都没出来。那人等得很不耐烦，说快点啊。<br>  因为老板规定网管是不准碰收银之类的事儿的，我只好站起来进网吧后面找。但是厕所里空无一人。我又转身跑去大网管的屋子里，一手就推开了门，大网管正一手抱着小C啃，一手在小C身上，上下乱摸。</p>
<p>章节 5<br>  当网管那段时间，作息时间很难调整，特别是白班和夜班交替的时候，那一天是最难过的。想睡不能睡，坐在凳子上又困得要命，不是为了那可怜的薪水，我真他娘的不想干了。当网管第一次换班是在中旬，上晚班的时候，早上下班我都不吃早餐，回家啃个小面包，就直接回学校睡觉。一是节省点钱，二是为了能多睡会。<br>  但是交班那天，我破例去吃了回早餐。因为白天不能睡觉，要留到晚上，好第二天上白班。有时候觉得这个世界还真小，那天在早餐店里就看到了A,自从那次他找我要烟之后，我就再没见过他去网吧了。那时温度还不算高，早上也挺冷的，他穿个大大的风衣，头发又是油腻腻的，还有点乱。一边嚼着包子，一手还往嘴里送稀饭。我看见他之后就给他打了招呼，还递了一支烟，说最近怎么没去网吧了。他咽下嘴里的包子，笑了笑，说最近没空。过几天再去，呵呵。<br>  我知道他又在撒谎，但是谁又不好面子呢？其实那次他找我要烟，我就知道他肯定是没钱了。这段时间没去，也估计是没钱上网了。那天夜里我推开大网管的门，又急忙关上。但是听到里面有人在骂娘。那时候我已经实习了一个月了，知道什么该看见，什么不该看见，知道什么该记住，什么不该记住。<br>  “大网管是老板的亲戚。”小C曾经告诉我。我不想得罪任何人，也不想丢掉唯一的一份工作，所以我就当没看到。<br>  我从网吧后面走出来后，小C很快也出来了，衣服头发都打理得很整齐，就是脖子上有点红印记。我面无表情的看着她：“有人买东西。”<br>  我琢磨着小C的家境也不是那么富裕，不然一个20多点的小姑娘，家里只要经济稍微好点，也不会来当网吧收银这样的工作，又累工资又少。从小到大，我并不会轻易轻视别人，但是从小C那次之后，就觉得这姑娘挺那啥的。闲时吹吹牛还可以，深交就算了。</p>
<p>章节 6<br>  白班时，我从来没遇到过A。直到我又再次晚班，才看到他。依然是那件风衣，不过头发剪短很多，挺干净的，每次来又开始买烟，买可乐，时不时还给递一根。抽着挺好，7块一包的烟，就是比红梅舒服。<br>  那时候我和他也算半个熟人了，他经常一边上网，一边回过头来跟我说话。有时候后半夜我和他还津津有味的说这网吧里来过哪些漂亮姑娘。有一次我和他正说得起劲，小C就插了一句嘴，拖着下巴撅着嘴：“两个小处男，整天就知道说姑娘。”<br>  老天作证，那是我第一次调侃姑娘，也不知道那时候哪有那么大的勇气，笑嘻嘻的看着小C：“你帮我们解决了呗。”说话后我自己都心蹦蹦跳。甚至觉得这不是我自己说的话。说那句话的瞬间，我就突然想起海子一句著名的诗：“我是谁手里磨刀的石块?我为何要把赤子带进海洋。”<br>  可是你知道，每个人都要改变，如《重庆森林》所说，今天他喜欢凤梨罐头，明天他也许可以喜欢别的。我没办法像海子一样伟大，也不能像他一样生活在沙漠中。我没有事业可以给予兄弟，我没有爱人可以给予爱情。我唯一能做的，就是把孤独留给自己。在大多数人已经安然入眠的夜里，跟一个长相并不是那么漂亮的姑娘，说一句带着挑逗的话，以此打发寂寞的时光。</p>
<p>章节 7<br>  气温渐渐开始回温了，老板吝啬无比，也不让开空调，转这几个换气扇也不起作用，像微风吹起的树叶，无精打彩的慢慢晃动，网吧里又热又闷，小C也越穿越少，乳沟和露出半截的咪咪是看惯了，但是腋下那几挫没剃的腋毛，实在让人倒胃口。本来就不是一流美人，这么一看，更加影响整体形象。<br>  但是这并没影响大网管的兴趣，小C夜里时不时总会消失一会。脖子上的红印是不怎么见了，倒是头发带着湿漉漉的汗水经常看见。一脸饿汉吃饱了的满足神情，看起来十分操蛋<br>  那天小C面对我的挑逗，刷得一下站起来，双手叉腰，头颅一昂，挺着波涛不止的上围，带着女权主义者的口气：“来啊，姐姐我帮你们。”<br>  听得我上下充血，嘴巴顿觉干渴。小A在一边捂着嘴大笑，偷着看了小C几眼，又转过头去上网。<br>  我跟着哈哈大笑，然后抱着拳头故作不敢：“您凶，我不敢。”小C哼了一句，硬生生的坐下去，惊起波涛一片澎湃。我愣愣的看了几秒，她也没在意。可眼神里，分明是带着暧昧和赤果果的挑逗。一时让我不知如何是好。只能抽出一支烟点上，又转过头看小A上网。<br>  他似乎是在一个群里聊天，大大的蓝色的字体。我看见他说：“刚从夜总会回来，有个姑娘暗示我上床，我却没兴趣，这是病吗？”<br>  我不知道“当你很饿，面前又放了个苹果，你却不去吃”是不是有病，也不知道姑娘玉体横陈的时候你无动于衷是不是有病，但是我知道。当你过度去想象那些不切实际的东西，的确有臆想症患者的嫌疑。那是病，真得治。</p>
<p>章节 8<br>   A似乎有很多身份，光我后来陆续看到的ID，就有十多个，有时候他是职业游戏玩家，有时候他是公务员，有时候是老师，还有时候是吃香喝辣的富二代，或者是大学学生，公司的经理。可是我从来没看到一个真实的他。 一个夜里通宵，头发油腻，抽7快香烟，喝两块可乐的他。我想是这个时候太缺乏安全感了，所有人都将自己的真实面目隐藏起来，而你看到的，长久看到的，只是一张虚假的脸孔。说着无关痛痒的谎言，或为了发泄，或为了排解孤独，但是至始至终，这些谎言都没有伤害到任何人。也许那是理想，但是却永远无法触及。<br>  不光如此，他说自己的上网地点也是层出不穷，在家，在公司，在朋友家，在广场用无线笔记本，在车上，但是却从来没在网吧。有一次我看到他打了一大段的字，大体内容是，痛骂电信服务不好，经常断网，维护人员动作又慢，又说一次交了三年的费用，就换来这种服务，中国真不是呆下去的地方。等忙完这段时间，就着手搞移民。那一刻他是一家公司的老板，说着自己都信以为真的谎言。<br>  在文章的结尾他还说，他发誓，不能为稻粮谋，要去做自己想做的事。赚钱？太没意思了。<br>  还有一次，他说自己是大学的学生，有两个女生同时喜欢他了，一个漂亮，一个家里有钱。又不知道从哪里弄来几张照片，说大家给我看看。哪个可以上手。其实那时候他正坐在网吧，一边抽着7块的烟，衣服后面粘了一小块的污渍，与他无关的姑娘坐在他的左右身旁，他时不时偷瞄一眼。然后他又说，你们信么。我已经很难喜欢上一个姑娘了，初恋的女友太优秀了。我总是忍不住拿出来跟其他女生比，一比就喜欢不起来了。我很痛苦，怎么办？大家帮帮我吧。<br>  那是去年5月，城市已经开始热起来，他坐在摇着几个换气扇的网吧，脖子后面划出几颗汗水。点击发表，又刷新，又点进自己的帖子。然后一手托着腮帮子，一脸虔诚的表情，就像一个在等待老师答案的小朋友，静静等着回复<br>  也许除了我，没有人会知道那是谎言，以及他无法到达的梦想，甚至连他自己在那时候，也许都把自己的话当成真的了吧。那样的表情和眼神，不是能装出来的。</p>
<p>章节 9<br>  从小到大，我都没做过让自己胆战心惊，觉得紧张不已的事，先是怕给家里惹麻烦，而且自己胆子也不大。家里在农村，但是连偷红薯的勇气都没有。同村的孩子都笑我胆小，以后肯定怕老婆。<br>  从家里出来读大学时，母亲和父亲都很高兴，说要我努力。学费会给我凑齐。父亲还难得的开了次玩笑，咧着黄牙说：“娶个城里媳妇回来嘛。”他一生面朝黄土背朝天，没出过门，没读过几年书，以为城里遍地是黄金，走路都能捡到钱的地方。但是这并不影响我爱他们，他们也从来不曾对我食言。给我吃饭的钱，给我凑学费，大三实习前回去，我发现他们已经苍老了很多，但是看到我，他们眼神里都仿佛看到希望一样光芒，我知道，我是他们的全部，弟弟还在读书，还要上大学，而他们已经老了。<br>  而我在大学里也省吃俭用，遇到过喜欢的女生，但是一来我不是那种帅的男生，手上也没钱，想恋爱实在是很难，那样的生活，太花钱了，而我远远无法完成。</p>
<p>章节 10<br>  终于放假一天了，还发了工资。小C说一起工作一个多月了，一切去吃顿饭吧。大学几年，我是从来不去外面吃饭的，哪怕只要十几块，也够我两天的生活费了，我不想一顿就吃完。我显得很犹豫，想着找借口拒绝。小C似乎看出了我的心思，轻轻拉了一下我的衣袖，说去吧。我们选便宜点的。<br>  饭店的确不贵，荤菜只要五块，素菜只要三块，小C和我点了一荤两素，要了两瓶啤酒。我本来就不是话多的人，吃饭时一直都是小C在说话，说她以前工作的地方，说笑话给我听。我默默的听着，时不时搭两句话。小C却越吃越起劲，我俩陆续喝了好几瓶。我是那种一喝酒上脸的人，觉得不行的时候坚决不喝了。小C也没劝我，就自己一个人继续喝着。我坐在一边看着她，突然见到她脸上有种莫名的悲哀浮现，接着两行清泪就哗啦啦的流了出来。<br>  小时候弟弟经常哭，父母又忙农活，一般都是我带着玩，他哭的时候我就连哄带吓。或者去厨房给他弄点开水，放点糖在里面让他喝。他喝完总会眨眨还带着泪水的眼睛，说：“哥真甜。”他那时候还小，我蹲下身摸摸他的头，重复着说了好多次的话；“你以后不哭，哥就经常给你弄糖水喝。”弟弟也是用小手抱着我的头，高兴异常：“哥真好，哥真好。”<br>  不过让我哄女孩子，那我就不会了，因为从来没遇到过。小C低头擦了擦眼泪，水汪汪的眼睛看着我，说：”你知道吗，我早就不想干这工作了，要不是家里。。。”说到这，莹莹粉泪又刷得流了出来。我手足无措，不知道如何是好，最后只好从饭桌上抽了两张纸巾递给她。她接过去朝我笑了笑，红着眼圈看着我：“家里不好，没办法，现在工作不好找，我又没文凭，什么都不会。。。”<br>  自从那次看到小C和大网管的事儿，我对这姑娘就没什么特别好感。人生多变，最忌讳的就是吐露心声，被人抓住弱点。那天就是小C一个人说，说她家里的情况，说父母亲，还有弟弟妹妹，她说就想多赚点钱，给家里买个电视，让他们晚上也多点乐趣。末了她又擦了擦眼泪，笑着对我说:”不像你们大学生，做几个月就换工作，工资肯定会很高吧。”<br>  我正琢磨着怎么回应他这样话，A一下就出现在我的眼前：“老板，要个米粉，素的。”</p>
<p>章节 11<br>  他似乎从来没换过的那件风衣，看起来有点脏的牛仔裤，一双蓝色的人字拖鞋。神情疲惫，我主动跟他打招呼：“准备去上网了？”他笑着从衣服口袋拿出一包烟，抽出一根递给我，又拿出一支递给小C,小C一愣，然后伸手接过烟。据我所知，小C平时是不抽烟的。<br>  等A的米线上来时，三个人坐在两张桌子上已经寒暄了很久了。C一下子就像变了个人，说着调笑的话。A问她怎么眼睛红了，C拿起桌子上的酒瓶摇了摇：“喝得有点多。”<br>  我清楚记得那是2009年5月1日，那天我们放假了。在那座城市的一个小饭馆里，我和小C对坐着，她眼睛通红，A在一旁吃着米线。三个人嘻嘻哈哈，有说有笑。从那天开始，我开始对这个世界充满疑惑，那些光鲜耀人的微笑背后，是否都有着不为人知的苦楚？在一张张不同神情的面孔中，是不是都隐藏着不为人知的秘密？<br>  那天一顿不算丰盛的晚餐吃了三个小时，九点多钟从饭店出来，头上有着城市里难得一见的月亮，像一颗晶莹剔透的眼泪。传说这黑幕之上住着无所不能的神仙，不知道他们能不能了解人家那些难以启齿的悲哀和一滴滴无法流淌的眼泪。<br>  所有人都有秘密不是吗？我也有，那天不知道是酒精作用还是别的原因，回到宿舍躺下后就亢奋不已，我知道，那是荷尔蒙在起作用。它让我向往着一样东西，以及一瞬间的快感。我是一个懂得控制的人，手淫次数并不多。那天我没忍住，从床上爬起来，借洗澡的机会做手部运动。而我想的人，竟然是小C，一张不漂亮却充满欲望的脸，和她无限接近我的涂得绯红的嘴唇。自那次手淫几个月之后，我才终于有生以来第一次尝试到女人的滋味，却又让我在到达最后一刻时，觉得无比空虚和失落。<br>  在我还没遇到那种空虚和失落前，生活还是一如既往，吃廉价面包，吃网吧供应的两顿饭。C和A也变得越来越熟悉，我的话也越来越多。但是在夜里，大多数时候，我都只是默默的坐着，看着A那些既不害人也不害己的言语，就像看到自己的无奈，看到无法挣脱的日复一日的，看到小C那种时常挂着笑容的脸庞后面，一颗无助和哀伤的心，以及那些要痛苦煎熬才能达到的心愿。哪怕是一个小小的电视机，也如梦一般无法接近。<br>  小A曾经给我看过很多的帖子，有漂亮姑娘，好笑的视频，动人的帖子，但是大多数时候，屏幕上都是那些肌肤似雪，身姿婀娜的姑娘，他总会啧啧自言自语的称赞，真漂亮。然后回过头看着我：“漂亮吧。”我笑着点头，表示认同。心理却很不是滋味，再漂亮又怎么样？我只能看看罢了。<br>  “现实就是这么残忍。。。”大网管语重心长的说。</p>
<p>章节 12<br>  那天是有人在网吧卡座睡觉，桌子上是一盒吃过的康师傅方便面盒子和半瓶矿泉水。但是那家伙却没上网。老板交代过，不上网的不准在网吧睡觉。大网管出来正好看到，一脚提醒那人，那家伙猛得被惊醒，一下就坐起身来，起来时候手一乱打，直接扫翻了方便面盒子，残羹倾洒而出，污浊而肮脏，流到地上，流在桌子上，撒到那人的身上，顿时侵出一块湿漉漉的水痕，上面覆盖着方便面被泡软的面渣。<br>  大网管更生气了，一把拉起那人，“滚出去，滚出去！”那人惊魂未定，傻愣愣的被推搡的出门了。出大门的时候，还差点摔了一跤。大网管回过头看了我一眼，我盯着他。始终觉得这样太粗鲁了。<br>  他晃晃悠悠像个二流子一样走到我面前：“现实就这这么残忍，看什么看？”那时候我有点哭笑不得，想不到此二流子还会说这么诗意的话。<br>  我没作声，转头朝别的地方走去，C依然摸着指甲，似乎什么都没发生一样。A回头看了我一眼，眸子里似乎在害怕着什么。</p>
<p>章节 13<br>  6月的天气渐渐热起来，小C的衣服单薄到能看见胸罩了，弄得我上班都满脑子瞎想。最该死的是，A有时候还看床上动作片，他总是把视频窗口拉到很小，又开着浏览器，戴着耳麦，左顾右盼。一旦有人从他身边经过，他就迅速的把视频最小化，然后装模作样的在看网页，或者点出QQ头像，假装在打字。看过一会后，他总会起身朝网吧后面的厕所走去，不说我也知道他去干嘛。这无可厚非，叔本华说过，性冲动是人类的潜意识，是为种族繁衍而起，是天赋人权，没有人可以指责和剥夺。而很多时候，我们总是把它当做一件耻辱，不可见光的秘密。<br>  作为一个毅丝不挂，我坚信大帝所说的恶有恶报。大网管终于恶报了，老板说他高烧送医院了。让我看着点电脑，有什么问题好好解决，还说干得好给我加工资。我当然高兴，毕业还有一个多月，多拿点工资就是一点。<br>  俗话说老虎下山，猴子称霸。大网管走了，也没人管了。除了人满的时候我呆呆坐着，大多数时候我都会找机器上网。夜里就坐在小A旁边，有时候小C也会坐着听歌，玩游戏。我从小就没玩过什么游戏，大学才学会上网，也不知道那时候为什么选计算机专业，或许是觉得热门好赚钱好找工作吧。小C后半夜一般都会睡一会，让我多看着点网吧的事儿，有时候她就趴在电脑桌上，穿着裸露的衣服，咪咪微露，起伏不定，看得我欲火中烧，邪念四起，胯下鸡动无比。不过激动归激动，激动完了还是继续上网打发时间。<br>  小A很沉迷于百度贴吧，不光是李毅吧，还有什么帅哥吧，QQ吧，美女吧，他有时候也会去。大多时候都默默看着，少数时候写些东西。他是完全沉浸其中，连我明目张胆的看着他写东西，他也毫不在意。那些赤裸裸的编造出来的文字，带着兴奋和不屑一顾的语气，总是会让我觉得有那么一点点难过。<br>  6月几乎是去年最忙的一个月，利用晚上上班还在写毕业论文，准备答辩，还要给在网上投简历，快拿到毕业证了，也是该找个对口的工资高点的工作了。小A依然是一如既往的上网，小C整天也是那副神情。倒是大网管，古语说出来混，迟早要还。那天他把那个在网吧睡觉的推搡出去，结果刚出院没多久又进去了。被人打得鼻青脸肿，说是用生铜管打的，医生说要留院观察，看看内伤有没有问题。老板是他亲戚，愣是要查是谁、警察来调录像，最后也没查出什么结果来。估计是那人临走干了大网管一顿，然后跑了。<br>  老板吝啬是吝啬，不过说话倒是很讲信用，给我发了850块的工资。想着反正也多拿了点，而且上个月工资还剩下200多，就给弟弟寄了300过去，还寻思着请小C和小A吃一顿简单点的。礼尚往来嘛，上次去吃饭，还是小C给的钱，弄得我都有点不好意思。小A也是认识了这么久，烟没少给我发，看他也跟我差不多，家境不会好去哪里，可能是同病相怜吧，就索性一起约出来吃点。</p>
<p>章节 14<br>  那天的那段饭，是我这么大以来吃过最贵的一顿饭，用了80多。说实话，那时候心里还是有点儿心疼，不过后来想想，既然高兴过了，也就算了。嘿嘿，我倒是很会安慰自己。那天一共点了5个菜，还要了一个汤。<br>  小A似乎是很久没见过荤腥了，吃得很猛，喝酒也是不在话下。席间还跟小C划拳，对饮。我笑眯眯的在一旁看着，心里琢磨着这顿得花多少钱，想想那时候，还真是个小气鬼。不过那也是我第一次真正认识到小A，酒后吐真言嘛，他说自己是学生，去年毕业。没拿到毕业证，一直在混日子。我面带笑容，安慰他说，你看我还不是快毕业了，不一样在混。其实心里怕得要死，想要是有天我找不到工作怎么办。弟弟还在读书，父母又没什么钱给我。想想都觉得可怕。<br>  只有小C听完后在一旁默不作声，只是偶尔笑一笑。我很少见到她这样严肃不笑的表情，红扑扑的脸蛋，看着我和A说话。她只是高中毕业的女孩子，我当时浑然不觉这样的对话会对她有所刺激。那是那时的我，不管不顾，不会洞察人的内心，以为世界都如我所见，如我所想。现在回想，我会耻笑那时的轻浮和无耻，愚蠢的青春自以为是。但是我也许会终身为那时的无知而觉得幸福，因为那时我是个”赤子“，未曾涉及“海洋”一步。可是现在，除了我，没有人会愿意回忆那段浅薄的岁月。并以此为傲。</p>
<p>章节 15<br>  这个世界不单是女人有虚荣心，男人也有。有时候起来的早，跟舍友在侃大山，他们说起姑娘，我也会提起C。说她前面如何大，如何骚。舍友就一个劲鼓动我去搞。我只能打着哈哈说算了。要找工作了呢。其实心里早已垂涎三尺，苦于无胆无机会。想想我也不小了，竟然女生都没碰过，也挺丢人的。<br>  有天晚上8点多，我上完白班从网吧出来，正好碰到A说今天晚上我们出去玩玩。在宿舍我也听舍友说过关于酒吧和KTV的事，我总觉得那些东西好贵。芝华士十二年要500，十八年要900，皇家礼炮要1800多啊，1800多啊，父母辛苦一年种几亩地，卖出去的粮食也不过2000多点。我实在不敢去消费，也没那个闲钱。所以我当时就拒绝了A，很明确的说没银子。A说既然我叫你，就我买单嘛。我不知道他的钱哪里来的，我也不想问。<br>  那天他还带我去吃了顿烧鸭，吃完已经10点多了。然后A拦了辆出租车，对司机说：“XX路。”</p>
<p>章节 16<br>  父母虽然一辈子都在耕种，没读过书。但是从小到大，他们都告诉我要善良，要脚踏实地。不要做出轨的事情。老天保佑，大学里那么多的声色犬马，我都没有跟随。也算是听话的好儿童了。那时我已经21岁了，上班，看书，睡觉，和我那些风流成性，一掷千金的同学来说，我实在是默默无闻，甚至走在路上都没有人会看我一眼，而那些我向往的姑娘，也只会轻轻从我身边走过，像一阵风，或者天上的一朵云彩，再美丽我也无能为力。那是那时的我，一无所有，两手空空，城市的华灯耀眼，却没有一盏灯为我而亮。<br>  XX路是本市出了名的红灯区，当时我就瞪着看A。A笑了笑，说：“有什么的，去去嘛”。江湖传言中那条街是肉弹横飞，大腿林立，柳下惠经过都要双脚发软，欲罢不能，很多大学男生就是在哪儿结束了可耻的处男生涯。而且物美价廉，泰式到全套，吹拉弹唱十八般武艺无所不能。那时候我的小心肝可是跳得厉害，从来没见过女人的胴体，难道要开先例了？<br>  到XX路时，哪里早已是一派粉红世界。小姑娘到大妈，长相清纯的到小C类型的，果然是名不虚传，看看都得发硬。小A下车后拉着我直奔一家按摩店，说又不那啥，按摩一下嘛。虽然我没去按过，但是我也知道，那不是什么好地方。<br>  按摩店分两层，下面是个门面，姑娘全在上面，我跟着A跑上了二楼。老板说让我们自己挑姑娘，我不太好意思，主要是觉得那么多人站那儿让我挑，看着我，让我觉得不自在。于是我说随便吧，老板嘻嘻笑，说那行，我给你找个。<br>  说是按摩，其实就是那点事儿。按摩那姑娘长得一般，大概只有18岁的样子，穿着个旗袍。一进来就关门，以极其娴熟的速度脱掉旗袍。留着蕾丝的小内和胸罩。几乎在一瞬间，我就充血了。心里像被猫爪一样不知所措。那姑娘爬上床，让我躺下。一边按一边跟我说话。问我乱七八糟的事情，就差叫我把户口本拿出来了。我很不耐烦，她倒是越按越敏感，终于小弟弟不自觉地抬头挺胸了。她是不是故意碰着哪里？我尽量让自己平静，不喘大气。其实全身早就鸡皮疙瘩起遍，头皮发麻。那姑娘见我没说话，终于更进一步了。直接按向我脐下三寸：“帅哥，这里要按不嘛。”<br>  难怪人人都说美女值钱，帅哥不值钱。原来30块钱一小时就能买个帅哥称号，真他娘的廉价。其实照照镜子我也知道我顶多算不丑，帅哥就拉倒了。我吞了一口口水，鬼使神差的没有作声，只是笑了笑。玉手之下，岂有完卵啊？<br>  那天夜里下起了零星的小雨，整个城市都散发出一股淡淡的泥土味道。和A从按摩店走出来，那姑娘的模样像滴入街道的雨水一样渐渐消融，还在刚刚，和她有着最亲密的肌肤接触。而现在，我却再也不记得他了，更不知道她姓谁名甚。<br>  临走时她穿好旗袍，背对着我说：”亲爱的，帮我拉下后面的拉链。“我心里作呕不已，谁他娘的是你亲爱的。旗袍上绣着很多大红花，那条长长的拉链看起来鲜红无比，像一条永远无法愈合的伤口。</p>
<p>章节 17<br>  A拦着我的肩头，说哥们儿怎么样。不错吧。我笑了下，微微点头。正想往前走，就听到C在叫我。我抬头一看，她正用一种尔不过如此的眼神看着我，顿时让我羞愧不已，恨不得钻进裤裆。<br>  C走上前朝我身后看了看？指着问，进去过啦？A连忙帮腔，说就是带他来看看。嘿嘿。C戳了戳A的额头，你小子，别把人带坏了。很久之后我才知道，A不过是丢了块砖头给我，而我才是出玉的人。黑白不分，善恶不明，再也不提年少的纯洁与美梦。<br>  跟C打过招呼，A又拉着我去吃东西。我说刚吃了饭，又去宵夜啊。他哈哈大笑，声音淫荡无比：“就当是补补嘛，”我心想有人买单，既然如此恭敬不如从命了。<br>  其实那天吃东西我完全没心思，当了十几年好学生，竟然被熟人看到我那啥，实在让我觉得不舒服，好像全身都有毛毛虫爬，坐立不安。<br>  倒是A一个劲的说得天花乱坠。郭德纲之辈都望尘莫及，估计听了都恨不得拜他当师傅。我几口绿豆汤下去。他已经跟多个美女有过巫山云雨了。从牡丹江边到南中国。从格尔木到上海外滩。早上还在和北京小妞调情。晚上就到了九龙涂炭香港同胞。冬天在三亚和美女水中嬉戏。春天跟藏北的女信徒共度灵河。也不怕佛祖一巴掌拍掉他的小弟弟。牛逼到张伯伦都自愧不如，西门庆要挥刀自宫，登徒子都不能算根葱。我赶紧又给自己喂了一勺子绿豆。那口甘甜的绿豆还没进入我胃里。A又开始意淫国外形势。东亚尽在手中，西欧不在话下，大洋彼岸也不过一个媚眼，估计除了死去的玛丽莲梦露没被他意淫过。他对泰国人妖都实行过精神强奸。若不是丫跟我畅谈过去，展望未来。恐怕连孩子都生了一打了。让我顿时觉得羞愧无比，疚于耽误了他的时间，心中不由长出八尺卑微内伤，暗涌淤血几升。也终于明白猪肉为什么这么贵了。都他娘给母猪口交去了，哪会进屠宰场啊。<br>  手淫强身,意淫强国。真理啊。</p>
<p>章节 18<br>  这座城市的夜色总是让我不安，越觉世界在不停的下沉。从我身边走过的每一个人都似乎心怀不轨，非娼即盗。那些擦肩而过的浓妆淡抹，不管是否有我心仪的面孔，都会让我顿觉失落。他们如此美丽迷人，而我却了无一物。<br>  梦想是好的。瞎想也是好的。一切结束后现实依然红果果的站在我的面前，奶奶曾经跟我说过这么一句话；“晚上路千条，白天旧模样。”有时候就算用尽一生的力量，你也永远无法去改变什么。<br>  就像小A，小C，就像我。<br>  那天夜里吃完宵夜后，雨已经停了，我们悠哉游哉的走在午夜的街道上，A依然说着那些姑娘，那些或真实，或虚拟的姑娘，我分不清（HX啊，XX）真假。但是我唯一知道的是，她们已经不在他身边了。<br>  路过XX广场时，周围是高楼林立，彻夜不眠的灯火。A突然停了下来，深深吸了口气：“这么多盏灯，怎么没有一个是属于我们的家呢？”他看着我，像是不可反驳的质问。</p>
<p>章节 19<br> “你小子到底进去没。”小C问我。<br>  其实那天夜里看到她，我就应该明白，一个小姑娘去那种地方干嘛？我直直的看着她：“那你去哪儿干嘛。”<br>  小C从收银台绕出来，杏母横瞪：“几天不见你冲了不少啊。”<br>  那时我已经学会如何见杆子就爬了，管你是烈女还是荡妇与我何干？我歪嘴笑了笑：“你不会在哪儿做兼职吧。哈哈”<br>  C立马就发作了，小嘴一嘟，粉拳如雨，以排山倒海之势朝我压了过来。我赶紧避让。<br>  她站在原地跺了跺脚：“我住那边儿的！”</p>
<p>章节 20<br>  2010年1月，我已经在一家公司正式上班了，普通的工作，薪水2500，啥保险都不买。有天我去给客户送文件，说来也巧，当天正好一份说明文没带，我就去网吧上Q，找同事发过来，准备在附近复印。而那个网吧的网管，竟然是原来那个大网管。看见我进来，他立马认出我;”很久不见哦，哪里发财嘛。”我抖了抖手上的文件：“给人打工呢，发什么财。”那厮笑了下，给我递了根烟，说有大学文凭就是好啊，随便都找个工作。不像我，当了这么多年网管，还是网管。我抿嘴笑了笑，不知道该说什么。他又似乎不太服气自己现在的生活：“以前，我也挺不错的，对吧。网吧技术都是我管呢。”我知道我已经不需要说些什么了，找了个地方坐下。想起大半年前的那个下午，他走出网吧，被几根熟铜管放倒在地下，打得叫天喊地，像一头被人拉上屠场的猪。而他钟情的那个姑娘，C，也只当他是个玩物而已。</p>
<p>章节 21<br>  A伏在我的耳边说；“你知不知道，C跟大网管有一腿。我去厕所时候看见的。”我转过头，一脸惊讶的表情看着他：“是吗。不可能吧。”<br>  A又端坐在电脑前面，敲打着键盘：“真的，不骗你，估计是个人都能干她。”<br>  临近7月了，毕业证到手了。简历投了无数份，可总遇到不是跟网吧差不多薪水，就是骗人的勾当。我整天坐在网吧发呆，小C问我你工作怎么样了。我摇摇头，一脸阳痿的样子看着她；“没着落。”<br>  她依旧是拖着下巴，露出个乳沟，白花花的咪咪诱人无比,一副替我着急的样子:“先做着这个吧，找到了再走也不迟。”<br>  你知道，任何一个姑娘，哪怕她貌似无盐女，哪怕她是个人尽可夫的荡妇，她依然有温柔可人的一面，足以在一瞬间融化任何一颗坚硬的心。让你瞬间荡起柔情无数，甚至让你以为在那一瞬间爱上了她。我必须承认，那时我的心在扑扑乱跳。<br>  转过头去，就看见A正在噼里啪啦的打着一句诗：“城市的尽头我两手空空，悲痛时握不住一颗泪滴。<br>  韩寒说狗是一个很奇怪的动物，能把莫不想干的两个人联系起来。比如他和四姐。有时候诗歌也是一个很奇怪的东西，能把两颗距离很远的心联系到一起。看到A写下那句时，顿然明白他身后那些未曾提及的人或者事。一切的谎言都会有所指向，不是空穴来风。<br>  他继续写着字，大概是说理想很难实现，就算富足，也觉得空虚。除了满肚子愤世嫉俗理由，再也不能为生活找到任何意义。那时他是富家子弟，衣食无忧，成天开着车在偌大的城市里闲逛，而姑娘又太浅薄，挥挥手就能跟着他走。写完后他又习惯性的吸了口气，而就在不久前，他还在一个夜里，喘着来历不明的现金，走进按摩店，接受30RMB/小时的服务。我理解他的谎言，理解曾经被现实逼得无所遁形，吃一碗稀饭两个小包子的早餐，把3块一碗的米线当晚餐，穿着整个冬天都没换的风衣，脏脏的牛仔裤，头发油腻腻的。他用这样异样的方式书写着他的理想，铜细万千，美女投怀。 </p>
<p>章节 22<br>  我一向觉得庆幸，虽然不能来自富豪之家，甚至算不上小康。但是我却在生命最黯淡的时光中，看到了理想的光芒，那是我的，是A的，是C的。有什么比窥见灵魂的闪动更让人觉得惊心呢？<br>  “我要努力存钱,给家里买电视。”“我要努力存钱，让爸妈过得好点。”….我觉得我从来不了解一个真实的C，虽然她曾在酒后向我吐露真言。但是无论如何，这个姑娘在心底的最深处，依旧是善良的。可是如今，我眼前这个衣着暴露，行为放荡，眼神随时都带着挑逗的姑娘到底是谁？<br> “我是你娘。”C说<br>  那天她正站在网吧的大门口，指着我破口大骂。<br>  你可以侮辱我，侮辱我的人格，甚至尊严，但是你不能侮辱我的父母。我始终相信任何深厚的情感，都会造就一个勇敢的决定。我走到她面前，一巴掌煽了过去。打得四座无声。A那时正在上网，向犊子一样从座位上串起来：“你们干嘛啊。”<br>  父亲一生朴素，没做过一件出轨的事，和母亲更是相敬如宾。在丈夫打妻子习以为常的地方，简直是个异数。在我离开家去上大学的前一夜，母亲叮嘱了我很多。我记得她说过这么一句话：“你也不小了，如果找到女朋友，可要对她好啊，城里不同乡下，千万别动手打人，人家姑娘会伤心的。”那是2005年8月27号的夜里，她两鬓已现斑白，大半辈子都过着辛苦的生活，眼泪像滑落的珍珠般在我眼前流淌。<br>  四年后，我终于第一次背离了母亲的嘱咐。带着恼怒和焦躁的心。那天下午整个城市都万里无云，晚霞把整个城市都映得通红，太阳像一个巨大的血窟窿历历在目。<br>  我不想拿六百八百一月的工资，不想毕业后如A一般厮混，我想要一份稳定的工作，一份合适的工资。让弟弟有生活费，让母亲不用再如此劳作。想必那时，她正在从地里回家的路上吧，在沿途会用溪水洗手，顺便喝点清泉解渴，然后回家劈柴做饭。<br>  远在千里外的家炊烟袅袅，而我却站在整个孤独的城市怒气不止。<br>  C摸着自己通红的脸，哇的一声就哭了出来。泪水横流，目光如炬。让我内心无法平静，站在那个夕阳曾经是谁的眼泪也让我如此动容？站在那个夕阳西下的黄昏，所有的往事和无奈的现实如浪花般席卷而来，夹杂着C的泪水和嘤嘤的哭泣，让我一时不知道何去何从。</p>
<p>章节 23<br>  那天我回到宿舍后，心情久久不能平复。舍友的音响里放着朴树的歌：<br>  ……..<br>  请快些寄给我一把镰刀 让我回来收割你的眼泪<br>  ……….<br>  A打电话约我出来喝酒。我想他跟我一样，在这个城市没太多朋友，除了上网也没有其他的东西可以打发时间了，某些时候也如我一般需要有人陪伴。你知道的，孤独不可怕，可怕的是无法消散的寂寥。<br>  那天我喝了很多，在街头的大排档，但是心头清醒无比。A也是喝得醉醺醺的，说：“姑娘算个毛。C那婊子，打了就打了，那是她自找的。对吧。”他把酒杯高高举起：“来，一口闷。”<br>  已经是盛夏了，晚风带着阵阵凉气习习而来。啤酒冰冷，顺吼而下，让我的心涧寒意四起。<br> “你怎么能动手打人呢？”A站在C的旁边说。<br>  投了N份简历，面试几次碰壁，心情烦躁无比。而且还是透着白班去的。回到网吧小C问我怎么样，我低着头不做声，只是不停的摇头。我从来不曾觉得网吧的空气如此沉闷，又慢悠悠的走出网吧，站在门口的台阶上抽烟。小C蹦跶着走出来；“抽闷烟啊，慢慢来嘛。”我心想，你又不是我，当然不知道着急。埋着头叹了口气。小C嘴巴一撅：“还是个爷们呢，这点事儿都唉声叹气。”<br>  弟弟早上打电话来，说：“哥，你能寄点生活费吗，上个月本来还有的，前天全买学校的学习资料了。”他的声音很小，唯唯诺诺一般。我问他那你这两天吃的什么。他沉默了好久。“你说啊”我一下就吼了出来。“馒头”弟弟在那头慢腾腾的说着两个字，像是要哭出来一样。<br>  我知道我没控制住自己，也许那天下午我根本就不想控制。回头看了看C：“你谁啊，关你鸟事。”<br> “我是你娘。”<br>  以后日子，当我想起这件事，我都恨不得给自己一耳光。我知道C的那句话并无恶意，因为她还带着微微的笑意。可是我依然挥出了那一巴掌。<br>  你怎么能动手打人呢？”“怎么能动手打人呢？”A从椅子上站起来说。<br>  我坐在大排档的橡胶椅上，手指轻轻弹着空荡荡的啤酒瓶，双眼死死盯着A：“你确定他是婊子？”</p>
<p>章节 24<br>  暑假到了。网吧的人流一下少了很多。大网管也没来过了。老板说白班夜班一个网管，一个收银就够了。<br>  但是A却几乎每天晚上都来，有一次我去厕所，隐隐听见他声音，已近是夜12点了。我听见他说：“准备睡觉呢，工资还没发，你叫爸爸给寄点来吧。”“有，有，五金保险全都有。”“是啊，一年了，老板说涨工资呢。”<br>  我不想打扰他，便又折了回去。C好久都没有理我了，只是有时说着不痛不痒的话，她依然静静修着她的指甲。A从厕所出来时带着兴奋的表情。看到我就说：“女朋友的电话，他不让我夜里在外面。”我什么也没说，只是含着嘴唇笑了笑。<br>  A总是在日志里含蓄的写着QQ日志。有一次他在日志里写了一段类似叶芝式的句子：”无人眷顾我的年华，无人看到我的理想，只有你，在黑夜淌进我的心田。”</p>
<p>章节 25<br>  以色列国王所罗门曾在《雅歌》中如此赞美新娘：你的颈项如象牙塔，你的眼目像希实本巴特那拉并门旁的水池。<br>  多美的诗歌，多美的象牙塔。而当我跨进大学这坐标为象牙塔的地方时，却从来没有看到新娘般动人的容颜。饭堂里永远有人上下其手，互相乱摸，夜里的小树林永远有人在鬼鬼祟祟的做着什么。宿舍有一个虔诚的基督教徒，自称三代信徒，非信上帝者不娶。此教徒每天早晚必念圣经，阵阵有词，还不停给宿舍的人布道。有时候他念着圣经，有人却放着日本床上武打片。。。恩恩啊啊啊。。。听起来是十分带劲。<br>  有时看着那本页面被刷成粉红的《圣经》，我心里竟然会升起一股恶毒的念头，越看越像红灯区灯光的颜色。如果上帝被诱惑，大概也免不了犯错吧。<br>  不是我不愿乱摸，不是我不愿做鬼鬼祟祟的事，我骂着好13被狗X了，骂着大白菜被猪啃了。想来好笑，如果有机会，我何曾不想当回猪？我渐渐发现，不是我善良，而是我受的诱惑不够，或者说从来不曾受过诱惑。<br>  我觉得应该向C道歉，那天是我不对。</p>
<p>章节 26<br>  我跟A说:”你帮我把C约出来。”<br>  那时他正在看着各种豪华跑车的照片，歪着头斜了我一眼：“约那婊子嘛.”然后指着显示器，两眼冒光：“你看，这些车，等我有钱了。。”<br>  每一个人都曾有过关于金钱的憧憬，一夜暴富，财神临门，瞬间中了几千万，香车美女，灯红酒绿，在那些遥不可及的姑娘身上喘着大气，让她们变成世间最淫荡的女人，或者在从未涉足的场所挥金如土，引来侧目无数。你会忘了一切，忘了你身在何处，甚至从未觉得时间如此短暂。<br>  A又狠狠吸了几下鼻子：“。。。对吧，姑娘们还不都往我这里跑啊。”<br>  我始终是一个农村出来的人，A始终是城市最底层的人。我们没有任何资本可以自豪，只能梦想着有一天能够自豪。<br>  A从未提及他的父母，除非他是富二代的时候，他才会在白得扎眼的输入框里说，Daddy出国了，不知道何时才会回家。mammy也总是喜欢去澳门玩大富豪。弄得我只能天天跟家里的保姆们面对面。然后他又迅速地在保姆后面加了个“们”，保姆们面对面。。房子太大了，空荡荡的感觉，让人闻不到一点外面的气息，这样的日子，真没FEEL。似乎他家是住在香港浅水湾或者三藩市一样。满嘴的羊骚英文味。<br>  那时他正坐在网吧里，已经是7月了，老板终于肯开空调了，带着一股臭臭的味道，夹杂着烟草的缭绕，各种像腐烂的豆瓣酱一样的脚臭，还有泡得太久的方便面发出的余味，以及那些劣等胭脂香水味。几个穿着引人犯罪的姑娘从他身后悠然而过，甩着手里低劣的提包，高跟鞋发出滴答滴答的声响，消失在网吧门口，融进了无边的夜色。</p>
<p>章节 27<br>  城市日复一日的繁华着，华灯初上之时，每一个人都有一条回家的路，但却没有一条路属于我。我不能去高档的酒楼，不能开着拉风的汽车，哈根达斯，星巴克之类的地方，我都只能远远看着，就像看着夜空中那些不可抚摸的群星。<br>  所以我也不能带着C去什么地方吃饭，也不能给她买东西赔礼道歉。白班结束后，我在附近的菜市场买了半斤排骨，半斤瘦肉，一根萝卜，还有1块2一斤的青菜。经过楼下的卤菜摊位时，又买了两块八毛钱的卤豆腐。<br>  那时我已经毕业了，学校再也住不了了。280一月的合租屋，厕所合用，厨房合用，一切可以合用的都得合用。整个楼房是上世纪90年代的，楼角长满了青苔，楼道里永远没有路灯，墙壁上贴满了各种广告，开锁，治性病,通下水道，办证，还飘散着一股尿骚的恶臭。住户们对此很不满意，有人在那些密密麻麻的广告标签上写着大大的毛笔字，贴广告死全家，乱撒尿烂JJ，砸烂灯泡遭雷劈，连着祖宗十八代都问候完了，我想那些话如果能够应验，那么中国肯定不会是第一人口大国。<br>  这是农村的习惯，我知道有时候一些与生俱来，被日以继月熏陶的本质，永远都没办法从我身上剥夺。我做了几个菜，煲了一小锅汤，以此宴请客人。<br> “小C说，“有人做饭干嘛不去。”她又指了指我；“记得买点啤酒。’一脸我欠了她几百万的样子。<br>  A始终不肯去帮我叫C，甚至不愿来我破旧的出租屋。我只能亲自出马了。也许他在笑我，竟然给一个婊子做饭。</p>
<p>章节 28<br>  我一直相信，任何卑微的生命里，都有一颗骄傲的心。年少时一无所有，但是你可以是翩翩美少年，迷倒少女万千，无关金钱，权利和任何的物质利益。成年后也许你依然两手空空，但是那时你胸中万卷，腹下千言，才华横溢。终于你老了，容颜不再，江郎才尽，油光满面，大腹便便，不过也许你已成家立业，儿女在膝，娇妻在房，能看着N张房产证和银行卡上好几个零暗暗自喜。<br>  A也一样。他在那些黑白堆砌而成的字里行间说，我三岁就识字，七岁背唐诗，作文基本都是满分，看过的书比某些人见过的书还多。他不会扫地，不会洗衣，不会下厨，当然，更不会给婊子下厨。那时他是出身书香门第，名门望族，闲时读书练字，观花逗鸟。忙时周游四方，行便四方。笔墨之间尽显风流。书房也贴满了祖辈们的字画。只不过后来遭遇文革，家道中落，但是却独善其身，不为物欲所动。钱？哼，粪土罢了。<br>  那时网吧来了很多宣传游戏的，带来很多海报，老板说你们给贴上去，贴上去。泡沫横飞，口水乱吐。XXX公测，跟XXX一起看美女，跟美女一起玩XXX。那些不是水墨泼就得山水图，不是狼毫写出的黑字，只是一张张泛着光的复制品。A就坐在他们下面，就像坐在他家的书房一样。而我知道，那不过是一个网吧。</p>
<p>章节 29<br>  李叔同说人嘛，就是要干一行像一行。所以他是公子哥时风流不羁，成了文人就才高八斗，当画匠嘛，那就技惊四座。最后他终于去做和尚了，死时说：‘问余何适，廓尔亡言。花枝春满，天心月圆。”人生似乎就是这样，茫茫红尘，前路不知所向。唯一能做的就是活着等待，等待春满花开，皓月当空。<br>  我没办法住进偌大的别墅，买下一桌的满汉全席。所以C来时，我告诉她：“出租屋有点小。菜也不多”那时我站在食物链的最底层，向往狼虎之心，却手无缚鸡之力。<br>  小C突然变得很娴静，说话的声音像一汪秋水散开的涟漪，悄无声息的漾进我心底最柔软的地方：“刚毕业嘛，都是这样。”她昂着头看着我，脸上的笑容像一颗含苞待放的蓓蕾，在我眼前瞬间绽放。<br>  那是我命中的第一朵桃花，岂能不记得绽放时的美丽？<br>  我一直不愿跟A吐露心声，但是却需要一个人来给我指点迷津。不过我又无法向任何人启齿，别人口中的婊子，有着不是那么美丽的脸蛋，不是那么完美的人生过往，也不是天才横溢的女人。我看见面前有一堵巨大的墙壁，所有的流言与非议的目光朝我逼迫而来，离我年少时的心越来越远。<br>  对，她不过是个婊子 ，曾经在我面前和别的男人缠绵。<br>  A说上吧，上吧。反正是个婊子。<br>  那是我生命中的第一个女人，披头散发，喘息不止，在暗淡的灯光下显得面目狰狞。也许是第一次碰女人的缘故吧，没有像别人所说的几十分钟一个小时的持久，恐怕连五分钟都不够，我就已经像融化的沥青一样瘫软在身上。<br>  她紧紧的抱了我很久，然后又捏着粉拳打在我的背上，带着娇柔的声调：“坏蛋，你要把我压死啊。”</p>
<p>章节 30<br>  公司的生意很好，每个星期都得陪着客户，那已经是2010年的1月了，吃饭，唱K，找小姐，其实前面两个都是个过场，最后一个才是正题。无数次将来路不明的女人搂在怀里，无数次在陌生的脸庞边醒来。我不敢亲吻她们，不敢用嘴唇接触她们的肌肤。<br>  我看着她们在走进房间的数分钟里变得一丝不挂，然后告诉我：“快点来吧。”可是当荷尔蒙挥发之后，欲望在一瞬间戛然而止时。我一遍遍问着自己，你是想念那第一张并不完美的脸庞，想念她在我怀中如襁褓里的婴儿安睡，任由她嘴鼻间的气息在我赤裸的身体上游走，还是眷恋这一个个描眉画眼，胭脂玉体的女郎？谁才是曾经占据内心所有的那个人？<br>  我有着一颗不可抑制的窥探之心，企图将内心所有的恶念与虚荣驱赶，将所有的丑陋和挣扎放在眼前拷问我的心灵。可是我做不到，那些血肉模糊的尴尬，任何人都难以直面，当然，也包括A。<br>  他总是独来独往，除了我，再也无人与他对坐，听他口中的过往与未来的理想。7月的夜里热的让人抓心挠肺。A告诉那些素未谋面，也永远不会见到的陌生人：他曾经的女友们都走了，她们漂亮，善解人意，她们有的出国了，有的怕太爱他而决绝的分手了。在他爱过，和爱过他的那些女人中，每一张面孔都足以惊动世人。每一次牵手都让人心如鹿撞，每一次的微笑都让人如痴如醉，还有她们的拥抱，带着无法抗拒的柔情和炙热。可是她们都走了，他只能在厮混中度日，他不喜欢那些漂亮的陌生的姑娘，她们算什么？有钱就能上，婊子，全他娘的是婊子。<br>  A的神情痛苦不已，然后把手高举过头顶：“网管，拿包5块的XX烟。”那是7月盛夏的夜晚，终于下雨了，夹着夏风呼啸而来，水滴倾盆而下，湿润了每一个渴望温暖的怀抱。</p>
<p>章节 31<br>  弟弟从学校打电话来，说学校要放假了，这月就不用寄钱了。我听了悠悠说了句好，正准备叮嘱他假期多帮家里做点农活。弟弟就带着笑嘻嘻的口气问我：”妈让我问你啥时候娶媳妇儿。”农村结婚都早，奶奶生爸爸时才17，我出生时母亲才19。我呵呵笑了下：“早着呢，哪儿有这么快。”“妈让我问的，妈让我问的….”<br>  那是我人生中最灰暗的日子，没钱没车没房子，甚至前途都没有，跟一个不算漂亮的女人开始我的爱情。但也是我人生中最觉得幸福的时光，每天上班，拿出多的薪水，下班一起买菜，一起做饭，闲聊，ML,相拥而眠。放假时陪C逛街，那真是名副其实的逛街，几乎不买任何东西，经过那些光鲜的服装店，那些巨大的广告牌，C总会用余光看一看，然后把手挽得更紧，头贴在我的臂膀上。跟我说着她想说的话。有时候我真希望时间就这么过完，朝着那些人潮涌动的街道一直走下去，永不停止。<br>  她不会气势汹汹骂人了，也不会咄咄逼人的说着放荡的话，有一次我们无意说起了那一巴掌，她就不说话了，用画着劣质眼影的眼睛看着我，一行泪水从眼睛里滑了出来，接着另一行泪水也幕然而出，皱着眉头，嘟着樱桃小嘴：“你还打我，你还打我。”听得我心头发酸，两眼湿润，只能紧紧的把她抱在怀里。<br> “你跟C在一起了吧。”A跟我说。</p>
<p>章节 32<br>  我歪着头看着他：“没有啊.”A咯咯直笑，拍了拍我的肩膀：“别不承认。”<br>  A终于恋爱了，跟一个网络上的姑娘，那个女人几乎占据了他的全部夜晚，似乎是从贴吧找来的。从那时起，A一到网吧就会戴上耳麦跟那个女人聊天，可是他从来不开视频。从别的地方照片发过去。我不知道那个女生的模样，不知道她身在何方。我唯一知道的是，她成了A的一个寄托。A帮她冲游戏卡，冲Q币，甚至冲电话费。后来我才知道，那个女人跟我们在一个城市。<br>  A在浏览器上继续他的生活，他是有着如花美眷，似水流年的少年，喜欢穿帆布鞋，牛仔裤，白色的衬衫，头发清爽和干净。不抽烟，不酗酒，依然是一个羞涩的处男。聊天窗口的肉麻漫天直飞，足以麻倒远古恐龙。但是在他笑容满面，露出两排被烟熏黄的牙齿，眸子里尽是幸福的表情。<br>  他偶尔跟换ID，说终于把喜欢了好久的姑娘追到了。大家说我该护她吗？人家是很清纯的小姑娘呢，家境富裕，弹得一手好钢琴，画得一手好画，说起话来让人全身发酥。然后又不知去何人的博客里弄来一张照片，大家看看，怎么样？<br>  不是所有的事情都会那么敬如人意，A也会有烦恼。他告诉网线另一端的那些人，说我不是单身了，有个女生还说喜欢我，准备做我的备胎，我应该答应么。他依旧是那个少年，不过多了几分烦恼。是啊，多好的姑娘啊，虽然不够女朋友漂亮，但也不赖，只是希望在她有空时陪着我。我要答应吗？要答应吗？A抬起头，看着网吧前面上的海报，伸了个大大的懒腰。<br>  政府下政策了，来网吧上网的要身份证了，未满十八岁的不准进来。A每次都会拿出那张洗的皱巴巴的第一代身份证，上面的他是16岁时的样子，短发圆脸，畏畏缩缩的感觉，似乎在恐惧着眼前的镜头。</p>
<p>章节 33<br>  7月末收到好几个公司的面试，花38块买了件衬衫，65块买了双皮鞋。我说过，C的骨子里还是渗透着善良和朴实，她会在出门前把鞋擦得干干净净，像新的一样，皮油是没必要了，就用报纸和厨房的油布也行。<br>  趁着白天上班，我又好几次偷跑出去，面试时倒是很顺利，可是接下来，却没收到一点消息。C还是修着她永远修不完的指甲，时不时朝我吐着舌头。A依然每天坐在网吧，穿着洗的发白的牛仔裤，带着黄色污渍的白T恤，还是那双蓝色的人字拖鞋，双腿不停的抖着。<br>  他说工作很麻烦啊，手下的员工不做事儿，老是给我找麻烦。出差公款乱用，出去跑业务只会偷懒。有些大学毕业生一个季度下来都没什么业绩。唉，谁让我心不够狠呢，是新人，就让他们慢慢跑吧，大家出来混都不容易。不过真不知道他们月薪2000多怎么活下去的。<br> “该怎么活怎么活呗。”C用双手揽着我的脖子：“我要求又不高，工作慢慢来嘛，好不？”然后在我脸上重重的亲了一下。</p>
<p>章节 34<br>  给老妈取个名字叫mummy，给老爸取个名字叫Daddy，没过多久，似乎住在香港或者三藩市的A也给自己取了个英文名：Charles。<br>  Charles的空间越来越漂亮了，开着10块一月的黄钻，到处搜集着煽情或者美妙的帖子。相册的姑娘越来越多了。个个都是月画烟描，粉妆玉啄，长发飘逸，短发宜人，要不然就是烈焰红唇，热情无比，或者含唇窃笑，小家碧玉。看得人眼花缭乱，只感叹美女都以相机为家了，是不会落入凡尘一步的。<br>  在那里，我也见到了多年前的A,面颊白皙，也不是圆嘟嘟的感觉了，站在不知道何处，背靠一辆跑车与一枚美女合影，笑得春光灿烂，河水倒流。有人在下面留言问：你女朋友？ Charles回复说：嘿嘿。。。<br>  “嘿嘿，这是D。”A指着那姑娘说。<br>  小平同志教育我们说实践是检验真理的唯一标准。同理，姑娘也是。<br>  那天A穿着新买的T恤，干净的牛仔裤，鞋子也弄得一尘不染。D站在她旁边，裤脚略带喇叭形状，奇短无比的吊带，胸几乎就是没有，更让人崩溃的是，还穿着一双红皮鞋。<br>  那次A很大方，买了饮料，小吃。然后从口袋里拿出软玉溪，抽出一根转身递给我，抿了抿嘴，露出一个很浅的笑容：“来，抽一根。”<br>  那一刻时间仿若倒流，我看到一个头发油腻腻的家伙，穿着单薄风衣，脏牛仔裤，人字拖，在我耳边问：“你有烟不，我不记得带钱出来了。”</p>
<p>章节 35<br>  终于等到换班了。工作也有着落了，面试几次，终于有公司通知我9月上班了。就是我现在这家公司，做软件，跑客户。前三个月没业务要求。薪水整整打了一个滚。弟弟下学期的生活费不用愁了，有多余的还能给家里寄点。接到通知那天下午，C买了做了很多菜。在纸箱做成的小饭桌前，她坐在小板凳上，弓着腰，握着一次性的塑料杯子，傻笑的看着我。就像以前一般，露出半个咪咪，红唇无限接近，饭是没心思吃了，我站起来把她一把拉到床边按了下去。<br>  第二早上被电话吵醒，A问我晚上去不去酒吧。我知道那地方消费贵，不是我能负担的。A也许根本没打算让我买单：“我叫你去的嘛，肯定我买单。”<br>  那是我从未涉足的地方，巨大的音响发出震耳的声响，红男绿女喝得天昏地暗，在暗淡的灯光下，所有的脸庞看起来都暧昧不已，似乎随时都能欢迎一具陌生躯体的进入。A抱着D，指着桌子上的瓶子：“这个芝华士….”我端起那些红茶兑过的酒精，用小得可怜的玻璃杯一口饮下，苦涩不已，在我看来不过尔尔。无奈人视之如醇醪,而我以为是砒霜，虽然毒不死我，也不见得是什么好东西。但是它们却被人群一次次高举，DJ高喊着：“今天有寂寞的人吗？”人群振臂高呼：‘有。”“有晚上不回家的吗。？”他们声嘶力竭：“有。”<br>  在那个夜里，我一次次举起杯盏，喝下并不喜欢的暗红液体。舞池喷出层层白色的烟雾，灯光缭绕之下，环肥燕瘦的姑娘，身姿婀娜的舞者，所有人都喜笑颜开，如同置身人间天堂一般。<br>  不久之后，我开始习惯他们。就像他们是我自己一样。忘掉那些白皙如雪的面孔，忘掉那些水晶般剔透的眼眸，忘记那些干净清澈的笑脸。以及那些儿时的嬉戏，发小的挚情和未曾到达的理想。理想？回忆？甜蜜？能当饭吃吗？<br>  客户说那陪酒的白衣服姑娘不错啊。我晃晃悠悠的端起酒杯，走向白衣女郎，翘着二郎腿坐在她旁边，用食指撩了撩她的头发，又回头指了指客户。那头满脸坑坑哇哇，手毛奇长，还带着淡淡腋臭长得像猪一样的客户。姑娘雪肤花冒，作蹙眉之态，缓缓向我伸出五根手指：“五百。”<br>  那是谁伸出的芊芊玉手，如置身于寒风中微微颤抖？ </p>
<p>章节 36<br>  准备开毕业聚会了。我觉得应该去。同窗四年，不过一起吃过两次饭。<br>  2009年8月1号，我那傻13舍友，一身酒臭，满目血丝，饭后在酒吧抱着姑娘上下其手，猛扑狠啃，像头发情的野猪。在他所有的同学面前出尽了洋相。<br>  我还记得三年前，那是宿舍为数不多的几次吃饭，11块一位的自助餐，酒水另算，米饭免费。他也曾在那个黄昏喝得狂吐不止，然后嚎啕大哭，涕泪俱下。彼时晚风微微，冷月高悬。在昏黄的路灯下。他抱着我的腿大声嚎叫，“我要她。我就要她。呜呜呜呜。我就只要她。”那年他十九岁，哭得像个丧母的幼雏。<br>  如今姑娘已不是那个姑娘了，眼里的血丝取代了泪水。白天上班，晚上瞎混。我亲爱的傻13舍友。你还会记得那个为之泪下的姑娘么？三年的光阴流转，是谁让你的满腹柔肠化为乌有？<br>  那时我未经人道，不知爱情有如此魔力，能让泪水挥洒而下。</p>
<p>章节 37<br>  A说：“你觉得她怎么样？”那个她是D，一个穿着红皮鞋，不太会打扮的姑娘，一个并不是那么美丽的姑娘。他望着我，带着小心翼翼的眼神，像是怕打碎脆弱的瓷器一般。<br>  当时A正走进网吧，站在我面前问了这句话。<br>  我咧开嘴巴，露出一个大大的笑容：“你喜欢就好。。。。”其实这不是我想说的全部，我还想告诉她，“别管别人怎么说。”可是我始终没开口。看着他掏出那张依旧皱巴巴的身份证，交钱，上机，登陆QQ…..重复着那些似乎不会改变的动作。<br>  你知道男人的一生总会经历很多女人，不管他们是貌若天仙，还是长相平凡，甚至带着几分丑陋和粗俗，但总有那么一个时刻，会让你砰然心跳。<br>  八月了，到月底我就可以辞职了。A还彻夜的坐在网吧，而我再也不曾见过D了。黑幕茫茫的夜空，像是一条悠长隧道的入口。A就坐在着黑夜之下，那是那一刻的他，毕业了，工作找到了，工资也不少，但是跟女朋友闹矛盾了，整整一个月没见面。昨天逛街时突然碰到了，女友盯着她，然后眼泪哗啦啦的往下流。他说女友那一刻的眼神，让他想起四年前那个暮春的初遇，云鬓花颜，长裙飘飘，让他一生都沉浸其中。<br>  外面起风了，吹得树叶哗啦啦的乱响，城市的霓虹像巨大的火焰将夜空照亮。网吧里的音响放着北京一夜，A的嘴唇一合一闭，跟着轻轻哼起：<br>  …..<br>  不敢在午夜问路<br>  怕走到了百花深处<br>  人说百花的深处住着老情人<br>  缝着绣花鞋<br>  面容安详的老人依旧等着<br>  那出征的归人<br>  ……..</p>
<p>章节 38<br>  母亲走了几里山路到镇上给我打电话，问我什么时候回家，没说几句，我就听见她在那头哽咽。我告诉她过年才回家，她才稍微笑了笑，说那就好，那就好。母亲一生都在农村，未曾去过别的地方，最多就是在镇上赶集，卖点鸡蛋，或者地里的青菜。上一次回家看到她时，她已经是满脸皱纹了，一双手粗糙发黄，手掌起满了老茧。我知道她的艰辛，但是她却从未对我提起。她是我的母亲，我完全被她感染了，22年来从未向家里说过内心的苦闷和忧愁，我始终在对他们笑，我想他们知道，我很好。哪怕我只能住280一月的出租屋，一个星期吃一次肉，在城市里过着最卑微和最单调的生活。<br>  母亲说：要好好做人。<br>  最后半个月的晚班了。工资到手，我就准备换个离公司比较近的地方，一来省点车费，二来中午可以自己回家做饭。我把这些告诉了C。她高中毕业，没有手艺，只能做些简单的工作。我不能养她，也不能带她走。从我推开门那一瞬间开始，她已经不能融入我的生命了。<br>  她被另一个男人拥吻着，被另一个男人周身抚摸着，她闭着眼睛，长发散乱，呼吸急促，而她脖子上那暗红的印记，就像一个封印，让原本流淌的着的柔情，被牢牢冻住。<br>  我坐在大排档的橡胶椅上，手指轻轻弹着空荡荡的啤酒瓶，双眼死死盯着A：“你确定他是婊子？”<br>  他看着我：“你不觉得。”<br>  我靠在椅子上，仰面看着满载着群星夜空：“关我P事”</p>
<p>章节 39<br>  提前三天给老板打电话，说要辞职。老板在那头说：“好。”然后啪得一声挂掉电话。<br>  09年的8月29号早上，到新公司签合同。我来到这个城市四年了，这是第一份正式的工作。实习三个月，然后转正。给C打了个电话，说：“下午不去网吧了。老板来了的话，工资你先帮我拿下。”C在那头似乎很兴奋,连声说了几句好，又问：“合同签了？”我说：”恩”.然后支吾了几句，悄无声息的挂掉电话。<br>  新租的房子到公司只要走5分钟。一个小厨房，一个小厕所，一个卧室，没客厅。450一月、房东美其名曰简单公寓。的确挺简单，什么都是小的，小电视机，小冰箱，小柜子，就是床还勉强凑合。<br>  我没带C来这里。那天我告诉她说要搬走时。她先是朝我笑了笑，接着又低下了头。她一直是个聪明姑娘，知道有些事情无法改变：“我还要在这边上班呢。你先搬过去吧。”这话说得两面玲珑，大家都有台阶下。 有什么办法呢？我有钱我可以养你，我有人脉可以给一份工作，可是我什么都没有。庄子有句话说得真好：“相濡以沫，相呴以湿，不若相忘于江湖。”</p>
<p>章节 40（完结篇）<br>  上班的前一天开始收拾东西，C在一边帮着整理。8月份的工资是800整，交过房租后身上还有接近1000，那天收拾好东西，我和C坐在床上，相对无言很久。后来我站起身来，递给她500块钱：“你不是说要给家里买电视么。”<br>  这个城市从来都不属于我，C也一样，未来我将遇到的所有姑娘都一样。C低着头，始终没有接过钱。我只好把钱放在床上，拖着箱子提着包推门而出。那是500块，我曾经大半个月的工资，给了我生命中的第一女人。我说过了，不是我善良，因为已经明白人生难免有孤独和寂寞的时候，所以我不想一开始就无人陪伴，22年的孤寂已经把我折磨够了。买卖不成仁义在嘛，何必弄得反目成仇？留点小恩惠，给点小感动，说不定哪天就能吃回头草，吞回锅肉。对不？<br>  我昂着头走出那栋破烂不堪的楼房，我知道，一切都会重新开始。<br>  天黑前我把所有的东西都搬进新住处，地上扫得一尘不染。这时A给我打电话，我说什么事。他说你搬家了？我恩了一声。他沉默了好久，说我今天去那你住一晚上行不行。我没理由拒绝的。那天夜里我睡得很好，住处解决了，工作找到了，一切的问题都解决了。甚至连A什么时候起床离开都不知道，他只留了个纸条：我走了。<br>  翻身看看时间已经7点40了，我匆忙起身穿好衣服。挤了点牙膏冲进厕所，哪里有一面镜子，特别特别的大。我呆呆的站在门口，看见镜子里的A面孔发黄，头发凌乱，拿着牙刷的手正颤颤发抖，用一脸惊恐的表情望着我。（完）</p>
]]></content>
      <categories>
        <category>故事会</category>
      </categories>
      <tags>
        <tag>故事会</tag>
        <tag>帝吧</tag>
      </tags>
  </entry>
</search>
